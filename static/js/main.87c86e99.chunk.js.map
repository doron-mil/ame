{"version":3,"sources":["assets/images/arrow-black.svg","assets/oval.svg","assets/rectangle.svg","assets/images/arrow-white.svg","assets/images/drop-down.svg","assets/images/arrow-grey.svg","assets/images/model-earring.png","assets/images/model-earring-4sim.png","assets/red-oval.svg","assets/red-rectangle.svg","assets/images/model-earrings-identical.png","assets/images/model-earring-two.png","assets/images/model-necklace.png","assets/images/model-earrings-identical-4sim.png","assets/images/model-earring-two-4sim.png","assets/images/model-necklace-4sim.png","assets/images/img-yellow-gold-earring.png","assets/images/img-white-gold-earring.png","assets/images/img-yellow-gold-necklace.png","assets/images/img-white-gold-necklace.png","components/ScreensName.ts","models/Interfaces.ts","assets/Constants.ts","components/SharedComponents/MorseTextInput/MorseTextInput.tsx","components/SharedComponents/BottomBar/BottomBar.tsx","components/SharedComponents/Card/CardComponent.tsx","components/SharedComponents/MorseMenu/MorseMenu.tsx","components/screens/MorsePage/MorsePage.tsx","redux/actions/MainAction.ts","redux/actions/types.ts","components/SharedComponents/Material/MaterialComponent.tsx","components/SharedComponents/GridComponent/FirstColumnGrid.tsx","components/SharedComponents/GridComponent/SecondColumnGrid.tsx","Services/shopify.ts","components/screens/HomePage/HomePage.tsx","components/Main.tsx","redux/reducers/MainReducer.ts","redux/store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","AppRoutes","TYPE","Types","typeToString","key","WHITE_GOLD","YELLOW_GOLD","EARRING","NECKLACE","DISTINCT_PAIR","IDENTICAL_PAIR","SINGLE_NECKLACE","SINGLE_EARRING","stringToType","stringType","remainingTypes","displayName","GOLD","ALPHA_TO_MORSE","isMobile","document","documentElement","clientWidth","isSamsungBrowser","test","navigator","userAgent","vendor","match","MorseTextInput","props","handleChange","event","a","target","value","toString","setState","text","dashLength","dotLength","chainLength","indexError","morseSum","dotSum","dashSum","charSum","split","map","c","index","morseChar","toUpperCase","state","forEach","char","onChange","slice","length","totalPrice","join","focus","className","this","style","border","borderColor","autoFocus","ref","input","inputRef","textIndent","hidePlaceholder","Morse","toLocaleUpperCase","React","Component","memo","additionalClass","dangerouslySetInnerHTML","__html","cc","red_circle","circle","red_dash","dash","withSpaces","BottomBar","notSelectedArrayHover","isMenuOpen","isMaterialMobileOpen","isCategoryMobileOpen","isSecretMobileOpen","userChoice","category","type","selectedType","keyinput","aIsSecondChain","console","log","getSelected","total","secret","firstChain","chainPriceAndWord","secondChain","parseFloat","toFixed","replace","enableCategory","enableMaterial","material","enablePrice","onClick","handleClickedItem","SecretButton","handleClick","handleEditSecret","bind","isSecondChain","formatTotalPrice","cardClicked","buttonTextMobile","src","arrow","alt","dropdown_icon","window","location","reload","trim","chainCoreLength","chainText4Button","CardComponent","getClassName","isAfterBuyPage","isMaterialPage","getSelectedCardClass","isCardSelected","selectedCard","hover","prevProps","onMouseMove","mouseText","cardType","backgroundImage","onMouseEnter","onMouseLeave","MorseMenu","onClose","Object","entries","val","tdKey","xmlns","width","height","viewBox","cx","cy","r","fill","fillRule","transform","d","MorsePage","handleMouseMove","e","x","clientX","y","clientY","chain","chainDetails","card","duplicateMorse","step","onMorseType","handleBuy","isAfterBuy","buttons","enable","enable2","stepsNumber","arrow_black","Fragment","handleNext","arrow_grey","handleBack","getTextMargin","shiftMargin","isBuyPage","morseHover","morseMenuOpen","selectEventMobile","finishMobileButton","resetMorse","backdropFilter","BackToShop","opacity","inputFoucs","MorseChain","rightNecklaceClass","leftNecklaceClass","top","left","DotIcon","isFill","DashIcon","marginTop","marginRight","divKey","p","iconIndex","iconKey","connect","mainState","slides","dispatch","typeChoice","choice","MaterialComponent","mouseDirection","hoverWhite","hoverYellow","animation","slider","white","yellow","FirstColumnGrid","unlisten","getMouseDirection","backLogic","buybtn","history","onBack","handleSelect","forceOpen","currentType","currentIndex","push","getNe","prevState","handleFinish","handleMaterial","onMaterialClicked","oldX","selectedBottom","slide","cards","findIndex","then","listen","b","onEdit","selectMobileButton","finishMobile","slideIndex","title","simImage","image","buyPage","buyAction","pageX","SecondColumnGrid","backgroundColor","client","Client","buildClient","domain","storefrontAccessToken","addLineItems","checkoutId","lineItems","checkout","fetchProductByHandle","handle","product","fetchByHandle","HomePage","handleEditBtn","showProductDetails","hideBottomBar","resetChain","handleBottomBarClicked","categoryChoice","styleChoice","materialChoice","isTyping","chainPriceAndDetails","buttonText","dotHandle","dashHandle","Promise","all","create","shop","data","morseCustomJewelry","yellowDot","yellowDash","variantId","variants","id","yellowDotVariantId","yellowDashVariantId","morsecjLineItem","quantity","customAttributes","dotsQty","dashesQty","cart","webUrl","innerWidth","innerHeight","donePhase","clickedMaterial","currentMaterial","undefined","selectClicked","isMaterial","screenType","CATEGORY","MATERTIAL","STYLE","MobileLoading","selected","ProductDetails","textDecoration","Main","path","MORSE","component","ROOT","getAppRoutes","initState","model_earring","model_earring_4sim","model_necklace","model_necklace_4sim","necklace_white","necklace_yellow","model_earrings_identical","model_earrings_identical_4sim","model_earrings_two","model_earrings_two_4sim","earring_white","earring_yellow","price","MainReducer","action","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","Boolean","hostname","TagManager","initialize","gtmId","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,qBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,gD,qCCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,sD,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,2D,gBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,sD,gBCA3CD,EAAOC,QAAU,IAA0B,qD,yPCA/BC,E,oGAAAA,K,aAAAA,E,eAAAA,E,qBAAAA,E,eAAAA,E,SAAAA,M,SCYAC,EAaAC,E,8DAbAD,O,uBAAAA,I,qBAAAA,I,2BAAAA,I,6BAAAA,I,mCAAAA,I,mCAAAA,I,iCAAAA,I,qCAAAA,I,gBAAAA,M,cAaAC,O,iBAAAA,I,yBAAAA,I,wBAAAA,M,KAkCL,IAAOC,EAAoB,SAACC,GAEhC,OAAOA,GAEH,KAAKH,EAAKI,WACV,MAAO,aAEN,KAAKJ,EAAKK,YACV,MAAO,cAEP,KAAKL,EAAKM,QACX,MAAO,UAEN,KAAKN,EAAKO,SACX,MAAO,WAEN,KAAKP,EAAKQ,cACX,MAAO,gBAEN,KAAKR,EAAKS,eACX,MAAO,iBAEN,KAAKT,EAAKU,gBACX,MAAO,kBAEN,KAAKV,EAAKW,eACX,MAAO,iBAEP,QACI,OAAO,OAKJC,EAAoB,SAACC,GAE/B,OAAOA,GACH,IAAK,aACL,OAAOb,EAAKI,WAEZ,IAAK,cACJ,OAAOJ,EAAKK,YAEZ,IAAK,UACL,OAAOL,EAAKM,QAEb,IAAK,WACJ,OAAON,EAAKO,SAEb,IAAK,gBACJ,OAAOP,EAAKQ,cAEb,IAAK,iBACJ,OAAOR,EAAKS,eAEb,IAAK,kBACJ,OAAOT,EAAKU,gBAEb,IAAK,iBACJ,OAAOV,EAAKW,eAEb,QACI,OAAOX,EAAKM,UAOVQ,EAAqB,SAACX,GAChC,OAAQA,GACJ,KAAKH,EAAKI,WACN,MAAO,CAAC,CAACD,IAAKH,EAAKK,YAAaU,YAAa,gBACjD,KAAKf,EAAKK,YACN,MAAO,CAAC,CAACF,IAAKH,EAAKI,WAAYW,YAAa,eAChD,KAAKf,EAAKgB,KACN,MAAO,CAAC,CAACb,IAAKH,EAAKI,WAAYW,YAAa,cACxC,CAACZ,IAAKH,EAAKK,YAAaU,YAAa,gBAC7C,KAAKf,EAAKM,QACN,MAAO,CACH,CAACH,IAAKH,EAAKO,SAAUQ,YAAa,YAClC,CAACZ,IAAKH,EAAKQ,cAAeO,YAAa,uBACvC,CAACZ,IAAKH,EAAKS,eAAgBM,YAAa,wBACxC,CAACZ,IAAKH,EAAKW,eAAgBI,YAAa,uBAEhD,KAAKf,EAAKO,SACN,MAAO,CACH,CAACJ,IAAKH,EAAKQ,cAAeO,YAAa,uBACvC,CAACZ,IAAKH,EAAKS,eAAgBM,YAAa,wBACxC,CAACZ,IAAKH,EAAKW,eAAgBI,YAAa,sBAEhD,KAAKf,EAAKQ,cACN,MAAO,CACH,CAACL,IAAKH,EAAKO,SAAUQ,YAAa,YAClC,CAACZ,IAAKH,EAAKS,eAAgBM,YAAa,wBACxC,CAACZ,IAAKH,EAAKW,eAAgBI,YAAa,sBAEhD,KAAKf,EAAKS,eACN,MAAO,CACH,CAACN,IAAKH,EAAKO,SAAUQ,YAAa,YAClC,CAACZ,IAAKH,EAAKQ,cAAeO,YAAa,uBACvC,CAACZ,IAAKH,EAAKW,eAAgBI,YAAa,sBAEhD,KAAKf,EAAKW,eACN,MAAO,CACH,CAACR,IAAKH,EAAKO,SAAUQ,YAAa,YAClC,CAACZ,IAAKH,EAAKQ,cAAeO,YAAa,uBACvC,CAACZ,IAAKH,EAAKS,eAAgBM,YAAa,yBAEhD,QACI,MAAO,KCjKNE,G,MAA6C,CACtD,EAAK,KACL,EAAK,OACL,EAAK,OACL,EAAK,MACL,EAAK,IACL,EAAK,OACL,EAAK,MACL,EAAK,OACL,EAAK,KACL,EAAK,OACL,EAAK,MACL,EAAK,OACL,EAAK,KACL,EAAK,KACL,EAAK,MACL,EAAK,OACL,EAAK,OACL,EAAK,MACL,EAAK,MACL,EAAK,IACL,EAAK,MACL,EAAK,OACL,EAAK,MACL,EAAK,OACL,EAAK,OACL,EAAK,OACL,IAAK,MAyCIC,EAAWC,SAASC,gBAAgBC,YAAc,IAsBlDC,GAdW,SAASC,KAAKC,UAAUC,YAAc,aAAaF,KAAKC,UAAUE,QAOlE,SAASH,KAAKC,UAAUC,YAAe,SAASF,KAAKC,UAAUC,WAI9D,UAAUF,KAAKC,UAAUC,WAGlBD,UAAUC,UAAUE,MAAM,oBAAsBT,G,oECpEnEU,EAAb,kDAGI,WAAYC,GAAe,IAAD,8BACtB,cAAMA,IAIVC,aAL0B,uCAKX,WAAOC,GAAP,uBAAAC,EAAA,0DACP,8BAA8BT,KAAKQ,EAAME,OAAOC,MAAMC,YAD/C,wBAEDD,EAAgBH,EAAME,OAAOC,MAF5B,SAKD,EAAKE,SAAS,CAACC,KAAMH,EAAOI,WAAY,EAAGC,UAAW,EAAGC,YAAa,EAAGC,YAAa,IALrF,OAMHC,EAAW,EACXC,EAAS,EACTC,EAAU,EACVC,EAAU,EACdX,EAAMY,MAAM,IAAIC,IAAhB,uCAAoB,WAAOC,EAAWC,GAAlB,eAAAjB,EAAA,6DACVkB,EAAYjC,EAAe+B,EAAEG,eAAeL,MAAM,KACzB,IAA3B,EAAKM,MAAMX,YACXI,KAE2B,IAA3B,EAAKO,MAAMX,YACXS,EAAUG,SAAQ,SAACC,IACgB,IAA3B,EAAKF,MAAMX,aAEE,MAATa,GACA,EAAKlB,SAAS,CACVG,UAAW,EAAKa,MAAMb,UAAY,EAClCC,YAAa,EAAKY,MAAMZ,YAAc,IAG1CE,GAAY,EACZC,GAAU,GAEM,MAATW,GACP,EAAKlB,SAAS,CACVE,WAAY,EAAKc,MAAMd,WAAa,EACpCE,YAAa,EAAKY,MAAMZ,YAAc,IAE1CE,GAAY,EACZE,GAAW,GACK,MAATU,IACP,EAAKlB,SAAS,CAACI,YAAa,EAAKY,MAAMZ,YAAc,MACrDE,GAAY,KAEZA,EApEb,MAoEiE,IAA3B,EAAKU,MAAMX,aACpC,EAAKZ,MAAM0B,SAASrB,EAAMsB,MAAM,EAAGX,GAAUI,EAAO,CAChDQ,OAAQf,EACRC,OAAQA,EACRC,QAASA,EACTc,WAxEX,IAwEwBf,EAvEvB,IAuE4CC,IAEtC,EAAKR,SAAS,CAACK,WAAYQ,KAG/B,EAAKpB,MAAM0B,SAASrB,EAAMsB,MAAM,EAAGX,GAAU,EAAKO,MAAMX,WAAY,CAChEgB,OAAQf,EACRC,OAAQA,EACRC,QAASA,EACTc,WAjFP,IAiFoBf,EAhFnB,IAgFwCC,QA3ClC,kBAgDTM,EAAUS,KAAK,KAhDN,2CAApB,yDAiDGA,KAAK,IAEa,IAAjBzB,EAAMuB,QACN,EAAK5B,MAAM0B,SAASrB,GAAQ,EAAG,CAACuB,OAAQ,EAAGd,OAAQ,EAAGC,QAAS,EAAGc,WAAY,IA9D3E,4CALW,sDAEtB,EAAKN,MAAQ,CAACf,KAAM,GAAIC,WAAY,EAAGC,UAAW,EAAGC,YAAa,EAAGC,YAAa,EAAGmB,OAAO,GAFtE,EAH9B,qDA2Ec,IAAD,OACL,OAAQ,yBAAKC,UAAW,qBAAuBC,KAAKjC,MAAMgC,WAClD,yBAAKA,UAAW,uBAAwBE,MAAO,CAACC,OAAQ,EAAGC,YAAa,UACpE,2BAAOC,UAAWJ,KAAKV,MAAMQ,MACtBO,IAAK,SAACC,GACF,EAAKvC,MAAMwC,SAASD,IAExBL,MAAO,CAACO,WAAYR,KAAKV,MAAMf,KAAKoB,OAAS,EAAI,QAAU,KAC3DI,UAAW,mBACX3B,OAAkC,IAA3B4B,KAAKV,MAAMX,WAAoBqB,KAAKV,MAAMf,KAAOyB,KAAKV,MAAMf,KAAKmB,MAAM,EAAGM,KAAKV,MAAMX,YAC5Fc,SAAUO,KAAKhC,eACM,IAA3BgC,KAAKV,MAAMf,KAAKoB,SAAiBK,KAAKjC,MAAM0C,iBAC7C,yBAAKV,UAAU,eAAf,QACA,kBAACW,EAAD,CAAOnC,KAAMyB,KAAKV,MAAMf,KAAMI,WAAYqB,KAAKV,MAAMX,cAGzD,yBAAKoB,UAAW,mBAA+C,IAA3BC,KAAKV,MAAMX,WAAoB,uBAAyB,KACxF,yBAAKoB,UAAU,iBACV,gCAAgCY,sBAEnCvD,GAAY,yBAAK2C,UAAU,eAAf,OACH,oCAAoCY,oBAAoB,6BAC9D,8EAAsCA,2BAjG/D,GAAoCC,IAAMC,WA2G7BH,EAAQE,IAAME,MAAK,SAAC/C,GAC7B,OACI,yBAAKgC,UAAS,0BAAqBhC,EAAMgD,iBACpCC,wBAAyB,CACrBC,OAAO,GAAD,OACFlD,EAAMQ,KAAKmB,MAAM,GAAyB,IAAtB3B,EAAMY,WAAqBZ,EAAMY,WAAa,EAAKZ,EAAMQ,KAAKoB,QAAQX,MAAM,IAAIC,KAAI,SAACC,EAAWC,GAChH,MAAM,gCAAN,OAAuCpB,EAAMQ,KAAKoB,OAAS,EAAI,GAAK5B,EAAMQ,KAAKoB,OAAS,GAAK,kBAAoB,sBAAjH,kCACFR,IAAUpB,EAAMY,aAAoC,IAAtBZ,EAAMY,WAAoB,MAAQ,GAD9D,aACqEO,EADrE,+BAC6F/B,EAAe+B,EAAEG,eAAeL,MAAM,IAAIC,KAAI,SAACiC,GAExI,MAAW,MAAPA,EACI/B,IAAUpB,EAAMY,aAAoC,IAAtBZ,EAAMY,WAC9B,YAAN,OAAmBwC,IAAnB,qCACE,YAAN,OAAmBC,IAAnB,qCACc,MAAPF,EACH/B,IAAUpB,EAAMY,aAAoC,IAAtBZ,EAAMY,WAC9B,YAAN,OAAmB0C,IAAnB,qCACE,YAAN,OAAmBC,IAAnB,sCACc,MAAPJ,IACAnD,EAAMwD,WAAN,SAA8B,OAG1C1B,KAAK,IAfR,qBAgBDA,KAAK,W,kCCrIhB2B,EAAb,kDAGI,WAAYzD,GAAe,IAAD,8BACtB,cAAMA,IACDuB,MAAQ,CACTmC,sBAAuB,GACvBC,YAAY,EACZC,sBAAsB,EACtBC,sBAAsB,EACtBC,oBAAoB,GAPF,EAH9B,gEAeQ7B,KAAK1B,SAAS,CACVmD,sBAAwBzB,KAAKjC,MAAM+D,WAGwC,GAH3B9E,EAAeF,EAAa,YAExC,KAAhCkD,KAAKjC,MAAM+D,WAAW7B,MAAejD,EAAeF,EAAakD,KAAKjC,MAAM+D,WAAWC,WACjF/E,EAAeF,EAAakD,KAAKjC,MAAM+D,WAAW7B,QAAU,OAnBlF,wCAuBsBf,EAAQ8C,GACtBhC,KAAKjC,MAAMkE,aAAa,CAAC7D,MAAOc,EAAGgD,SAAUF,MAxBrD,yCA2B8C,IAAzBG,EAAwB,wDACrCC,QAAQC,IAAI,OAAQF,GACpBnC,KAAKjC,MAAMuE,aAAY,EAAM,UA7BrC,yCAiCQ,IAAMC,EAAQvC,KAAKjC,MAAMyE,OAAOC,WAAWC,kBAAkB9C,WACzDI,KAAKjC,MAAMyE,OAAOG,YAAYD,kBAAkB9C,WAEpD,OADuBgD,WAAWL,GAAOM,QAAQ,GAAGC,QAAQ,0BAA2B,SAnC/F,+BAuCc,IAAD,OAECC,EAA2D,IAA1C/C,KAAKjC,MAAM+D,WAAWC,SAASpC,OAChDqD,EAA2D,IAA1ChD,KAAKjC,MAAM+D,WAAWmB,SAAStD,OAChDuD,EAAclD,KAAKjC,MAAMyE,QAAqE,IAA1DxC,KAAKjC,MAAMyE,OAAOC,WAAWC,kBAAkB/C,OAGzF,OACI,yBAAKI,UAAS,2BAAsBC,KAAKjC,MAAMgC,UAAYC,KAAKjC,MAAMgC,UAAY,KAC9E,yBAAKA,UAAS,qBAAiBgD,EAA4C,GAA3B,2BAC3C/C,KAAKjC,MAAM+D,WAAgD,KAAnC9B,KAAKjC,MAAM+D,WAAWC,SAAkB,WAAa/B,KAAKjC,MAAM+D,WAAWC,SAAW,WAC/G,sCAAc/B,KAAKjC,MAAM+D,WAA6C,KAAhC9B,KAAKjC,MAAM+D,WAAW7B,MAAe,GAArC,YAA+CD,KAAKjC,MAAM+D,WAAW7B,OAAU,IAEpH8C,GAAkB,yBAAKhD,UAAS,oCAC5BC,KAAKjC,MAAM+D,WAAW7B,MAAQjD,EAAeF,EAAakD,KAAKjC,MAAM+D,WAAW7B,QAAQhB,KAAI,SAACC,EAAQC,GAClG,OAAQ,yBAAK9C,IAAK8C,EAAOY,UAAU,0CACtBoD,QAAS,kBAAM,EAAKC,kBAAkBlE,EAAG,WAAWA,EAAEjC,gBAClED,EAAeF,EAAakD,KAAKjC,MAAM+D,WAAWC,WAAW9C,KAAI,SAACC,EAAQC,GAC3E,OAAQ,yBAAK9C,IAAK8C,EAAOY,UAAU,0CACtBoD,QAAS,kBAAM,EAAKC,kBAAkBlE,EAAG,WAAWA,EAAEjC,mBAM7E+C,KAAKjC,MAAMyE,QAAU,yBAAKzC,UAAU,oCAAf,UACtBC,KAAKjC,MAAMyE,QACZ,oCACI,kBAACa,EAAD,CAAc9E,KAAMyB,KAAKjC,MAAMyE,OAAOC,WAAWC,kBAAkBnE,KACrD+E,YAAatD,KAAKuD,iBAAiBC,KAAKxD,QACtD,kBAACqD,EAAD,CAAc9E,KAAMyB,KAAKjC,MAAMyE,OAAOG,YAAYD,kBAAkBnE,KACtDkF,eAAe,EACfH,YAAatD,KAAKuD,iBAAiBC,KAAKxD,SAI1D,yBAAKD,UAAS,oBAAgBiD,EAA4C,GAA3B,2BAC1CA,EAAiBhD,KAAKjC,MAAM+D,WAAWmB,SAAW,WAElDD,GAAkB,yBAAKjD,UAAU,oBAC7BiD,EAAiBhG,EAAeF,EAAakD,KAAKjC,MAAM+D,WAAWmB,WAAWhE,KAAI,SAACC,EAAQC,GACxF,OAAQ,yBAAK9C,IAAK8C,EAAOY,UAAU,gBACtBoD,QAAS,kBAAM,EAAKC,kBAAkBlE,EAAG,cAAcA,EAAEjC,gBACrED,EAAed,EAAKgB,MAAM+B,KAAI,SAACC,EAAQC,GACxC,OAAQ,yBAAK9C,IAAK8C,EAAOY,UAAU,gBACtBoD,QAAS,kBAAM,EAAKC,kBAAkBlE,EAAG,cAAcA,EAAEjC,kBAKlF,yBAAK8C,UAAS,6BAAyBmD,EAAyC,GAA3B,2BAArD,UACYlD,KAAKjC,MAAMyE,OAAX,WAAwBxC,KAAK0D,oBAAuB,KAE3DR,GAAe,yBAAKnD,UAAU,kBAC3B,yBAAKA,UAAU,cAAf,oBAA+C,0BAAMA,UAAU,cD5G7D,KC8GE,0BACIA,UAAW,oBADf,IACqCmD,EAAelD,KAAKjC,MAAMyE,OAAOC,WAAWC,kBAAkB5D,QAC/FkB,KAAKjC,MAAMyE,OAAOG,YAAYD,kBAAkB5D,QAChD,IACR,yBAAKiB,UAAU,cAAf,sBAE2B,0BAAMA,UAAU,cDrH1C,KCsHG,0BACIA,UAAW,oBADf,IACqCmD,EAAelD,KAAKjC,MAAMyE,OAAOC,WAAWC,kBAAkB7D,OAC7FmB,KAAKjC,MAAMyE,OAAOG,YAAYD,kBAAkB7D,OAClD,MAQhB,yBAAKkB,UAAS,mCACToD,QAAS,kBAAM,EAAK7E,SAAS,CAACoD,YAAa,EAAKpC,MAAMoC,eACvD,yBAAK3B,UAAU,qBAAf,MAEJ,yBACIA,UAAS,kDAA8CC,KAAKjC,MAAM4F,YAAiC,GAAnB,kBAChFR,QAAS,WACD,EAAKpF,MAAM4F,aACX,EAAK5F,MAAMuE,aAAY,KAG9BtC,KAAKjC,MAAM6F,iBAPhB,IAOkC,yBAAKC,IAAKC,IAAO/D,UAAU,QAAQgE,IAAI,MAGxE/D,KAAKV,MAAMoC,YAAc,yBAAK3B,UAAS,eACpC,yBAAKA,UAAU,gBAAgBoD,QAASJ,EAAiB,WACrD,EAAKzE,SAAS,CAACsD,sBAAuB,EAAKtC,MAAMsC,uBACjD,EAAKtD,SAAS,CAACuD,oBAAoB,IACnC,EAAKvD,SAAS,CAACqD,sBAAsB,KAErC,cAEC3B,KAAKjC,MAAM+D,WAAgD,KAAnC9B,KAAKjC,MAAM+D,WAAWC,SAAkB,WAAa/B,KAAKjC,MAAM+D,WAAWC,SAAW,WAC/G,mCAAS/B,KAAKjC,MAAM+D,WAA6C,KAAhC9B,KAAKjC,MAAM+D,WAAW7B,MAAe,GAAK,MAAQD,KAAKjC,MAAM+D,WAAW7B,MAAQ,IACjH,yBAAK4D,IAAKG,IAAejE,UAAU,gBAAgBgE,IAAI,MAE1D/D,KAAKV,MAAMsC,uBAAyB5B,KAAKjC,MAAM+D,WAAW7B,MAAQjD,EAAeF,EAAakD,KAAKjC,MAAM+D,WAAW7B,QAAQhB,KAAI,SAACC,GAC9H,OAAQ,yBAAKa,UAAU,oCAAoCoD,QAAS,WAChE,EAAKC,kBAAkBlE,EAAG,SAC1B+E,OAAOC,SAASC,WAChBjF,EAAEjC,gBACLD,EAAeF,EAAakD,KAAKjC,MAAM+D,WAAWC,WAAW9C,KAAI,SAACC,GACnE,OAAQ,yBAAKa,UAAU,oCAAoCoD,QAAS,WAChE,EAAKC,kBAAkBlE,EAAG,SAC1B+E,OAAOC,SAASC,WAChBjF,EAAEjC,iBAEV,yBAAK8C,UAAU,gBAAgBoD,QAASD,EAAc,WAClD,EAAK5E,SAAS,CACVuD,oBAAqB,EAAKvC,MAAMuC,mBAChCD,sBAAsB,EAAOD,sBAAsB,KAEvD,cAEC3B,KAAKjC,MAAMyE,OAAWxC,KAAKjC,MAAMyE,OAAOC,WAAWC,kBAAkBnE,KAAMc,cAAgB,OAC9B,GAAxDW,KAAKjC,MAAMyE,OAAOC,WAAWC,kBAAkB/C,QAAakD,QAAQ,GAAK,MACtE7C,KAAKjC,MAAMyE,OAAOG,YAAYD,kBAAkB/C,OAAS,EAAMK,KAAKjC,MAAMyE,OAAOG,YAAYD,kBAAkBnE,KAAMc,cAAgB,OACxE,GAAzDW,KAAKjC,MAAMyE,OAAOG,YAAYD,kBAAkB/C,QAAakD,QAAQ,GAAK,KAAQ,IAAQ,SACvG,yBAAKgB,IAAKG,IAAejE,UAAU,gBAAgBgE,IAAI,MAE1D/D,KAAKV,MAAMuC,oBACR,yBAAK9B,UAAU,oCAAoCoD,QAAS,WACxDf,QAAQC,IAAI,UADhB,QAIJ,yBAAKtC,UAAU,gBAAgBoD,QAASH,EAAiB,WACrD,EAAK1E,SAAS,CAACqD,sBAAuB,EAAKrC,MAAMqC,uBACjD,EAAKrD,SAAS,CAACsD,sBAAsB,IACrC,EAAKtD,SAAS,CAACuD,oBAAoB,KACnC,cAEC7B,KAAKjC,MAAM+D,WAAgD,KAAnC9B,KAAKjC,MAAM+D,WAAWmB,SAAkB,WAAajD,KAAKjC,MAAM+D,WAAWmB,SAAW,WAC/G,yBAAKY,IAAKG,IAAejE,UAAU,gBAAgBgE,IAAI,MAE1D/D,KAAKV,MAAMqC,uBAAyB3B,KAAKjC,MAAM+D,WAAWmB,SAAWjG,EAAeF,EAAakD,KAAKjC,MAAM+D,WAAWmB,WAAWhE,KAAI,SAACC,GACpI,OAAQ,yBAAKa,UAAU,oCACVoD,QAAS,kBAAM,EAAKC,kBAAkBlE,EAAG,cAAcA,EAAEjC,gBACrED,EAAed,EAAKgB,MAAM+B,KAAI,SAACC,GAChC,OAAQ,yBAAKa,UAAU,oCACVoD,QAAS,kBAAM,EAAKC,kBAAkBlE,EAAG,cAAcA,EAAEjC,uBAtL9F,GAA+B2D,IAAMC,WA8L/BwC,EAAezC,IAAME,MAAK,SAAC/C,GAC7B,IAAKA,EAAMQ,MAAQ,KAAOR,EAAMQ,KAAK6F,OACjC,OAAO,qCAEX,IAAMC,GAAuC,GAApBtG,EAAMQ,KAAKoB,QAAakD,QAAQ,GACnDyB,EAAgB,UAAMvG,EAAMQ,KAAKc,cAAjB,cAAoCgF,EAApC,OAEtB,OACI,yBAAKtE,UAAU,aACVuE,EACD,yBAAKvE,UAAU,oBACX,yBAAKA,UAAU,gBACVoD,QAAS,kBAAMpF,EAAMuF,YAAYvF,EAAM0F,iBAD5C,oBC3MHc,G,YAAb,kDAWI,WAAYxG,GAAe,IAAD,8BACtB,cAAMA,IAVVyG,aAAe,WACX,OAAI,EAAKzG,MAAM0G,eACJ,GACP,EAAK1G,MAAM2G,eACJ,aACJ,IAIe,EAS1BC,qBAAuB,WACnB,OAAI,EAAK5G,MAAM6G,eACJ,EAAK7G,MAAM8G,aAAe,aAAe,WAE7C,IAXP,EAAKvF,MAAQ,CAACwF,OAAO,GAFC,EAX9B,+DAgBuBC,MAhBvB,+BA2Bc,IAAD,OACL,OACI,yBACIhF,UAAS,uBAAkBC,KAAK2E,uBAAvB,YAAiD3E,KAAKV,MAAMwF,MAAQ,QAAU,GAA9E,YAAoF9E,KAAKjC,MAAM2G,eAAiB,aAAe,GAA/H,YAAqI1E,KAAKwE,gBACnJrB,QAASnD,KAAKjC,MAAMoF,QAAQK,KAAKxD,MACjCgF,YAAa,kBAAM,EAAKjH,MAAMiH,YAAY,EAAKjH,MAAMkH,aAErD,yBAAKlF,UAAU,WAEbC,KAAKV,MAAMwF,QAAU9E,KAAKjC,MAAM6G,gBAClC,yBAAK7E,UAAU,YACX,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,SACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,iBAGnB,yBACIA,UAAS,sBAAiBC,KAAKjC,MAAM0G,gBAAkBzE,KAAKjC,MAAM2G,eAAiB,eAAiB,GAA3F,mCACP1E,KAAKjC,MAAM6G,gBAAkB5E,KAAKjC,MAAMmH,WAAahJ,EAAKO,SAAW,gBAAkB,cACzFwD,MAAO,CAACkF,gBAAgB,OAAD,OAASnF,KAAKjC,MAAMoH,gBAApB,MACvBC,aAAc,WACV,EAAK9G,SAAS,CAACwG,OAAO,IACtB,EAAK/G,MAAMqH,gBAEfC,aAAc,WACV,EAAK/G,SAAS,CAACwG,OAAO,IACtB,EAAK/G,MAAMsH,iBAEf,yBAAKtF,UAAU,cAIlBC,KAAKV,MAAMwF,OACZ,yBAAK/E,UAAU,eACVC,KAAKjC,MAAMkH,gBAjEhC,GAAmCrE,IAAMC,Y,gBCV5ByE,G,MAAb,kDAGI,WAAYvH,GAAe,IAAD,8BACtB,cAAMA,IACDuB,MAAQ,CAACwF,OAAO,GAFC,EAH9B,+DAQuBC,MARvB,+BAYc,IAAD,OACL,OACI,oCACI,yBAAKhF,UAAS,6BAAwBC,KAAKjC,MAAMgC,YAC7C,yBAAKA,UAAU,aAAaoD,QAAS,kBAAM,EAAKpF,MAAMwH,aACtD,yBAAKxF,UAAU,gBACX,+BACI,+BACCyF,OAAOC,QAAQtI,GAAgB8B,KAAI,YAAmB,IAAD,mBAAhB5C,EAAgB,KAAX+B,EAAW,KAClD,GAAIA,EAAO,CACP,IAAIsH,EAAMtH,EAAMC,WAEhB,OACI,wBAAI0B,UAAU,aAAa1D,IAAKA,GAC5B,4BAAKA,GAEDqJ,EAAI1G,MAAM,IAAIC,KAAI,SAACC,EAAQC,GACvB,IAAMwG,EAAK,UAAMtJ,EAAN,eAAgB8C,GAC3B,MAAU,MAAND,EACO,wBAAIa,UAAU,OAAO1D,IAAKsJ,GAAO,yBAAK9B,IAAG,UAAKzC,KACRrB,UAAU,YACVgE,IAAI,MAEpC,MAAN7E,EACA,wBAAIa,UAAU,OAAO1D,IAAKsJ,GAAO,yBAAK9B,IAAG,UAAKvC,KACRvB,UAAU,uBACVgE,IAAI,MAG9C,SAK3B,OAAO,WAOnB,yBAAKhE,UAAU,uBACX,2BAAOA,UAAU,gBACb,+BACCyF,OAAOC,QAAQtI,GAAgBuC,MAAM,EAAG,IAAIT,KAAI,YAAmB,IAAD,mBAAhB5C,EAAgB,KAAX+B,EAAW,KAC/D,GAAIA,EAAO,CACP,IAAIsH,EAAMtH,EAAMC,WAEhB,OACI,wBAAI0B,UAAU,aAAa1D,IAAKA,GAC5B,4BAAKA,GAEDqJ,EAAI1G,MAAM,IAAIC,KAAI,SAACC,EAAQC,GACvB,IAAMwG,EAAK,UAAMtJ,EAAN,eAAgB8C,GAC3B,MAAU,MAAND,EACO,wBAAIa,UAAU,OAAO1D,IAAKsJ,GAC7B,yBAAK9B,IAAG,UAAKzC,KAAUrB,UAAU,YAAYgE,IAAI,MAExC,MAAN7E,EACA,wBAAIa,UAAU,OAAO1D,IAAKsJ,GAC7B,yBAAK9B,IAAG,UAAKvC,KACRvB,UAAU,uBAAuBgE,IAAI,MAG3C,SAM3B,OAAO,UAIf,2BAAOhE,UAAU,gBACb,+BACCyF,OAAOC,QAAQtI,GAAgBuC,MAAM,GAAI,IAAIT,KAAI,YAAmB,IAAD,mBAAhB5C,EAAgB,KAAX+B,EAAW,KAChE,GAAIA,EAAO,CACP,IAAIsH,EAAMtH,EAAMC,WAEhB,OACI,wBAAI0B,UAAU,aAAa1D,IAAKA,GAC5B,4BAAKA,GAEDqJ,EAAI1G,MAAM,IAAIC,KAAI,SAACC,EAAQC,GACvB,IAAMwG,EAAK,UAAMtJ,EAAN,eAAgB8C,GAC3B,MAAU,MAAND,EACO,wBAAIa,UAAU,OAAO1D,IAAKsJ,GAC7B,yBAAK9B,IAAG,UAAKzC,KAAUrB,UAAU,YAAYgE,IAAI,MAExC,MAAN7E,EACA,wBAAIa,UAAU,OAAO1D,IAAKsJ,GAC7B,yBAAK9B,IAAG,UAAKvC,KAAQvB,UAAU,uBAC1BgE,IAAI,MAGV,SAM3B,OAAO,WAMnB,yBAAKhE,UAAU,mBACX,yBAAKA,UAAU,wBACX,yBAAK6F,MAAM,6BAA6BC,MAAM,IAAIC,OAAO,IAAIC,QAAQ,WACjE,4BAAQC,GAAG,MAAMC,GAAG,MAAMC,EAAE,IAAIC,KAAK,OAAOC,SAAS,UAC7CC,UAAU,0BAH1B,YAQA,yBAAKtG,UAAU,wBACX,yBAAK6F,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,IAAIC,QAAQ,YAClE,0BAAMI,KAAK,OAAOC,SAAS,UAAUE,EAAE,wBACjCD,UAAU,0BAHxB,cASR,yBAAKtG,UAAS,2BAAsBC,KAAKjC,MAAMgC,WAAaoD,QAAS,kBAAM,EAAKpF,MAAMwH,kBA1ItG,GAA+B3E,IAAMC,Y,kCCwCxB0F,EAAb,kDAGI,WAAYxI,GAAe,IAAD,8BACtB,cAAMA,IAsBVyI,gBAAkB,SAACC,GACf,EAAKnI,SAAS,CACVoI,EAAGD,EAAEE,QACLC,EAAGH,EAAEI,WA1Ba,EA8B1B7I,aA9B0B,uCA8BX,WAAO8I,EAAenI,EAAoBoI,GAA1C,eAAA7I,EAAA,yDAELwE,EAAoB,CACtBnE,KAAMuI,EACNnH,OAAQoH,EAAapH,OACrBC,WAAYmH,EAAanH,WACzBd,QAASiI,EAAajI,QACtBD,OAAQkI,EAAalI,SAGrB,EAAKd,MAAMiJ,KAAKC,eAVT,gCAWD,EAAK3I,SAAS,CAChBqE,YAAa,CAACmE,QAAOnI,aAAY+D,qBACjCD,WAAY,CAACqE,QAAOnI,aAAY+D,uBAb7B,iCAiBiB,IAApB,EAAK3E,MAAMmJ,KAjBR,iCAkBG,EAAK5I,SAAS,CAACmE,WAAY,CAACqE,QAAOnI,aAAY+D,uBAlBlD,gDAoBG,EAAKpE,SAAS,CAACqE,YAAa,CAACmE,QAAOnI,aAAY+D,uBApBnD,QAwBX,EAAK3E,MAAMoJ,YAAY,EAAK7H,OAxBjB,4CA9BW,4DA0D1B8H,UAAY,WACR,EAAK9I,SAAS,CAAC+I,YAAY,KA3DL,EA4F1BC,QAAU,WAEN,IAAMC,EAAkB,EAAKjI,MAAMmD,WAAWqE,MAAMnH,OAAS,IAA4C,IAAtC,EAAKL,MAAMmD,WAAW9D,aAA4D,IAAvC,EAAKW,MAAMqD,YAAYhE,WAC/H6I,EAAmD,IAAhC,EAAKzJ,MAAMiJ,KAAKS,aAAoB,EAAKnI,MAAMqD,YAAYmE,MAAMnH,OAAS,IAA6C,IAAvC,EAAKL,MAAMqD,YAAYhE,aAA4D,IAAvC,EAAKW,MAAMqD,YAAYhE,WAC5K,OAAI,EAAKZ,MAAMmJ,KAAO,EAAKnJ,MAAMiJ,KAAKS,YAC3B,yBAAK1H,UAAU,YAAYoD,QAAS,EAAKiE,WAAzC,OACC,yBAAKvD,IAAK6D,IAAa3H,UAAU,QAAQgE,IAAI,MAElD,kBAAC,IAAM4D,SAAP,KACF,EAAK5J,MAAMmJ,OAAS,EAAKnJ,MAAMiJ,KAAKS,YACjC,yBAAK1H,UAAS,UAAKwH,GAAUC,EAAU,OAAS,gBAC3CrE,QAASoE,GAAUC,EAAU,EAAKzJ,MAAM6J,WAAa,cAD1D,OAII,yBAAK/D,IAAK0D,GAAUC,EAAU1D,IAAQ+D,IAAY9H,UAAU,QAAQgE,IAAI,MAE5E,yBAAKZ,QAASoE,EAAS,EAAKxJ,MAAM6J,WAAa,aAE1C7H,UAAS,UAAKwH,EAAS,OAAS,iBAFrC,WAII,yBAAK1D,IAAK0D,EAASzD,IAAQ+D,IAAY9H,UAAU,QAAQgE,IAAI,MAEpE,yBACGhE,UAAS,UAAK,EAAKhC,MAAMmJ,OAAS,EAAKnJ,MAAMiJ,KAAKS,aAAmC,IAApB,EAAK1J,MAAMmJ,KAAa,OAAS,gBAClG/D,QAAS,EAAKpF,MAAM+J,YACpB,yBAAKjE,IAAKgE,IAAY9H,UAAU,mBAAmBgE,IAAI,KAH1D,YAlHiB,EA8H1BgE,cAAgB,WACZ,OAAO,GA/He,EAmI1BC,YAAc,WACV,OAAO,EAAKjK,MAAMkK,YAAc7K,EAAW,OAAS,GAjIpD,EAAKkC,MAAQ,CACT4I,YAAY,EACZxB,EAAG,EACHE,EAAG,EACHuB,eAAe,EACfd,YAAY,EACZ5E,WAAY,CACRqE,MAAO,GACPnI,YAAa,EACb+D,kBAAmB,CAACnE,KAAM,GAAIoB,OAAQ,EAAGC,WAAY,EAAGd,QAAS,EAAGD,OAAQ,IAEhF8D,YAAa,CACTmE,MAAO,GACPnI,YAAa,EACb+D,kBAAmB,CAACnE,KAAM,GAAIoB,OAAQ,EAAGC,WAAY,EAAGd,QAAS,EAAGD,OAAQ,KAjB9D,EAH9B,+DAkEuBkG,GACXA,EAAUqD,oBAAsBpI,KAAKjC,MAAMqK,mBAAqBhL,GAC5D4C,KAAKjC,MAAMsK,oBACXrI,KAAKjC,MAAM6J,aAKf5H,KAAKjC,MAAMuK,YACXtI,KAAK1B,SAAS,CACV4J,YAAY,EACZxB,EAAG,EACHE,EAAG,EACHuB,eAAe,EACfd,YAAY,EACZ5E,WAAY,CACRqE,MAAO,GACPnI,YAAa,EACb+D,kBAAmB,CAACnE,KAAM,GAAIoB,OAAQ,EAAGC,WAAY,EAAGd,QAAS,EAAGD,OAAQ,IAEhF8D,YAAa,CACTmE,MAAO,GACPnI,YAAa,EACb+D,kBAAmB,CAACnE,KAAM,GAAIoB,OAAQ,EAAGC,WAAY,EAAGd,QAAS,EAAGD,OAAQ,QAzFhG,iCA4He0B,GACHA,IAAaP,KAAKV,MAAM6I,eACxB5H,EAAST,UA9HrB,+BA2Ic,IAAD,OAGL,OACI,yBACIC,UAAS,0BAAqD,IAAhCC,KAAKjC,MAAMiJ,KAAKS,YAAoB,4BAA8B,IAChGxH,MAAO,CACH6F,QAAUtI,GAAqBJ,EAAW,OAAS,QACnDmL,eAAgBvI,KAAKV,MAAM+H,WAAa,iBAAmB,SAE9DrH,KAAKV,MAAM+H,YAAcrH,KAAKjC,MAAM0G,eAAiB,kBAAC+D,EAAD,MAClD,kBAAC,IAAMb,SAAP,MACM3H,KAAKjC,MAAMkK,WACb,yBAAKlI,UAAU,WACVE,MAAO,CAACwI,QAASzI,KAAKV,MAAMmD,WAAWqE,MAAMnH,OAAS,EAAI,EAAI,KADnE,uBAIA,yBAAKI,UAAU,eACU,IAApBC,KAAKjC,MAAMmJ,MAA8C,IAAhClH,KAAKjC,MAAMiJ,KAAKS,aAC1C,yBAAK1H,UAAU,eACX,kBAACW,EAAD,CAAOnC,KAAMyB,KAAKV,MAAMmD,WAAWqE,MAAOnI,WAAY,MAEzD,kBAAC,EAAD,CAAgB8B,iBAAiB,EAAOF,SAAUP,KAAK0I,WAAWlF,KAAKxD,MACvDD,UAAS,sBAAqC,IAApBC,KAAKjC,MAAMmJ,KAAa,GAAK,gBACvDzH,SAAUO,KAAKhC,eACC,IAAhCgC,KAAKjC,MAAMiJ,KAAKS,aACjB,kBAAC,EAAD,CAAgBlH,SAAUP,KAAK0I,WAAWlF,KAAKxD,MAAOS,iBAAiB,EACvDV,UAAS,sBAAqC,IAApBC,KAAKjC,MAAMmJ,KAAa,GAAK,iBACvDzH,SAAUO,KAAKhC,gBAInC,kBAAC2K,GAAD,CACI3B,KAAMhH,KAAKjC,MAAMiJ,KACjBjH,UAAWC,KAAKjC,MAAMiJ,KAAK4B,mBAC3Bb,cAAe/H,KAAK+H,cACpBC,YAAahI,KAAKgI,YAClBlB,MAAO9G,KAAKjC,MAAM0E,WAAazC,KAAKjC,MAAM0E,WAAWqE,MAAQ,GAC7DI,KAAMlH,KAAKjC,MAAMmJ,OAGrB,kBAACyB,GAAD,CACI3B,KAAMhH,KAAKjC,MAAMiJ,KACjBjH,UAAWC,KAAKjC,MAAMiJ,KAAK6B,kBAC3Bd,cAAe/H,KAAK+H,cACpBC,YAAahI,KAAKgI,YAClBlB,MAAO9G,KAAKjC,MAAM4E,YAAc3C,KAAKjC,MAAM4E,YAAYmE,MAAQ,GAC/DI,KAAMlH,KAAKjC,MAAMmJ,OAGrB,yBAAKnH,UAAU,cAAcC,KAAKsH,WACjC,yBAAKvH,UAAW,kBACXqF,aAAc,kBAAM,EAAK9G,SAAS,CAAC4J,YAAY,KAC/C7C,aAAc,kBAAM,EAAK/G,SAAS,CAAC4J,YAAY,KAC/ClD,YAAahF,KAAKwG,gBAAiBrD,QAAS,WAC9C,EAAK7E,SAAS,CAAC6J,eAAe,OAIjC,kBAAC,EAAD,CAAWpI,UAAWC,KAAKV,MAAM6I,cAAgB,GAAK,YAC3C5C,QAAS,WACL,EAAKjH,SAAS,CAAC6J,eAAe,QAKrDnI,KAAKV,MAAM4I,YAAc,yBAAKnI,UAAU,iBACVE,MAAO,CAAC6I,IAAK9I,KAAKV,MAAMsH,EAAI,EAAGmC,KAAM/I,KAAKV,MAAMoH,EAAI,MADzD,oBA7M1C,GAA+B9F,IAAMC,WAsN/BmI,EAAUpI,IAAME,MAAK,SAAC/C,GACxB,IAAMkL,EAASlL,EAAMoI,KACrB,OACI,yBAAKpG,UAAU,sBAAsB6F,MAAM,6BAA6BC,MAAM,IAAIC,OAAO,IAAIC,QAAQ,WACjG,4BAAQC,GAAG,MAAMC,GAAG,MAAMC,EAAE,IAAIjG,MAAO,CAACkG,KAAM8C,EAAS,QAAU,IAAK7C,SAAS,UACvEC,UAAU,6BAKxB6C,EAAWtI,IAAME,MAAK,SAAC/C,GACzB,IAAMkL,EAASlL,EAAMoI,KACrB,OACI,yBAAKpG,UAAU,sBAAsB8F,MAAM,IAAIC,OAAO,MAClD,0BAAMD,MAAM,IAAIC,OAAO,KAAK7F,MAAO,CAACkG,KAAM8C,EAAS,QAAU,UAuBnET,EAAa5H,IAAME,MAAK,SAAC/C,GAE3B,OACI,yBAAKgC,UAAU,sBACT3C,GAAY,kBAACsD,EAAD,CAAOnC,KAAM,YAAaI,WAAY,GAAIoC,gBAAiB,YAAaQ,YAAY,IACjGnE,GACD,oCACI,kBAACsD,EAAD,CAAOnC,KAAM,QAASI,WAAY,GAAIoC,gBAAiB,cACvD,kBAACL,EAAD,CAAOnC,KAAM,MAAOI,WAAY,GAAIoC,gBAAiB,eAEzD,yBAAKhB,UAAU,eAAf,kEACA,yBAAKoD,QAAS,kBAAMc,OAAOC,SAASC,UAAUpE,UAAU,gBAAxD,oBAEI,yBAAK8D,IAAKC,IAAO/D,UAAU,QAAQgE,IAAI,UAMjD4E,GAAa/H,IAAME,MAAK,SAAC/C,GAC3B,OACI,yBAAKgC,UAAU,4BACX,yBAAKA,UAAS,sBAAiBhC,EAAMgC,WAChCE,MAAO,CAACkJ,UAAU,GAAD,OAAKpL,EAAMgK,gBAAX,MAAgCqB,YAAarL,EAAMiK,gBACrE,yBAAKjI,UAAU,gBACVhC,EAAM+I,MAAM9H,MAAM,IAAIC,KAAI,SAACC,EAAWC,GACnC,IAAMkK,EAAM,UAAMnK,EAAN,YAAWC,GACvB,OAAO,yBAAK9C,IAAKgN,EACLtJ,UAAS,gBAAWhC,EAAMmJ,OAASnJ,EAAMiJ,KAAKS,aAAetI,IAAUpB,EAAM+I,MAAM9H,MAAM,IAAIW,OAAS,EAAI,mBAAqB,kBAAtH,MAChBxC,EAAe+B,EAAEG,eAAeL,MAAM,IAAIC,KAAI,SAACqK,EAAGC,GAC/C,IAAMC,EAAO,UAAMH,EAAN,YAAgBE,GAC7B,MAAU,MAAND,EACO,kBAACN,EAAD,CAAS3M,IAAKmN,EAASrD,KAAMhH,IAAUpB,EAAM+I,MAAM9H,MAAM,IAAIW,OAAS,IAClE,MAAN2J,EACE,kBAACJ,EAAD,CAAU7M,IAAKmN,EAASrD,KAAMhH,IAAUpB,EAAM+I,MAAM9H,MAAM,IAAIW,OAAS,IAEvE,gBAW5B8J,gBAhES,SAACnK,GAAsB,IAAD,EACbA,EAAMoK,UAEnC,MAAO,CACHC,OAJsC,EACnCA,OAGK7H,WAJ8B,EAC3BA,eAOQ,SAAC8H,GAExB,MAAO,CACHC,WAAY,SAAC7H,GAAD,OAAwB4H,GC3OP7C,ED2OqC/E,ECvOtE,uCAAO,WAAO4H,GAAP,SAAA1L,EAAA,sDACH0L,EAAS,CACL5H,KClEoB,mBDmEpB8H,OAAQ,CAAChI,WAAYiF,KAHtB,2CAAP,wDAJgC,IAACA,MDgStB0C,CAA6ClD,GG3U/CwD,I,MAAb,kDAGI,WAAYhM,GAAe,IAAD,8BACtB,cAAMA,IAIVyI,gBAAkB,SAACC,EAAQlI,GAEvB,EAAKD,SAAS,CACVoI,EAAGD,EAAEE,QACLC,EAAGH,EAAEI,QACLtI,KAAMA,KARV,EAAKe,MAAQ,CAACoH,EAAG,EAAGE,EAAG,EAAGoD,eAAgB,OAAQzL,KAAM,GAAI0L,YAAY,EAAOC,aAAa,GAFtE,EAH9B,qDAiBc,IAAD,OACL,OACI,yBAAKnK,UAAU,iBACX,yBAAKA,UAAU,4CACTC,KAAKV,MAAM2K,aAAejK,KAAKV,MAAM4K,aACvC,yBAAKnK,UAAU,YAAf,IAA4B,6BAAwBV,cAApD,KAEA,yBAAKU,UAAS,oBAAeC,KAAKV,MAAM4K,YAAc,QAAU,sBAC3DlF,YAAa,SAACyB,GAAD,OAAO,EAAKD,gBAAgBC,EAAG,eAC5CxG,MAAO,CACH6F,QAAUtI,GAAoBJ,EAAY,OAAS,QACnD+M,UAAU,GAAD,QAAM3M,GAAoBJ,EAAW,gBAAkB,SAAvD,QAEb+F,QAAS,kBAAM,EAAKpF,MAAMoF,QAAQ,eAClCiC,aAAc,kBAAM,EAAK9G,SAAS,CAAC4L,aAAa,KAChD7E,aAAc,kBAAM,EAAK/G,SAAS,CAAC4L,aAAa,MACjD,yBAAKrG,IAAK7D,KAAKjC,MAAMqM,OAAOnH,SAASoH,MAAOtK,UAAU,iBAAiBgE,IAAI,KAE1E/D,KAAKV,MAAM4K,aAAe9M,GAC3B,yBAAK2C,UAAU,wBACVC,KAAKV,MAAMf,OAKpB,yBAAKwB,UAAS,oBAAeC,KAAKV,MAAM2K,WAAa,QAAU,sBAC1DjF,YAAa,SAACyB,GAAD,OAAO,EAAKD,gBAAgBC,EAAG,gBAC5CxG,MAAO,CACH6F,QAAUtI,GAAoBJ,EAAY,OAAS,QACnD+M,UAAU,GAAD,QAAM3M,GAAoBJ,EAAW,gBAAkB,SAAvD,QAEb+F,QAAS,kBAAM,EAAKpF,MAAMoF,QAAQ,gBAClCiC,aAAc,kBAAM,EAAK9G,SAAS,CAAC2L,YAAY,KAC/C5E,aAAc,kBAAM,EAAK/G,SAAS,CAAC2L,YAAY,MAChD,yBAAKpG,IAAK7D,KAAKjC,MAAMqM,OAAOnH,SAASqH,OAAQvK,UAAU,iBAAiBgE,IAAI,KAC3E/D,KAAKV,MAAM2K,YAAc7M,GAC1B,yBAAK2C,UAAU,wBACVC,KAAKV,MAAMf,OAIpB,yBAAKwB,UAAU,iBACVE,MAAO,CACH6I,IAAK9I,KAAKV,MAAMsH,EAAI,EACpBmC,KAAoC,UAA9B/I,KAAKV,MAAM0K,eAA6BhK,KAAKV,MAAMoH,EAAI,GAAK1G,KAAKV,MAAMf,KAAKoB,OAAS,GAAKK,KAAKV,MAAMoH,EAAI,IAAM1G,KAAKV,MAAMoH,EAAI,MAExI1G,KAAKV,MAAMf,YA/DpC,GAAuCqC,IAAMC,YC0BhC0J,GAAb,kDAGI,WAAYxM,GAAqC,IAAD,8BAC5C,cAAMA,IAHVyM,cAEgD,IAkBhDhE,gBAAkB,SAACC,GACf,EAAKnI,SAAS,CACVoI,EAAGD,EAAEE,QACLC,EAAGH,EAAEI,UAET,EAAK4D,kBAAkBhE,IAvBqB,EAoFhDiE,UAAY,WACJ,EAAKpL,MAAMsF,gBACX,EAAKtG,SAAS,CAACsG,gBAAgB,EAAOsC,KAAM,EAAGrC,cAAe,EAAGH,gBAAgB,EAAOiG,QAAQ,IAChG,EAAK5M,MAAM6M,QAAQ9H,QAAQ,MAE3B,EAAK/E,MAAM8M,UAzF6B,EA8FhDC,aA9FgD,uCA8FjC,WAAO5L,EAASC,GAAhB,2BAAAjB,EAAA,6DAA+B6M,EAA/B,yCACL,EAAKzM,SAAS,CAAC0M,YAAa9L,EAAE8C,KAAMiJ,aAAc9L,IAD7C,UAEN/B,EAFM,mBAGH8B,EAAE8C,OAAS9F,EAAKO,WAAYsO,EAHzB,uBAIH3I,QAAQC,IAAI,OAAZ,eAAwB,EAAK/C,QAJ1B,SAKG,EAAKhB,SAAS,CAACsG,gBAAgB,EAAMC,aAAc1F,IALtD,OAOP,EAAKpB,MAAM6M,QAAQM,KAAK,KAPjB,OASX,EAAKnN,MAAMoF,QAAQ/G,EAAa8C,EAAE8C,OATvB,4CA9FiC,0DA0GhDmJ,MAAQ,SAAChM,GACL,OAAI,EAAKG,MAAMsF,eACJ,EAAKtF,MAAMuF,eAAiB1F,EAAQ,aAAe,WACvD,IA7GqC,EAgHhDyI,WAAa,WACT,EAAKtJ,UAAS,SAAA8M,GAAS,kCAASA,GAAT,IAAoBlE,KAAMkE,EAAUlE,KAAO,OAE7D,EAAK5H,MAAMoF,gBACZ,EAAKpG,SAAS,CAACoG,gBAAgB,KApHS,EAyHhD2G,aAAe,WACX,EAAK/M,UAAS,SAAA8M,GAAS,kCAASA,GAAT,IAAoBlE,KAAMkE,EAAUlE,KAAO,QA1HtB,EA6HhDY,WAAa,WACT,EAAK4C,aA9HuC,EAkIhDY,eAAiB,SAACrI,GACd,EAAKlF,MAAMwN,kBAAkBtI,GACxB7F,IACD,EAAKiO,eACL,EAAK/M,SAAS,CAACqM,QAAQ,EAAMjG,gBAAgB,MApIjD,EAAKpF,MAAQ,CACT4H,KAAM,EACNtC,gBAAgB,EAChBC,cAAe,EACf6B,EAAG,EAAGE,EAAG,EAAG3B,UAAW,GACvB+E,eAAgB,OAChBwB,KAAM,EACNR,YAAa,KACbC,cAAe,EACf5C,oBAAoB,EACpBC,YAAY,EACZ5D,gBAAgB,EAAOiG,QAAQ,EAC/B7F,OAAO,GAdiC,EAHpD,gEA6B+B,IAAD,OACtB,GAAkC,OAA9B9E,KAAKjC,MAAM0N,eAAyB,CACpC,IAAMC,EAAQ1L,KAAKjC,MAAM4L,OAAO,GAC1BxK,EAAQuM,EAAMC,MAAMC,WAAU,SAAC1M,GAAD,OAAaA,EAAE8C,OAAS,EAAKjE,MAAM0N,kBACnEC,EAAMC,MAAMxM,IACZa,KAAK8K,aAAaY,EAAMC,MAAMxM,GAAQA,GAAO,GAAM0M,OAK3D7L,KAAKwK,SAAWxK,KAAKjC,MAAM6M,QAAQkB,QAAO,SAACrF,EAAGsF,GAChC,QAANA,GACA,EAAKrB,iBAzCrB,6CA+CQ1K,KAAKwK,aA/Cb,yCAkDuBzF,GAAmB,IAAD,OAOjC,GALIA,EAAUiH,SAAWhM,KAAKjC,MAAMiO,QAChChM,KAAK8H,aAIyB,OAA9B9H,KAAKjC,MAAM0N,gBAA2B1G,EAAU0G,iBAAmBzL,KAAKjC,MAAM0N,eAAgB,CAC9F,IAAMC,EAAQ1L,KAAKjC,MAAM4L,OAAO3J,KAAKjC,MAAM0N,iBAAmBvP,EAAKO,SAAW,EAAI,GAC5E0C,EAAQuM,EAAMC,MAAMC,WAAU,SAAC1M,GAAD,OAAaA,EAAE8C,OAAS,EAAKjE,MAAM0N,kBACnEC,EAAMC,MAAMxM,IACZa,KAAK8K,aAAaY,EAAMC,MAAMxM,GAAQA,GAAO,GAAM0M,OAEvD7L,KAAK1B,SAAS,CAACgK,YAAY,IAC3BtI,KAAK1B,SAAS,CAACgK,YAAY,IAI3BvD,EAAUL,iBAAmB1E,KAAKjC,MAAM2G,gBAAkBtH,GAEtD4C,KAAKjC,MAAM2G,iBACX1E,KAAKqL,eACLrL,KAAK1B,SAAS,CAACqM,QAAQ,EAAMjG,gBAAgB,KAKjDK,EAAUkH,qBAAuBjM,KAAKjC,MAAMkO,oBAAsB7O,IAClE4C,KAAK1B,SAAS,CAAC+J,mBAAoBrI,KAAKjC,MAAMmO,eAC1ClM,KAAKV,MAAM0L,cAAgB9O,EAAKO,UAAauD,KAAKjC,MAAMmO,eACxDlM,KAAK1B,SAAS,CAACsG,gBAAgB,EAAMC,aAAc7E,KAAKV,MAAM2L,eAC9DjL,KAAKjC,MAAM6M,QAAQM,KAAK,SAjFxC,+BA8Ic,IAAD,OAGCQ,EAAQ1L,KAAKjC,MAAM4L,OAAO3J,KAAKjC,MAAMoO,YAC3C,OACI,yBAAKpM,UAAU,uCAAuCiF,YAAahF,KAAKwG,kBAClExG,KAAKV,MAAMsF,iBAAmB5E,KAAKV,MAAMoF,iBAAmB1E,KAAKV,MAAMqL,SAAW3K,KAAKV,MAAMwF,OAC/F,yBAAK/E,UAAU,WACVoD,QAAS,kBAAM,EAAK2H,aAAa,EAAKxL,MAAM0L,YAAc,EAAK1L,MAAM0L,YAAc9O,EAAKM,QAAS,KACpGwD,KAAKjC,MAAM4L,OAAO3J,KAAKjC,MAAMoO,YAAYC,OAE1CpM,KAAKjC,MAAM4L,OAAO3J,KAAKjC,MAAMoO,YAAYR,MAAM1M,KAAI,SAACC,EAASC,GAC1D,OACI,yBAAK9C,IAAK8C,EAAOY,UAAS,oBAAe,EAAKoL,MAAMhM,IAAUc,MAAO,CACjE6F,QAAUtI,GAAoBJ,EAAY,OAAS,QACnD+M,UAAU,GAAD,QAAM3M,GAAoBJ,EAAW,gBAAkB,SAAvD,YAAmE,EAAI+B,EAAQ,EAA/E,OAET,kBAAC,EAAD,CACI8F,UAAW7I,EAAa8C,EAAE8C,MAC1B6C,cAAc,EACdD,eAAgB,EAAKtF,MAAMsF,eAC3BO,gBAAiB,EAAK7F,MAAMsF,eAAiB1F,EAAEmN,SAAWnN,EAAEoN,MAC5DtH,YAAa,SAACC,GACV,EAAK3G,SAAS,CAAC2G,UAAWA,IAC1B,EAAK3G,SAAS,CAAC0M,YAAa9L,EAAE8C,KAAMiJ,aAAc9L,KAEtD+F,SAAUhG,EAAE8C,KACZoD,aAAc,WACLhI,GAAU,EAAKkB,SAAS,CAACwG,OAAO,KAEzCO,aAAc,WACLjI,GAAU,EAAKkB,SAAS,CAACwG,OAAO,KAEzCmD,UAAW,EAAK3I,MAAM4H,KAAO,IAAMhI,EAAEuI,YACrChD,eAAgB,EAAK1G,MAAM0G,eAC3BtB,QAAS,kBAAM,EAAK2H,aAAa5L,EAAGC,IACpCuF,eAAgB,EAAKpF,MAAMoF,gBAAkB,EAAKpF,MAAMqL,OACxD4B,QAAS,EAAKjN,MAAMqL,SAAW,EAAK5M,MAAM0G,qBAMzDzE,KAAKV,MAAMqL,SAAW3K,KAAKjC,MAAM0G,gBAAkB,yBAAK1E,UAAU,cAC/D,yBAAKA,UAAU,YAAYoD,QAASnD,KAAKjC,MAAMyO,UAAUhJ,KAAKxD,OAA9D,OACQ,yBAAK6D,IAAK6D,IAAa3H,UAAU,QAAQgE,IAAI,OAGxD/D,KAAKV,MAAMoF,gBACZ,kBAAC,GAAD,CACI0F,OAAQpK,KAAKjC,MAAM4L,OAAO3J,KAAKjC,MAAMoO,YACrChJ,QAASnD,KAAKsL,iBAGjBtL,KAAKV,MAAMsF,kBAAqB5E,KAAKV,MAAMoF,gBAAmB1E,KAAKV,MAAMqL,SAC1E,kBAAC,GAAD,CAAWvC,kBAAmBpI,KAAKjC,MAAMkO,mBAC9B3D,WAAYtI,KAAKV,MAAMgJ,WACvBkE,UAAWxM,KAAKjC,MAAMyO,UAAUhJ,KAAKxD,MACrCqI,mBAAoBrI,KAAKV,MAAM+I,mBAC/BP,WAAY9H,KAAK8H,WAAYF,WAAY5H,KAAK4H,WAC9CV,KAAMlH,KAAKV,MAAM4H,KACjBF,KAAM0E,EAAMC,MAAM3L,KAAKV,MAAMuF,cAC7BJ,eAAgBzE,KAAKjC,MAAM0G,eAC3B0C,YAAanH,KAAKjC,MAAMoJ,YAAY3D,KAAKxD,MACzCiI,UAAWjI,KAAKV,MAAMqL,OACtBlI,WAAYzC,KAAKjC,MAAM0E,WACvBE,YAAa3C,KAAKjC,MAAM4E,eAIjC3C,KAAKV,MAAMsF,gBACb,yBAAK7E,UAAU,iBACVE,MAAO,CACH6I,IAAK9I,KAAKV,MAAMsH,EAAI,EACpBmC,KAAoC,UAA9B/I,KAAKV,MAAM0K,eAA6BhK,KAAKV,MAAMoH,EAAI,GAAK1G,KAAKV,MAAM2F,UAAUtF,OAAS,GAAKK,KAAKV,MAAMoH,EAAI,IAAM1G,KAAKV,MAAMoH,EAAI,MAHlJ,UAKY1G,KAAKV,MAAM2F,cA1NvC,wCAkOsBwB,IAGVzG,KAAKV,MAAMkM,KAAO/E,EAAEgG,OAEbzM,KAAKV,MAAMkM,KAAO/E,EAAEgG,QAD3BzM,KAAK1B,SAAS,CAAC0L,eAAgB,SAInChK,KAAK1B,SAAS,CAACkN,KAAM/E,EAAEgG,YA1O/B,GAAqC7L,IAAMC,WCC9B6L,GAAb,kDAII,WAAY3O,GAAqC,IAAD,8BAC5C,cAAMA,IAHVyM,cAEgD,IAkBhDhE,gBAAkB,SAACC,GACf,EAAKnI,SAAS,CACVoI,EAAGD,EAAEE,QACLC,EAAGH,EAAEI,UAET,EAAK4D,kBAAkBhE,IAvBqB,EA8ChDiE,UAAY,WACH,EAAKpL,MAAMsF,gBACZ,EAAK7G,MAAM8M,SAGX,EAAK9M,MAAM6M,QAAQ9H,QAAQ,KAE/B,EAAKxE,SAAS,CAACsG,gBAAgB,EAAOC,cAAe,EAAGH,gBAAgB,EAAOiG,QAAQ,KArD3C,EAsFhDG,aAtFgD,uCAsFjC,WAAO5L,EAASC,GAAhB,SAAAjB,EAAA,sEACL,EAAKI,SAAS,CAAC2M,aAAc9L,EAAO6L,YAAa9L,EAAE8C,OAD9C,OAEX,EAAKjE,MAAMoF,QAAQ/G,EAAa8C,EAAE8C,OAC7B5E,GAC6B,IAA1B,EAAKW,MAAMoO,YACX,EAAK7N,SAAS,CAACsG,gBAAgB,EAAMsC,KAAM,EAAGrC,aAAc1F,IALzD,2CAtFiC,0DAgGhDgM,MAAQ,SAAChM,GACL,OAAI,EAAKG,MAAMsF,eACJ,EAAKtF,MAAMuF,eAAiB1F,EAAQ,aAAe,WACvD,IAnGqC,EAsGhDyI,WAAa,WAGL,EAAKtI,MAAM4H,KAAO,GAClB,EAAK5I,UAAS,SAAA8M,GAAS,kCAASA,GAAT,IAAoBlE,KAAMkE,EAAUlE,KAAO,QAKjE,EAAK5H,MAAM0L,cAAgB9O,EAAKQ,eAAmB,EAAK4C,MAAM0L,cAAgB9O,EAAKQ,eAC7D,IAApB,EAAK4C,MAAM4H,OACd,EAAK5I,SAAS,CAACoG,gBAAgB,KAjHS,EAuHhDoD,WAAa,WACT,EAAK4C,aAxHuC,EA2HhDY,eAAiB,SAACrI,GACd,EAAKlF,MAAMwN,kBAAkBtI,GACxB7F,GACD,EAAKkB,SAAS,CAACqM,QAAQ,EAAMjG,gBAAgB,KA5HjD,EAAKpF,MAAQ,CACT4H,KAAM,EACNtC,gBAAgB,EAChBC,cAAe,EACf6B,EAAG,EAAGE,EAAG,EAAG3B,UAAW,GACvB+E,eAAgB,OAChBwB,KAAM,EACNR,YAAa9O,EAAKW,eAClBoO,cAAe,EACf5C,oBAAoB,EACpBC,YAAY,EACZ5D,gBAAgB,EAAOiG,QAAQ,EAC/B7F,OAAO,GAdiC,EAJpD,gEA8B+B,IAAD,OACtB,GAAkC,OAA9B9E,KAAKjC,MAAM0N,eAAyB,CACpC,IAAMC,EAAQ1L,KAAKjC,MAAM4L,OAAO,GAC1BxK,EAAQuM,EAAMC,MAAMC,WAAU,SAAC1M,GAAD,OAAaA,EAAE8C,OAAS,EAAKjE,MAAM0N,kBACnEC,EAAMC,MAAMxM,IACZa,KAAK8K,aAAaY,EAAMC,MAAMxM,GAAQA,GAAO0M,OAGrD7L,KAAKwK,SAAWxK,KAAKjC,MAAM6M,QAAQkB,QAAO,SAACrF,EAAGsF,GAChC,QAANA,GACA,EAAKrB,iBAxCrB,6CA8CQ1K,KAAKwK,aA9Cb,yCA6DuBzF,GAAmB,IAAD,OAIjC,GAHIA,EAAUiH,SAAWhM,KAAKjC,MAAMiO,QAChChM,KAAK8H,aAEyB,OAA9B9H,KAAKjC,MAAM0N,gBAA2B1G,EAAU0G,iBAAmBzL,KAAKjC,MAAM0N,eAAgB,CAC9F,IAAMC,EAAQ1L,KAAKjC,MAAM4L,OAAO3J,KAAKjC,MAAM0N,iBAAmBvP,EAAKO,SAAW,EAAI,GAC5E0C,EAAQuM,EAAMC,MAAMC,WAAU,SAAC1M,GAAD,OAAaA,EAAE8C,OAAS,EAAKjE,MAAM0N,kBACnEC,EAAMC,MAAMxM,IACZa,KAAK8K,aAAaY,EAAMC,MAAMxM,GAAQA,GAAO0M,OACjD7L,KAAK1B,SAAS,CAACgK,YAAY,IAC3BtI,KAAK1B,SAAS,CAACgK,YAAY,IAG3BvD,EAAUL,iBAAmB1E,KAAKjC,MAAM2G,gBAAkBtH,GAEtD4C,KAAKjC,MAAM2G,gBACX1E,KAAK1B,SAAS,CAACqM,QAAQ,EAAMjG,gBAAgB,IAKjDK,EAAUkH,qBAAuBjM,KAAKjC,MAAMkO,oBAAsB7O,IAClE4C,KAAK1B,SAAS,CAAC+J,mBAAoBrI,KAAKjC,MAAMmO,eAChB,IAA1BlM,KAAKjC,MAAMoO,YAAoBnM,KAAKV,MAAM2L,cAAgB,IAAMjL,KAAKjC,MAAMmO,cAC3ElM,KAAK1B,SAAS,CAACsG,gBAAgB,EAAMsC,KAAM,EAAGrC,aAAc7E,KAAKV,MAAM2L,kBArFvF,+BAsIc,IAAD,OACCS,EAAQ1L,KAAKjC,MAAM4L,OAAO3J,KAAKjC,MAAMoO,YAC3C,OACI,yBAAKlM,MAAO,CAAC0M,gBAAiB,WACzB5M,UAAS,4DAAuDC,KAAKV,MAAMsF,eAAiB,uBAAyB,IACrHI,YAAahF,KAAKwG,kBACjBxG,KAAKV,MAAMsF,iBAAmB5E,KAAKV,MAAMoF,iBAAmB1E,KAAKV,MAAMqL,SAAW3K,KAAKV,MAAMwF,OAC/F,yBAAK/E,UAAU,WACVoD,QAAS,kBAAM,EAAK2H,aAAa,EAAKxL,MAAM0L,YAAc,EAAK1L,MAAM0L,YAAc9O,EAAKM,QAAS,KACjGwD,KAAKjC,MAAM4L,OAAO3J,KAAKjC,MAAMoO,YAAYC,OAC7CpM,KAAKjC,MAAM4L,OAAO3J,KAAKjC,MAAMoO,YAAYR,MAAM1M,KAAI,SAACC,EAASC,GAC1D,OACI,yBAAK9C,IAAK8C,EAAOY,UAAS,oBAAe,EAAKoL,MAAMhM,IAAUc,MAAO,CACjE6F,QAAUtI,GAAqBJ,EAAW,SAAWA,EAAW,UAAY,QAC5E+M,UAAU,GAAD,QAAM3M,GAAoBJ,EAAW,sBAAwB,eAA7D,YAA+E+B,EAAQ,GAAvF,OAET,kBAAC,EAAD,CACI8F,UAAW7I,EAAa8C,EAAE8C,MAC1B6C,cAAc,EACdD,eAAgB,EAAKtF,MAAMsF,eAC3BO,gBAAiB,EAAK7F,MAAMsF,eAAiB1F,EAAEmN,SAAWnN,EAAEoN,MAC5DtH,YAAa,SAACC,GACV,EAAK3G,SAAS,CAAC2G,UAAWA,KAE9BG,aAAc,WACLhI,GAAU,EAAKkB,SAAS,CAACwG,OAAO,KAEzCO,aAAc,WACLjI,GAAU,EAAKkB,SAAS,CAACwG,OAAO,KAEzCmD,UAAW,EAAK3I,MAAM4H,KAAOhI,EAAEuI,YAC/BhD,eAAgB,EAAK1G,MAAM0G,eAC3BtB,QAAS,kBAAM,EAAK2H,aAAa5L,EAAGC,IACpCuF,eAAgB,EAAKpF,MAAMoF,gBAAkB,EAAKpF,MAAMqL,OACxDzF,SAAUhG,EAAE8C,KACZuK,QAAS,EAAKjN,MAAMqL,aAMnC3K,KAAKV,MAAMoF,gBACZ,kBAAC,GAAD,CAAmB0F,OAAQpK,KAAKjC,MAAM4L,OAAO3J,KAAKjC,MAAMoO,YAAahJ,QAASnD,KAAKsL,iBAGlFtL,KAAKV,MAAMqL,SAAW3K,KAAKjC,MAAM0G,gBAAkB,yBAAK1E,UAAU,cAC/D,yBAAKA,UAAU,YAAYoD,QAASnD,KAAKjC,MAAMyO,UAAUhJ,KAAKxD,OAA9D,OACQ,yBAAK6D,IAAK6D,IAAa3H,UAAU,QAAQgE,IAAI,OAKxD/D,KAAKV,MAAMsF,kBAAoB5E,KAAKV,MAAMoF,gBAAkB1E,KAAKV,MAAMqL,SACxE,kBAAC,GAAD,CAAWvC,kBAAmBpI,KAAKjC,MAAMkO,mBAC9BO,UAAWxM,KAAKjC,MAAMyO,UAAUhJ,KAAKxD,MACrCqI,mBAAoBrI,KAAKV,MAAM+I,mBAC/BP,WAAY9H,KAAK8H,WACjBF,WAAY5H,KAAK4H,WACjBV,KAAMlH,KAAKV,MAAM4H,KACjBF,KAAM0E,EAAMC,MAAM3L,KAAKV,MAAMuF,cAC7BJ,eAAgBzE,KAAKjC,MAAM0G,eAC3B6D,WAAYtI,KAAKV,MAAMgJ,WACvBnB,YAAanH,KAAKjC,MAAMoJ,YAAY3D,KAAKxD,MACzCiI,UAAWjI,KAAKV,MAAMqL,OACtBlI,WAAYzC,KAAKjC,MAAM0E,WACvBE,YAAa3C,KAAKjC,MAAM4E,eAEjC3C,KAAKV,MAAMsF,gBACb,yBAAK7E,UAAU,iBACVE,MAAO,CACH6I,IAAK9I,KAAKV,MAAMsH,EAAI,EACpBmC,KAAoC,UAA9B/I,KAAKV,MAAM0K,eAA6BhK,KAAKV,MAAMoH,EAAI,GAAK1G,KAAKV,MAAM2F,UAAUtF,OAAS,GAAKK,KAAKV,MAAMoH,EAAI,IAAM1G,KAAKV,MAAMoH,EAAI,MAE7I1G,KAAKV,MAAM2F,cA/MhC,wCAqNsBwB,GACVzG,KAAKV,MAAMkM,KAAO/E,EAAEgG,MACpBzM,KAAK1B,SAAS,CAAC0L,eAAgB,SAInChK,KAAK1B,SAAS,CAACkN,KAAM/E,EAAEgG,YA3N/B,GAAsC7L,IAAMC,W,SC9CtC+L,G,QAASC,EAAOC,YAAY,CAC9BC,OAAQ,wBACRC,sBAAuB,qCAyBdC,GAAa,SAACC,EAAoBC,GAO3C,OAAOP,GAAOQ,SAASH,aAAaC,EAAYC,IAKvCE,GAAqB,SAACC,GAC/B,OAAOV,GAAOW,QAAQC,cAAcF,ICG3BG,GAAb,kDAII,WAAY1P,GAAqC,IAAD,8BAC5C,cAAMA,IAHVyM,cAEgD,IAwChDkD,cAAgB,WACZ,EAAKpP,UAAS,SAAA8M,GAAS,kCAChBA,GADgB,IAEnBuC,oBAAoB,EACpBC,eAAe,EACf5B,QAASZ,EAAUY,aA7CqB,EAiDhDnB,OAAS,WACL,EAAKvM,UAAS,SAAA8M,GAAS,kCAASA,GAAT,IAAoBe,WAAYf,EAAUe,WAAa,OAC9E,EAAK0B,cAnDuC,EAwEhDC,uBAAyB,SAAC1P,GACtB,OAAQA,EAAM8D,UACV,IAAK,QACG9D,EAAMA,MAAM/B,MAAQH,EAAKO,UACzB,EAAKsB,MAAMgQ,eAAe3R,EAAagC,EAAMA,MAAM/B,MACnD,EAAK0B,MAAMiQ,YAAY,IACvB,EAAK1P,SAAS,CAAC6N,WAAY,MAE3B,EAAKpO,MAAMgQ,eAAe3R,EAAaF,EAAKM,UAC5C,EAAKuB,MAAMiQ,YAAY5R,EAAagC,EAAMA,MAAM/B,OAEpD,EAAKwR,aACL,EAAKvP,SAAS,CAACmN,eAAgBrN,EAAMA,MAAM/B,MAC3C,MACJ,IAAK,WACD,EAAK0B,MAAMkQ,eAAe7R,EAAagC,EAAMA,MAAM/B,QAvFf,EA4FhD6R,SAAW,WAEP,GAAI,EAAK5O,MAAM6O,qBACX,GAAI,EAAK7O,MAAM0L,cAAgB5O,EAAaF,EAAKS,iBAAmB,EAAK2C,MAAM0L,cAAgB5O,EAAaF,EAAKQ,gBAC7G,GAAI,EAAK4C,MAAM6O,qBAAqB1L,WAAWqE,MAAMnH,OAAS,EAE1D,OAAI,EAAKL,MAAM6O,qBAAqBxL,YAAYmE,MAAMnH,OAAS,GAC7B,SAA1B,EAAKL,MAAM8O,YACX,EAAK9P,SAAS,CAAC8P,WAAY,UACxB,IAEmB,SAA1B,EAAK9O,MAAM8O,YACX,EAAK9P,SAAS,CAAC8P,WAAY,UACxB,QAIX,GAAI,EAAK9O,MAAM6O,qBAAqB1L,WAAWqE,MAAMnH,OAAS,EAG1D,MAF8B,SAA1B,EAAKL,MAAM8O,YACX,EAAK9P,SAAS,CAAC8P,WAAY,UACxB,EAKnB,OAAO,GArHqC,EAyHhD5B,UAzHgD,sBAyHpC,8BAAAtO,EAAA,sDACR,EAAKI,SAAS,CAACmG,gBAAgB,EAAM2J,WAAY,sBADzC,KAGA,EAAKrQ,MAAM+D,WAAWmB,SAHtB,OAIC,eAJD,6BAKAoL,EAAY,+BACZC,EAAa,gCANb,mCASAD,EAAY,cACZC,EAAa,qBAVb,oCAcRC,QAAQC,IAAI,CDxKT5B,GAAOQ,SAASqB,SC0KfC,GAA0B,wBAC1BA,GAA0BL,GAC1BK,GAA0BJ,KAEzBzC,MAAK,SAAA8C,GACF,IAAMvB,EAAgBuB,EAAK,GACrBC,EAAqBD,EAAK,GAC1BE,EAAYF,EAAK,GACjBG,EAAaH,EAAK,GAClBI,EAAYH,EAAmBI,SAAS,GAAGC,GAC3CC,EAAqBL,EAAUG,SAAS,GAAGC,GAC3CE,EAAsBL,EAAWE,SAAS,GAAGC,GAG7CG,EAAuB,CACzBL,YACAM,SAAU,EACVC,iBAAkB,IAIlBrM,EAAW,GAEXA,EADA,EAAKlF,MAAM+D,WAAWmB,SACX,EAAKlF,MAAM+D,WAAWmB,SAEtB,aAIf,IAAIsM,EAAU,EAAGC,EAAY,EAC7BD,GAAW,EAAKjQ,MAAM6O,qBAAqB1L,WAAWC,kBAAkB7D,OACxE2Q,GAAa,EAAKlQ,MAAM6O,qBAAqB1L,WAAWC,kBAAkB5D,QAGnC,aAAnC,EAAKf,MAAM+D,WAAWC,UACtBqN,EAAgBE,iBAAiBpE,KAC7B,CACI7O,IAAK,WACL+B,MAAM,GAAD,OAAK6E,EAAL,mBAAmB,EAAK3D,MAAM6O,qBAAqB1L,WAAWqE,MAAMzH,cAApE,YAKsB,YAAnC,EAAKtB,MAAM+D,WAAWC,WACtBqN,EAAgBE,iBAAiBpE,KAC7B,CACI7O,IAAK,YACL+B,MAAM,GAAD,OAAK6E,EAAL,mBAAmB,EAAK3D,MAAM6O,qBAAqB1L,WAAWqE,MAAMzH,cAApE,YAIuB,mBAAhC,EAAKtB,MAAM+D,WAAW7B,OAA8D,kBAAhC,EAAKlC,MAAM+D,WAAW7B,QAC1EmP,EAAgBE,iBAAiBpE,KAC7B,CACI7O,IAAK,YACL+B,MAAM,GAAD,OAAK6E,EAAL,mBAAmB,EAAK3D,MAAM6O,qBAAqBxL,YAAYmE,MAAMzH,cAArE,YAIbkQ,IAAY,EAAKjQ,MAAM6O,qBAAqBxL,YAAYD,kBAAkB7D,OAC1E2Q,IAAc,EAAKlQ,MAAM6O,qBAAqBxL,YAAYD,kBAAkB5D,UAKpF,IAAMqO,EAAY,CAACiC,EAAiB,CAChCL,UAAWG,EACXG,SAAUE,GACX,CACCR,UAAWI,EACXE,SAAUG,IAEdd,GAAkBtB,EAAS6B,GAAG5Q,WAAY8O,GACrCtB,MAAK,SAAA4D,GACarC,EAASsC,OAAmBzL,OAAO0L,WAAgB1L,OAAO2L,YAAiB3L,OAAO2L,YAAiB3L,OAAO0L,iBA1FjI,mBA8FD,GA9FC,4CAzHoC,EA2NhDE,UAAY,WACR,EAAKvR,SAAS,CAACsP,eAAe,EAAMD,oBAAoB,KA5NZ,EA+NhDpC,kBAAoB,SAACtI,GAEZ7F,IACD,EAAKW,MAAMkQ,eAAehL,GAC1B,EAAK3E,SAAS,CAACwR,iBAAiB,KAEpC,EAAKxR,SAAS,CAACqF,aAAa,IAC5B,EAAKrF,SAAS,CAACyR,gBAAiB9M,KApOhC,EAAK3D,MAAQ,CACT6M,WAAY,EACZrK,gBAAYkO,EACZ7B,qBAAsB,KACtBxK,aAAa,EACbqH,YAAa,GACbiF,eAAe,EACf7B,WAAY,SACZR,eAAe,EACfD,oBAAoB,EACpBlJ,gBAAgB,EAChBgH,eAAgB,KAChBO,QAAQ,EACR8D,iBAAiB,EACjBC,gBAAiB,GACjBG,YAAY,GAjB4B,EAJpD,yDA4BQlQ,KAAK1B,SAAS,CAAC6P,qBAAsB,SA5B7C,0CA+ByB,IAAD,OAChBnO,KAAK1B,SAAS,CAACwD,WAAY9B,KAAKjC,MAAM+D,aACtC9B,KAAKwK,SAAWxK,KAAKjC,MAAM6M,QAAQkB,QAAO,SAACrF,EAAGsF,GAChC,QAANA,GACA,EAAK8B,kBAnCrB,6CAyCQ7N,KAAKwK,aAzCb,8BA0DYxI,GACJhC,KAAK1B,SAAS,CAACqF,aAAa,EAAMqH,YAAahJ,IAC1C5E,IAAa4C,KAAKV,MAAM2Q,gBACrBjQ,KAAKjC,MAAM4L,OAAO3J,KAAKV,MAAM6M,YAAYgE,aAAehU,EAAMiU,UAC9DpQ,KAAKjC,MAAMgQ,eAAe/L,GAE1BhC,KAAKjC,MAAM4L,OAAO3J,KAAKV,MAAM6M,YAAYgE,aAAehU,EAAMkU,WAC9DrQ,KAAKjC,MAAMkQ,eAAejM,GAE1BhC,KAAKjC,MAAM4L,OAAO3J,KAAKV,MAAM6M,YAAYgE,aAAehU,EAAMmU,OAC9DtQ,KAAKjC,MAAMiQ,YAAYhM,GAEvBhC,KAAKV,MAAM6M,WAAa,GAAKnK,IAAS5F,EAAaF,EAAKO,WACxDuD,KAAK1B,SAAS,CAAC6N,WAAanM,KAAKV,MAAM6M,WAAa,OAvEpE,+BA8Oc,IAAD,OACL,OAGI,yBAAKpM,UAAU,YAAYE,MAAO,CAAC6F,QAAUtI,GAAqBJ,EAAW,OAAS,UAElF,yBAAK2C,UAAU,WAAf,UACA,yBAAKA,UAAU,SACf,kBAACwQ,GAAD,MAC2B,IAA1BvQ,KAAKV,MAAM6M,WACR,kBAAC,GAAD,eAAiBK,UAAWxM,KAAKwM,UAAUhJ,KAAKxD,OAAWA,KAAKjC,MAAhE,CAAuE8M,OAAQ7K,KAAK6K,OACnEsB,WAAYnM,KAAKV,MAAM6M,WAAYxC,OAAQ3J,KAAKjC,MAAM4L,OACtDxC,YAAa,SAACgH,GAEV,EAAK7P,SAAS,CAAC6P,qBAAsBA,KAEzCnC,OAAQhM,KAAKV,MAAM0M,OACnBvH,eAAgBzE,KAAKV,MAAMmF,eAC3BwH,mBAAoBjM,KAAKV,MAAM2Q,cAC/B9M,QAAS,SAACnB,GACN,EAAKmB,QAAQnB,IAEjByJ,eAAgBzL,KAAKV,MAAMmM,eAC3BS,aAAwC,SAA1BlM,KAAKV,MAAM8O,YAAmD,SAA1BpO,KAAKV,MAAM8O,WAC7D7C,kBAAmBvL,KAAKuL,kBACxB9I,WAAYzC,KAAKV,MAAM6O,qBAAuBnO,KAAKV,MAAM6O,qBAAqB1L,WAAa,CAACqE,MAAO,IACnGnE,YAAa3C,KAAKV,MAAM6O,qBAAuBnO,KAAKV,MAAM6O,qBAAqBxL,YAAc,CAACmE,MAAO,IACrGpC,eAAgB1E,KAAKV,MAAM4Q,cAE5C,kBAAC,GAAD,eAAkB1D,UAAWxM,KAAKwM,UAAUhJ,KAAKxD,OAAWA,KAAKjC,MAAjE,CAAwE8M,OAAQ7K,KAAK6K,OACnEsB,WAAYnM,KAAKV,MAAM6M,WAAYxC,OAAQ3J,KAAKjC,MAAM4L,OACtDxC,YAAa,SAACgH,GACV,EAAK7P,SAAS,CAAC6P,qBAAsBA,KAEzCnC,OAAQhM,KAAKV,MAAM0M,OACnBP,eAAgBzL,KAAKV,MAAMmM,eAC3BhH,eAAgBzE,KAAKV,MAAMmF,eAC3BwH,mBAAoBjM,KAAKV,MAAM2Q,cAC/B9M,QAAS,SAACnB,GACN,EAAKmB,QAAQnB,IAEjBkK,aAAwC,SAA1BlM,KAAKV,MAAM8O,YAAmD,SAA1BpO,KAAKV,MAAM8O,WAC7D7C,kBAAmBvL,KAAKuL,kBACxB9I,WAAYzC,KAAKV,MAAM6O,qBAAuBnO,KAAKV,MAAM6O,qBAAqB1L,WAAa,CAACqE,MAAO,IACnGnE,YAAa3C,KAAKV,MAAM6O,qBAAuBnO,KAAKV,MAAM6O,qBAAqBxL,YAAc,CAACmE,MAAO,IACrGpC,eAAgB1E,KAAKV,MAAM4Q,cAzCrD,MA4CSlQ,KAAKV,MAAMsO,gBAAkBxQ,GAAY4C,KAAKV,MAAMmF,iBAAmBzE,KAAKV,MAAM4Q,aAC3F,kBAAC,EAAD,CAEInQ,UAAU,aACV+B,WAAY9B,KAAKjC,MAAM+D,WACvBG,aAAc,SAAC7D,GACX,EAAK0P,uBAAuB1P,IAEhCoE,OAAQxC,KAAKV,MAAM6O,qBACnB7L,YAAW,uCAAE,WAAOkO,GAAP,yBAAAtS,EAAA,0FAAqC,MAArC,uBAELkE,QAAQC,IAAI,OAAQ,EAAK6L,WAAY,EAAK5O,MAAM0L,aAChD,EAAK1M,SAAS,CAACmG,gBAAgB,IAH1B,0CAMH,EAAKnG,SAAS,CAAC2R,cAAeO,IAN3B,UAOqB,sBAA1B,EAAKlR,MAAM8O,WAPN,wBAQLnK,OAAOC,SAASC,SARX,8BAYJ,EAAK+J,WAZD,kCAaC,EAAK/K,QAAQ,EAAK7D,MAAM0L,aAbzB,QAcL,EAAK1M,SAAS,CAAC2R,eAAe,EAAOtM,aAAa,IAd7C,yCAgBC,EAAKrF,SAAS,CAAC2R,eAAe,IAhB/B,WAiB8B,KAA/B,EAAK3Q,MAAMyQ,gBAjBV,wBAkBD,EAAKhS,MAAMkQ,eAAe,EAAK3O,MAAMyQ,iBAlBpC,UAmBK,EAAKzR,SAAS,CAACwR,iBAAiB,EAAMI,YAAY,IAnBvD,0CAsByB,SAA1B,EAAK5Q,MAAM8O,YACX,EAAKyB,YAvBJ,4CAAF,sDA4BXjM,iBAAkB5D,KAAKV,MAAM8O,WAC7BzK,YAAa3D,KAAKV,MAAMqE,aAAe3D,KAAKkO,aAG1ClO,KAAKV,MAAMqO,oBAAsBvQ,IAAc4C,KAAKV,MAAMmF,gBAAkBzE,KAAKV,MAAMwQ,iBAEzF,kBAACW,GAAD,CAAgB1O,SAAU/B,KAAKjC,MAAM+D,WAAWC,SAChC9B,MAAOD,KAAKjC,MAAM+D,WAAW7B,MAC7BgD,SAAUjD,KAAKjC,MAAM+D,WAAWmB,SAChCkL,qBAAsBnO,KAAKV,MAAM6O,qBACjCT,cAAe1N,KAAK0N,cACpBlB,UAAWxM,KAAKwM,iBA9UhD,GAA8B5L,IAAMC,WAoV9B0P,GAAgB3P,IAAME,MAAK,SAAC/C,GAC9B,OACI,yBAAKgC,UAAU,kBACV3C,GAAY,yBAAK2C,UAAU,YACxB,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,SACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,qBAOzB0Q,GAAiB7P,IAAME,MAAK,SAAC/C,GAC/B,OACI,yBAAKgC,UAAU,mBACX,yBAAKA,UAAU,gBAAmC,aAAnBhC,EAAMgE,SAA0BhE,EAAMgE,SAAWhE,EAAMkC,OACtF,yBAAKF,UAAU,gBAAmC,KAAnBhC,EAAMkF,SAAkBlF,EAAMkF,SAAW,YACxE,yBAAKlD,UAAU,gBACVhC,EAAMoQ,qBAAqB1L,WAAWqE,MAAMzH,cADjD,MAEyE,GAAjEtB,EAAMoQ,qBAAqB1L,WAAWC,kBAAkB/C,QAAakD,QAAQ,GAFrF,KAGsD,KAAjD9E,EAAMoQ,qBAAqBxL,YAAYmE,MAAgB,IAAM/I,EAAMoQ,qBAAqBxL,YAAYmE,MAAMzH,cACvG,OAA2E,GAAlEtB,EAAMoQ,qBAAqBxL,YAAYD,kBAAkB/C,QAAakD,QAAQ,GAAK,KAAQ,IAE5G,yBAAK9C,UAAU,gBAAf,eACIhC,EAAMoQ,qBAAqB1L,WAAWC,kBAAkB5D,QACxDf,EAAMoQ,qBAAqBxL,YAAYD,kBAAkB5D,QAF7D,kBAGIf,EAAMoQ,qBAAqB1L,WAAWC,kBAAkB7D,OACxDd,EAAMoQ,qBAAqBxL,YAAYD,kBAAkB7D,QAC7D,yBAAKkB,UAAU,gBAAf,WAAuChC,EAAMoQ,qBAAqB1L,WAAWC,kBAAkB9C,WAC/F7B,EAAMoQ,qBAAqBxL,YAAYD,kBAAkB9C,YACzD,yBAAKG,UAAU,eAAeE,MAAO,CAACyQ,eAAgB,aAAcvN,QAASpF,EAAM2P,eAAnF,QACA,yBAAK3N,UAAU,YAAYoD,QAASpF,EAAMyO,WAA1C,QAA0D,yBAAK3I,IAAKC,IAAO/D,UAAU,QAAQgE,IAAI,UAuB9F0F,gBAjBS,SAACnK,GAAsB,IAAD,EACbA,EAAMoK,UACnC,MAAO,CACHC,OAHsC,EACnCA,OAEK7H,WAH8B,EAC3BA,eAMQ,SAAC8H,GAExB,MAAO,CACHmE,eAAgB,SAAChM,GAAD,OAAsB6H,GNhZL9H,EMgZuCC,EN/Y5E,uCAAO,WAAO6H,GAAP,SAAA1L,EAAA,sDACH0L,EAAS,CACL5H,KCtCwB,uBDuCxB8H,OAAQ,CAAChI,WAAYA,KAHtB,2CAAP,wDADoC,IAACA,GMiZjCkM,YAAa,SAAC/N,GAAD,OAAmB2J,GNxYF9H,EMwYiC7B,ENvYnE,uCAAO,WAAO2J,GAAP,SAAA1L,EAAA,sDACH0L,EAAS,CACL5H,KChDqB,oBDiDrB8H,OAAQ,CAAChI,WAAYA,KAHtB,2CAAP,wDADiC,IAACA,GMyY9BmM,eAAgB,SAAChL,GAAD,OAAsB2G,GNhYL9H,EMgYuCmB,EN/X5E,uCAAO,WAAO2G,GAAP,SAAA1L,EAAA,sDACH0L,EAAS,CACL5H,KCvDwB,uBDwDxB8H,OAAQ,CAAChI,WAAYA,KAHtB,2CAAP,wDADoC,IAACA,MMqY1B2H,CAA6CgE,IClb/CkD,GAAb,6KAQQ,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAM3U,EAAU4U,MAAOC,UAAWrD,KACzC,kBAAC,IAAD,CAAOmD,KAAM3U,EAAU8U,KAAMD,UAAWrD,KACxC,kBAAC,IAAD,CAAOmD,KAAM3U,EAAUmU,SAAUU,UAAWrD,KAC5C,kBAAC,IAAD,CAAOmD,KAAM3U,EAAUqU,MAAOQ,UAAWrD,QAbzD,+BAmBQ,OACI,kBAAC,IAAD,KAASzN,KAAKgR,oBApB1B,GAA0BpQ,IAAMC,W,2QCc1BoQ,GAAuB,CACzBtH,OAAQ,CAAC,CACLgC,MAAO,CACH,CAACW,MAAO4E,KAAe7E,SAAU8E,KAAoBnP,KAAM9F,EAAKM,QAASiL,YAAa,KACtF,CACI6E,MAAO8E,KACP/E,SAAUgF,KACVrP,KAAM9F,EAAKO,SACXgL,YAAa,EACbmB,mBAAoB,uBACpBC,kBAAmB,KAG3BuD,MAAO,wBAA0B+D,WAAYhU,EAAMiU,SACnDnN,SAAU,CAACoH,MAAOiH,KAAgBhH,OAAQiH,OAE1C,CACI5F,MAAO,CACH,CACIW,MAAO4E,KACP7E,SAAU8E,KACVnP,KAAM9F,EAAKW,eACX4K,YAAa,EACbmB,mBAAoB,qBACpBC,kBAAmB,IAEvB,CACIyD,MAAOkF,KACPnF,SAAUoF,KACVzP,KAAM9F,EAAKS,eACX8K,YAAa,EACbmB,mBAAoB,2BACpBC,kBAAmB,0BACnB5B,gBAAgB,GAEpB,CACIqF,MAAOoF,KACPrF,SAAUsF,KACV3P,KAAM9F,EAAKQ,cACX+K,YAAa,EACbmB,mBAAoB,0BACpBC,kBAAmB,2BAE3BuD,MAAO,qBAAuB+D,WAAYhU,EAAMmU,MAChDrN,SAAU,CAACoH,MAAOuH,KAAetH,OAAQuH,QAKjD/P,WAAY,CACRC,SAAU,GACV9B,MAAO,GACPgD,SAAU,GACV8D,aAAc,IAElB+K,MAAO,GAmBIC,GAhBK,WAAgD,IAA/CzS,EAA8C,uDAA3B2R,GAAWe,EAAgB,uCAC/D,OAAQA,EAAOhQ,MACX,IPlF4B,uBOmFxB,OAAO,2BAAI1C,GAAX,IAAkBwC,WAAW,2BAAKxC,EAAMwC,YAAZ,IAAwBC,SAAUiQ,EAAOlI,OAAOhI,eAChF,IPrFyB,oBOsFrB,OAAO,2BAAIxC,GAAX,IAAkBwC,WAAW,2BAAKxC,EAAMwC,YAAZ,IAAwB7B,MAAO+R,EAAOlI,OAAOhI,eAC7E,IPrF4B,uBOsFxB,OAAO,2BAAIxC,GAAX,IAAkBwC,WAAW,2BAAKxC,EAAMwC,YAAZ,IAAwBmB,SAAU+O,EAAOlI,OAAOhI,eAChF,IPtFwB,mBOwFpB,OADAM,QAAQC,IAAI,6BAA8B2P,EAAOlI,OAAOhI,YACjD,2BAAIxC,GAAX,IAAkBwC,WAAW,2BAAKxC,EAAMwC,YAAZ,IAAwBiF,aAAciL,EAAOlI,OAAOhI,eACpF,QACI,OAAOxC,ICnFb2S,GAAWC,2BAA2B,CACxCxI,UAAWqI,KAKAI,GAFDC,uBAAYH,GAVL,GAU6BI,+BAAoBC,2BAAgBC,QCAvEC,OATf,WAEI,OACI,kBAAC,IAAD,CAAUL,MAAOA,IACb,kBAAC,GAAD,QCEQM,QACW,cAA7BxO,OAAOC,SAASwO,UAEe,UAA7BzO,OAAOC,SAASwO,UAEhBzO,OAAOC,SAASwO,SAAS7U,MACvB,2D,qBCLN8U,EAAWC,WAJY,CACnBC,MAAO,gBAoBXC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,GAAD,OAEJ3V,SAAS4V,eAAe,SDyGtB,kBAAmBvV,WACrBA,UAAUwV,cAAcC,MACrBtH,MAAK,SAAAuH,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnR,QAAQmR,MAAMA,EAAMC,c","file":"static/js/main.87c86e99.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow-black.a51dcbe8.svg\";","module.exports = __webpack_public_path__ + \"static/media/oval.f07768aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/rectangle.a40fabd1.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-white.96831bea.svg\";","module.exports = __webpack_public_path__ + \"static/media/drop-down.d9213db9.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-grey.d3f5960e.svg\";","module.exports = __webpack_public_path__ + \"static/media/model-earring.b57c099a.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earring-4sim.a493fa38.png\";","module.exports = __webpack_public_path__ + \"static/media/red-oval.ddaf0401.svg\";","module.exports = __webpack_public_path__ + \"static/media/red-rectangle.97344bb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/model-earrings-identical.161c5b0d.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earring-two.d292ffa9.png\";","module.exports = __webpack_public_path__ + \"static/media/model-necklace.1c9cb5d4.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earrings-identical-4sim.4ce31784.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earring-two-4sim.461f73fd.png\";","module.exports = __webpack_public_path__ + \"static/media/model-necklace-4sim.09ccf73a.png\";","module.exports = __webpack_public_path__ + \"static/media/img-yellow-gold-earring.f59eecc7.png\";","module.exports = __webpack_public_path__ + \"static/media/img-white-gold-earring.2018785e.png\";","module.exports = __webpack_public_path__ + \"static/media/img-yellow-gold-necklace.76f7bc70.png\";","module.exports = __webpack_public_path__ + \"static/media/img-white-gold-necklace.60ddea61.png\";","export enum AppRoutes {\n    HOME = '/home',\n    STYLE = '/style',\n    CATEGORY = '/category',\n    MORSE = '/morse',\n    ROOT = ''\n  }","export interface Card {\n    image:string;\n    simImage:string;\n    type:TYPE,\n    stepsNumber :number;\n    rightNecklaceClass?: string;\n    leftNecklaceClass?: string;\n    duplicateMorse?: boolean;\n    // material:any;\n  }\n\n\nexport enum TYPE {\n    NECKLACE,\n    EARRING,\n    WHITE_GOLD,\n    YELLOW_GOLD,\n    SINGLE_EARRING,\n    IDENTICAL_PAIR,\n    DISTINCT_PAIR,\n    SINGLE_NECKLACE,\n    GOLD\n}\n\n\nexport enum Types {\n    STYLE,\n    MATERTIAL,\n    CATEGORY\n}\n\n// export enum Category {\n//     NECKLACE,\n//     EARRING\n// }\n\n// export enum Style {\n//     SINGLE_EARRING,\n//     IDENTICAL_PAIR,\n//     DISTINCT_PAIR,\n//     SINGLE_NECKLACE\n// }\n\nexport interface Slider {\n    cards:Card[],\n    title:string,\n    screenType:Types;\n    material:any;\n\n}\n\n\nexport interface ChainDetails {\n    length:number,\n    dashSum:number,\n    dotSum:number,\n    totalPrice:number\n}\n\nexport const  typeToString:any  = (key:TYPE)=> {\n\n   switch(key){\n\n       case TYPE.WHITE_GOLD :\n       return \"WHITE GOLD\"\n\n        case TYPE.YELLOW_GOLD :\n        return \"YELLOW GOLD\"\n\n        case TYPE.EARRING :\n       return \"EARRING\"\n\n        case TYPE.NECKLACE :\n       return \"NECKLACE\"\n\n        case TYPE.DISTINCT_PAIR :\n       return \"DISTINCT PAIR\"\n\n        case TYPE.IDENTICAL_PAIR :\n       return \"IDENTICAL PAIR\"\n\n        case TYPE.SINGLE_NECKLACE :\n       return \"SINGLE NECKLACE\";\n\n        case TYPE.SINGLE_EARRING :\n       return \"SINGLE EARRING\";\n\n       default:\n           return null\n   }\n\n}\n\nexport const  stringToType:any  = (stringType:string)=> {\n\n    switch(stringType){\n        case \"WHITE GOLD\" :\n        return TYPE.WHITE_GOLD\n\n        case \"YELLOW GOLD\" :\n         return TYPE.YELLOW_GOLD\n\n         case \"EARRING\" :\n         return TYPE.EARRING\n\n        case \"NECKLACE\" :\n         return TYPE.NECKLACE\n\n        case \"DISTINCT PAIR\" :\n         return TYPE.DISTINCT_PAIR\n\n        case \"IDENTICAL PAIR\" :\n         return TYPE.IDENTICAL_PAIR\n\n        case \"SINGLE NECKLACE\" :\n         return TYPE.SINGLE_NECKLACE\n\n        case \"SINGLE EARRING\" :\n         return TYPE.SINGLE_EARRING\n\n        default:\n            return TYPE.EARRING\n\n    }\n\n }\n\n\nexport const  remainingTypes:any = (key:TYPE)=> {\n    switch (key) {\n        case TYPE.WHITE_GOLD :\n            return [{key: TYPE.YELLOW_GOLD, displayName: \"YELLOW GOLD\"}];\n        case TYPE.YELLOW_GOLD :\n            return [{key: TYPE.WHITE_GOLD, displayName: \"WHITE GOLD\"}];\n        case TYPE.GOLD :\n            return [{key: TYPE.WHITE_GOLD, displayName: \"WHITE GOLD\"},\n                {key: TYPE.YELLOW_GOLD, displayName: \"YELLOW GOLD\"}];\n        case TYPE.EARRING :\n            return [\n                {key: TYPE.NECKLACE, displayName: \"NECKLACE\"},\n                {key: TYPE.DISTINCT_PAIR, displayName: \"EARRINGS - DISTINCT\"},\n                {key: TYPE.IDENTICAL_PAIR, displayName: \"EARRINGS - IDENTICAL\"},\n                {key: TYPE.SINGLE_EARRING, displayName: \"EARRINGS - SINGLE \"},\n            ];\n        case TYPE.NECKLACE :\n            return [\n                {key: TYPE.DISTINCT_PAIR, displayName: \"EARRINGS - DISTINCT\"},\n                {key: TYPE.IDENTICAL_PAIR, displayName: \"EARRINGS - IDENTICAL\"},\n                {key: TYPE.SINGLE_EARRING, displayName: \"EARRINGS - SINGLE\"},\n            ];\n        case TYPE.DISTINCT_PAIR :\n            return [\n                {key: TYPE.NECKLACE, displayName: \"NECKLACE\"},\n                {key: TYPE.IDENTICAL_PAIR, displayName: \"EARRINGS - IDENTICAL\"},\n                {key: TYPE.SINGLE_EARRING, displayName: \"EARRINGS - SINGLE\"},\n            ];\n        case TYPE.IDENTICAL_PAIR :\n            return [\n                {key: TYPE.NECKLACE, displayName: \"NECKLACE\"},\n                {key: TYPE.DISTINCT_PAIR, displayName: \"EARRINGS - DISTINCT\"},\n                {key: TYPE.SINGLE_EARRING, displayName: \"EARRINGS - SINGLE\"},\n            ];\n        case TYPE.SINGLE_EARRING :\n            return [\n                {key: TYPE.NECKLACE, displayName: \"NECKLACE\"},\n                {key: TYPE.DISTINCT_PAIR, displayName: \"EARRINGS - DISTINCT\"},\n                {key: TYPE.IDENTICAL_PAIR, displayName: \"EARRINGS - IDENTICAL\"},\n            ];\n        default:\n            return {};\n    }\n }\n","declare global {\n    interface Window {\n        chrome: any;\n    }\n}\n\n// declare\n\nexport const ALPHA_TO_MORSE: { [key: string]: string; } = {\n    \"A\": \".-\",\n    \"B\": \"-...\",\n    \"C\": \"-.-.\",\n    \"D\": \"-..\",\n    \"E\": \".\",\n    \"F\": \"..-.\",\n    \"G\": \"--.\",\n    \"H\": \"....\",\n    \"I\": \"..\",\n    \"J\": \".---\",\n    \"K\": \"-.-\",\n    \"L\": \".-..\",\n    \"M\": \"--\",\n    \"N\": \"-.\",\n    \"O\": \"---\",\n    \"P\": \".--.\",\n    \"Q\": \"--.-\",\n    \"R\": \".-.\",\n    \"S\": \"...\",\n    \"T\": \"-\",\n    \"U\": \"..-\",\n    \"V\": \"...-\",\n    \"W\": \".--\",\n    \"X\": \"-..-\",\n    \"Y\": \"-.--\",\n    \"Z\": \"--..\",\n    \" \": \" \"\n};\n\nexport const MORSE_TO_ALPHA = {\n    \".-\": \"A\",\n    \"-...\": \"B\",\n    \"-.-.\": \"C\",\n    \"-..\": \"D\",\n    \".\": \"E\",\n    \"..-.\": \"F\",\n    \"--.\": \"G\",\n    \"....\": \"H\",\n    \"..\": \"I\",\n    \".---\": \"J\",\n    \"-.-\": \"K\",\n    \".-..\": \"L\",\n    \"--\": \"M\",\n    \"-.\": \"N\",\n    \"---\": \"O\",\n    \".--.\": \"P\",\n    \"--.-\": \"Q\",\n    \".-.\": \"R\",\n    \"...\": \"S\",\n    \"-\": \"T\",\n    \"..-\": \"U\",\n    \"...-\": \"V\",\n    \".--\": \"W\",\n    \"-..-\": \"X\",\n    \"-.--\": \"Y\",\n    \"--..\": \"Z\",\n};\n\nexport const MORSE_TO_IMG: any = {\n    '-': `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"8\" viewBox=\"0 0 20 8\">\n    <path fill=\"#FFF\" fill-rule=\"evenodd\" d=\"M978 379H998V387H978z\" transform=\"translate(-978 -379)\"/>\n        </svg>`,\n    '.': `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\">\n            <circle cx=\"972\" cy=\"383\" r=\"4\" fill=\"#FFF\" fill-rule=\"evenodd\" transform=\"translate(-968 -379)\"/>\n        </svg>`\n};\n\nexport const isMobile = document.documentElement.clientWidth < 600;\n\n// const isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);\n\n// const isSafari = /constructor/i.test(window.HTMLElement.toString()) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));\n\n// window.chrome\n// export const  isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime)&&isMobile;\nexport const isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n\n// var isSafari = /constructor/i.test(window.HTMLElement.toString()) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));\n// export const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\n// export const isSafari = (navigator.userAgent.indexOf(\"Safari\") != -1)&&isMobile;\nexport const isSafari = /Safari/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent);\n\n// export const user = navigator.userAgent;\n\nexport const isAndroid = /Android/.test(navigator.userAgent);\n\n\nexport const isSamsungBrowser = navigator.userAgent.match(/SamsungBrowser/i) && isMobile;\n\n\nexport const createPopupWin = (pageURL: string, pageTitle: string,\n                               popupWinWidth: number, popupWinHeight: number, top: number, left: number) => {\n    // var left = (window.screen.width ) ;\n    // var top = (window.screen.height ) ;\n    // var myWindow = window.open(pageURL, pageTitle,\n    //     'resizable=yes, width=' + popupWinWidth\n    //     + ', height=' + popupWinHeight + ', top='\n    //     + top + ', left=' + left);\n};\n\n// function lock (orientation) {\n//     // Go into full screen first\n//     if (document.documentElement.requestFullscreen) {\n//       document.documentElement.requestFullscreen();\n//     } else if (document.documentElement.mozRequestFullScreen) {\n//       document.documentElement.mozRequestFullScreen();\n//     } else if (document.documentElement.webkitRequestFullscreen) {\n//       document.documentElement.webkitRequestFullscreen();\n//     } else if (document.documentElement.msRequestFullscreen) {\n//       document.documentElement.msRequestFullscreen();\n//     }\n\n//     // Then lock orientation\n//     screen.orientation.lock(orientation);\n//   }\n","import React from 'react';\nimport './MorseTextInput.scss';\nimport {ALPHA_TO_MORSE, isMobile} from '../../../assets/Constants';\nimport circle from '../../../assets/oval.svg';\nimport dash from '../../../assets/rectangle.svg';\nimport red_circle from '../../../assets/red-oval.svg';\nimport red_dash from '../../../assets/red-rectangle.svg';\nimport {ChainDetails} from '../../../models/Interfaces';\n\nconst MAX_LENGTH = 100;\nexport const DOT_PRICE = 560;\nexport const DASH_PRICE = 980;\n\ninterface Props {\n    className: string;\n    hidePlaceholder?: boolean;\n    onChange: (chain: string, indexError: number, chainDetails: ChainDetails) => void;\n    inputRef: (inputRef: any) => void;\n}\n\ninterface State {\n    text: string;\n    dashLength: number;\n    dotLength: number;\n    chainLength: number;\n    indexError: number;\n    focus: boolean;\n\n}\n\nexport class MorseTextInput extends React.Component<Props, State> {\n\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {text: '', dashLength: 0, dotLength: 0, chainLength: 0, indexError: -1, focus: true};\n    }\n\n    handleChange = async (event: any) => {\n        if (/^(([a-zA-Z]{1,})\\s{0,1})*$/m.test(event.target.value.toString())) {\n            const value: string = event.target.value;\n\n            ///////////////////////\n            await this.setState({text: value, dashLength: 0, dotLength: 0, chainLength: 0, indexError: -1});\n            let morseSum = 0;\n            let dotSum = 0;\n            let dashSum = 0;\n            let charSum = 0;\n            value.split('').map(async (c: string, index) => {\n                const morseChar = ALPHA_TO_MORSE[c.toUpperCase()].split('');\n                if (this.state.indexError === -1)\n                    charSum++;\n\n                if (this.state.indexError === -1)\n                    morseChar.forEach((char) => {\n                        if (this.state.indexError === -1) {\n\n                            if (char === '.') {\n                                this.setState({\n                                    dotLength: this.state.dotLength + 3,\n                                    chainLength: this.state.chainLength + 3,\n                                });\n\n                                morseSum += 3;\n                                dotSum += 1;\n\n                            } else if (char === '-') {\n                                this.setState({\n                                    dashLength: this.state.dashLength + 7,\n                                    chainLength: this.state.chainLength + 7\n                                });\n                                morseSum += 7;\n                                dashSum += 1;\n                            } else if (char === ' ') {\n                                this.setState({chainLength: this.state.chainLength + 2.5});\n                                morseSum += 2.5;\n                            }\n                            if (morseSum > MAX_LENGTH && this.state.indexError === -1) {\n                                this.props.onChange(value.slice(0, charSum), index, {\n                                    length: morseSum,\n                                    dotSum: dotSum,\n                                    dashSum: dashSum,\n                                    totalPrice: (dotSum * DOT_PRICE + dashSum * DASH_PRICE)\n                                });\n                                this.setState({indexError: index});\n                            }\n\n                            this.props.onChange(value.slice(0, charSum), this.state.indexError, {\n                                length: morseSum,\n                                dotSum: dotSum,\n                                dashSum: dashSum,\n                                totalPrice: (dotSum * DOT_PRICE + dashSum * DASH_PRICE)\n                            });\n                        }\n\n                    });\n                return morseChar.join('');\n            }).join('');\n\n            if (value.length === 0) {\n                this.props.onChange(value, -1, {length: 0, dotSum: 0, dashSum: 0, totalPrice: 0});\n            }\n        }\n    };\n\n    render() {\n        return (<div className={\"input-wrapper-all \" + this.props.className}>\n                <div className={\"morse-text-input-div\"} style={{border: 5, borderColor: \"black\"}}>\n                    <input autoFocus={this.state.focus}\n                           ref={(input) => {\n                               this.props.inputRef(input);\n                           }}\n                           style={{textIndent: this.state.text.length < 1 ? '-35vw' : '0'}}\n                           className={\"morse-text-input\"}\n                           value={this.state.indexError === -1 ? this.state.text : this.state.text.slice(0, this.state.indexError)}\n                           onChange={this.handleChange}/>\n                    {this.state.text.length === 0 && !this.props.hidePlaceholder &&\n                    <div className=\"placeholder\">TYPE</div>}\n                    <Morse text={this.state.text} indexError={this.state.indexError}/>\n                </div>\n\n                <div className={\"error-position\" + (this.state.indexError === -1 ? \" invalid-validations\" : '')}>\n                    <div className=\"error-message\">\n                        {`The morse Secret is too long!`.toLocaleUpperCase()}\n                    </div>\n                    {!isMobile && <div className=\"suggestions\">\n                        &nbsp;{` Here are some other suggestions:`.toLocaleUpperCase()}<br/>\n                        {`“be mine” “Love” “Marry me” “Candy”`.toLocaleUpperCase()}\n                    </div>}\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\nexport const Morse = React.memo((props: { text: string, indexError: number, additionalClass?: string, withSpaces?: boolean }) => {\n    return (\n        <div className={`text-span-input ${props.additionalClass}`}\n             dangerouslySetInnerHTML={{\n                 __html: `${\n                     props.text.slice(0, props.indexError !== -1 ? (props.indexError + 1) : props.text.length).split('').map((c: string, index: number) => {\n                         return `<span class=\"span-char-input ${props.text.length < 8 ? '' : props.text.length < 14 ? 'long-text-width' : 'too-long-text-width'}\n                     ${index === props.indexError && props.indexError !== -1 ? \"red\" : ''}\">${c}<span class=\"char\" >${ALPHA_TO_MORSE[c.toUpperCase()].split('').map((cc: string) => {\n\n                             if (cc === '.') {\n                                 if (index === props.indexError && props.indexError !== -1)\n                                     return `<img src=${red_circle} class=\"icon dot-width-input\"  />`;\n                                 return `<img src=${circle} class=\"icon dot-width-input\"  />`;\n                             } else if (cc === '-') {\n                                 if (index === props.indexError && props.indexError !== -1)\n                                     return `<img src=${red_dash} class=\"icon dash-width-input\" />`;\n                                 return `<img src=${dash} class=\"icon dash-width-input\"  />`;\n                             } else if (cc === ' ') {\n                                 return props.withSpaces ? `&nbsp;` : '';\n                             }\n                             return false;\n                         }).join('')}</span></span>`;\n                     }).join('')}`\n             }}>\n        </div>\n    );\n});\n","import React from 'react';\nimport './BottomBar.scss';\nimport {remainingTypes, stringToType, TYPE} from '../../../models/Interfaces';\nimport {DOT_PRICE, DASH_PRICE} from '../MorseTextInput/MorseTextInput';\nimport arrow from '../../../assets/images/arrow-black.svg';\nimport dropdown_icon from '../../../assets/images/drop-down.svg';\n\n\ninterface Props {\n    className?: string;\n    userChoice: any;\n    secret: any;\n    selectedType: (value: any) => void;\n    cardClicked: Boolean;\n    getSelected: (selected: boolean, add?: any) => void;\n    buttonTextMobile: string;\n}\n\ninterface State {\n    notSelectedArrayHover: any[];\n    isMenuOpen: boolean;\n    isMaterialMobileOpen: boolean;\n    isCategoryMobileOpen: boolean;\n    isSecretMobileOpen: boolean;\n}\n\nexport class BottomBar extends React.Component<Props, State> {\n\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            notSelectedArrayHover: [],\n            isMenuOpen: false,\n            isMaterialMobileOpen: false,\n            isCategoryMobileOpen: false,\n            isSecretMobileOpen: false\n        };\n    }\n\n    componentDidMount(): void {\n        this.setState({\n            notSelectedArrayHover: !this.props.userChoice ? remainingTypes(stringToType('EARRING'))\n                ?\n                this.props.userChoice.style === '' ? remainingTypes(stringToType(this.props.userChoice.category))\n                    : remainingTypes(stringToType(this.props.userChoice.style)) : [] : []\n        });\n    }\n\n    handleClickedItem(c: any, type: string) {\n        this.props.selectedType({value: c, keyinput: type});\n    }\n\n    handleEditSecret(aIsSecondChain = false) {\n        console.log('3333', aIsSecondChain);\n        this.props.getSelected(true, 'bbbb');\n    }\n\n    formatTotalPrice(){\n        const total = this.props.secret.firstChain.chainPriceAndWord.totalPrice +\n            this.props.secret.secondChain.chainPriceAndWord.totalPrice\n        const formattedTotal = parseFloat(total).toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n        return formattedTotal\n    }\n\n    render() {\n\n        const enableCategory = this.props.userChoice.category.length !== 0;\n        const enableMaterial = this.props.userChoice.material.length !== 0;\n        const enablePrice = this.props.secret && (this.props.secret.firstChain.chainPriceAndWord.length !== 0);\n        // console.log(\"this.props.userChoice.material\",enableMaterial)\n\n        return (\n            <div className={`bottom-container ${this.props.className ? this.props.className : ''}`}>\n                <div className={`menu-item  ${!enableCategory ? 'not-active-bottom-item' : ''}`}>\n                    {this.props.userChoice ? this.props.userChoice.category === '' ? 'CATEGORY' : this.props.userChoice.category : 'CATEGORY'}\n                    <span> &nbsp;{this.props.userChoice ? this.props.userChoice.style === '' ? '' : `- ${this.props.userChoice.style}` : ''}</span>\n\n                    {enableCategory && <div className={`dropdown-content category-width `}>\n                        {this.props.userChoice.style ? remainingTypes(stringToType(this.props.userChoice.style)).map((c: any, index: number) => {\n                            return (<div key={index} className=\"sub-menu-item dropdown-content-category\"\n                                         onClick={() => this.handleClickedItem(c, \"style\")}>{c.displayName}</div>);\n                        }) : remainingTypes(stringToType(this.props.userChoice.category)).map((c: any, index: number) => {\n                            return (<div key={index} className=\"sub-menu-item dropdown-content-category\"\n                                         onClick={() => this.handleClickedItem(c, \"style\")}>{c.displayName}</div>);\n                        })}\n                    </div>}\n                </div>\n\n\n                {!this.props.secret && <div className=\"menu-item not-active-bottom-item\">SECRET</div>}\n                {this.props.secret &&\n                <>\n                    <SecretButton text={this.props.secret.firstChain.chainPriceAndWord.text}\n                                  handleClick={this.handleEditSecret.bind(this)}></SecretButton>\n                    <SecretButton text={this.props.secret.secondChain.chainPriceAndWord.text}\n                                  isSecondChain={true}\n                                  handleClick={this.handleEditSecret.bind(this)}></SecretButton>\n                </>\n                }\n\n                <div className={`menu-item ${!enableMaterial ? 'not-active-bottom-item' : ''}`}>\n                    {enableMaterial ? this.props.userChoice.material : 'MATERIAL'}\n\n                    {enableMaterial && <div className=\"dropdown-content\">\n                        {enableMaterial ? remainingTypes(stringToType(this.props.userChoice.material)).map((c: any, index: number) => {\n                            return (<div key={index} className=\"sub-menu-item\"\n                                         onClick={() => this.handleClickedItem(c, \"material\")}>{c.displayName}</div>);\n                        }) : remainingTypes(TYPE.GOLD).map((c: any, index: number) => {\n                            return (<div key={index} className=\"sub-menu-item\"\n                                         onClick={() => this.handleClickedItem(c, \"material\")}>{c.displayName}</div>);\n                        })}\n                    </div>}\n                </div>\n\n                <div className={`menu-item end-item ${!enablePrice ? 'not-active-bottom-item' : ''}`}>\n                    PRICE: {this.props.secret ? `$${this.formatTotalPrice()}` : '$0'}\n\n                    {enablePrice && <div className=\"price-dropdown\">\n                        <div className=\"price-item\">DASH STONES:&nbsp; <span className=\"price-text\">{DASH_PRICE}</span>\n\n                            <span\n                                className={\"number-of-stones\"}>X{enablePrice ? (this.props.secret.firstChain.chainPriceAndWord.dashSum +\n                                this.props.secret.secondChain.chainPriceAndWord.dashSum\n                            ) : 0}</span></div>\n                        <div className=\"price-item\">\n\n                            DOT STONES:&nbsp;&nbsp;<span className=\"price-text\">{DOT_PRICE}</span>\n                            <span\n                                className={\"number-of-stones\"}>X{enablePrice ? (this.props.secret.firstChain.chainPriceAndWord.dotSum\n                                + this.props.secret.secondChain.chainPriceAndWord.dotSum\n                            ) : 0}</span>\n\n                        </div>\n\n                    </div>}\n                </div>\n\n\n                <div className={`menu-item-mobile morse-menu-item`}\n                     onClick={() => this.setState({isMenuOpen: !this.state.isMenuOpen})}>\n                    <div className=\"menu-morse-mobile\">i</div>\n                </div>\n                <div\n                    className={`menu-item-mobile button-position-mobile ${!this.props.cardClicked ? 'select-disable' : ''}`}\n                    onClick={() => {\n                        if (this.props.cardClicked)\n                            this.props.getSelected(true);\n                    }}\n                >\n                    {this.props.buttonTextMobile} <img src={arrow} className=\"arrow\" alt=\"\"/>\n                </div>\n\n                {this.state.isMenuOpen && <div className={`mobile-menu`}>\n                    <div className=\"menu-item-sub\" onClick={enableCategory ? () => {\n                        this.setState({isCategoryMobileOpen: !this.state.isCategoryMobileOpen});\n                        this.setState({isSecretMobileOpen: false});\n                        this.setState({isMaterialMobileOpen: false});\n\n                    } : () => {\n                    }}>\n                        {this.props.userChoice ? this.props.userChoice.category === '' ? 'CATEGORY' : this.props.userChoice.category : 'CATEGORY'}\n                        <span>  {this.props.userChoice ? this.props.userChoice.style === '' ? '' : '-  ' + this.props.userChoice.style : ''}</span>\n                        <img src={dropdown_icon} className=\"dropdown-icon\" alt=\"\"/>\n                    </div>\n                    {this.state.isCategoryMobileOpen && (this.props.userChoice.style ? remainingTypes(stringToType(this.props.userChoice.style)).map((c: any) => {\n                        return (<div className=\"menu-item-sub menu-item-sub-black\" onClick={() => {\n                            this.handleClickedItem(c, \"style\");\n                            window.location.reload();\n                        }}>{c.displayName}</div>);\n                    }) : remainingTypes(stringToType(this.props.userChoice.category)).map((c: any) => {\n                        return (<div className=\"menu-item-sub menu-item-sub-black\" onClick={() => {\n                            this.handleClickedItem(c, \"style\");\n                            window.location.reload();\n                        }}>{c.displayName}</div>);\n                    }))}\n                    <div className=\"menu-item-sub\" onClick={enablePrice ? () => {\n                        this.setState({\n                            isSecretMobileOpen: !this.state.isSecretMobileOpen,\n                            isCategoryMobileOpen: false, isMaterialMobileOpen: false\n                        });\n                    } : () => {\n                    }}>\n                        {this.props.secret ? ((this.props.secret.firstChain.chainPriceAndWord.text).toUpperCase() + ' - ' +\n                            ((this.props.secret.firstChain.chainPriceAndWord.length * .1).toFixed(2) + '  ' +\n                                (this.props.secret.secondChain.chainPriceAndWord.length > 0 ? ((this.props.secret.secondChain.chainPriceAndWord.text).toUpperCase() + ' - ' +\n                                    (this.props.secret.secondChain.chainPriceAndWord.length * .1).toFixed(2) + 'cm') : ''))) : 'SECRET'}\n                        <img src={dropdown_icon} className=\"dropdown-icon\" alt=\"\"/>\n                    </div>\n                    {this.state.isSecretMobileOpen && (\n                        <div className=\"menu-item-sub menu-item-sub-black\" onClick={() => {\n                            console.log(\"edit\");\n                        }}>EDIT</div>\n                    )}\n                    <div className=\"menu-item-sub\" onClick={enableMaterial ? () => {\n                        this.setState({isMaterialMobileOpen: !this.state.isMaterialMobileOpen});\n                        this.setState({isCategoryMobileOpen: false});\n                        this.setState({isSecretMobileOpen: false});\n                    } : () => {\n                    }}>\n                        {this.props.userChoice ? this.props.userChoice.material === '' ? 'MATERIAL' : this.props.userChoice.material : 'MATERIAL'}\n                        <img src={dropdown_icon} className=\"dropdown-icon\" alt=\"\"/>\n                    </div>\n                    {this.state.isMaterialMobileOpen && (this.props.userChoice.material ? remainingTypes(stringToType(this.props.userChoice.material)).map((c: any) => {\n                        return (<div className=\"menu-item-sub menu-item-sub-black\"\n                                     onClick={() => this.handleClickedItem(c, \"material\")}>{c.displayName}</div>);\n                    }) : remainingTypes(TYPE.GOLD).map((c: any) => {\n                        return (<div className=\"menu-item-sub menu-item-sub-black\"\n                                     onClick={() => this.handleClickedItem(c, \"material\")}>{c.displayName}</div>);\n                    }))}\n                </div>}\n            </div>\n        );\n    }\n}\n\nconst SecretButton = React.memo((props: any) => {\n    if (!props.text || '' === props.text.trim()) {\n        return <></>;\n    }\n    const chainCoreLength = (props.text.length * .1).toFixed(2);\n    const chainText4Button = `${props.text.toUpperCase()} - ${chainCoreLength} cm`;\n\n    return (\n        <div className=\"menu-item\">\n            {chainText4Button}\n            <div className=\"dropdown-content\">\n                <div className=\"sub-menu-item\"\n                     onClick={() => props.handleClick(props.isSecondChain)}>\n                    EDIT SECRET\n                </div>\n            </div>\n        </div>\n    );\n});\n\n","import React from 'react';\nimport './CardComponent.scss';\nimport {TYPE} from '../../../models/Interfaces';\n\ninterface Props {\n    backgroundImage: string;\n    mouseText: string;\n    onMouseMove: Function;\n    onClick: Function;\n    selectedCard: boolean;\n    isCardSelected: boolean;\n    isBuyPage: boolean;\n    isAfterBuyPage: boolean;\n    isMaterialPage: boolean\n    onMouseEnter: Function;\n    onMouseLeave: Function;\n    cardType: TYPE;\n    buyPage: boolean;\n}\n\ninterface State {\n    hover: boolean,\n}\n\nexport class CardComponent extends React.Component<Props, State> {\n\n    getClassName = () => {\n        if (this.props.isAfterBuyPage)\n            return \"\";\n        if (this.props.isMaterialPage)\n            return \"full-light\";\n        return \"\";\n    };\n\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {hover: false};\n    }\n\n    componentDidUpdate(prevProps: Props) {\n    }\n\n\n    getSelectedCardClass = () => {\n        if (this.props.isCardSelected) {\n            return this.props.selectedCard ? 'full-width' : 'no-width';\n        }\n        return '';\n    };\n\n    render() {\n        return (\n            <div\n                className={`card-wrapper ${this.getSelectedCardClass()} ${this.state.hover ? \"cover\" : \"\"} ${this.props.isMaterialPage ? \"full-light\" : \"\"} ${this.getClassName()}`}\n                onClick={this.props.onClick.bind(this)}\n                onMouseMove={() => this.props.onMouseMove(this.props.mouseText)}>\n\n                <div className=\"layer\"/>\n\n                {!this.state.hover && !this.props.isCardSelected &&\n                <div className='off-line'>\n                    <div className=\"line hidden\"/>\n                    <div className=\"line hide-line-mobile\"/>\n                    <div className=\"line hide-line-mobile\"/>\n                    <div className=\"line\"/>\n                    <div className=\"line hide-line-mobile\"/>\n                    <div className=\"line hide-line-mobile\"/>\n                    <div className=\"line hidden\"/>\n                </div>}\n\n                <div\n                    className={`item-column ${this.props.isAfterBuyPage || this.props.isMaterialPage ? \"center-woman\" : \"\"}  \n                    ${this.props.isCardSelected && this.props.cardType === TYPE.NECKLACE ? 'necklace-move' : 'other-move'}`}\n                    style={{backgroundImage: `url(${this.props.backgroundImage})`,}}\n                    onMouseEnter={() => {\n                        this.setState({hover: true});\n                        this.props.onMouseEnter();\n                    }}\n                    onMouseLeave={() => {\n                        this.setState({hover: false});\n                        this.props.onMouseLeave();\n                    }}>\n                    <div className=\"gradiant\"/>\n\n\n                </div>\n                {this.state.hover &&\n                <div className=\"type-mobile\">\n                    {this.props.mouseText}\n                </div>}\n            </div>\n\n        );\n    }\n}\n","import React from 'react';\nimport './MorseMenu.scss';\nimport {ALPHA_TO_MORSE} from '../../../assets/Constants';\nimport circle from '../../../assets/oval.svg';\nimport dash from '../../../assets/rectangle.svg';\n\ninterface Props {\n    onClose: () => void;\n    className?: string;\n}\n\ninterface State {\n}\n\nexport class MorseMenu extends React.Component<Props, State> {\n\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {hover: false};\n    }\n\n    componentDidUpdate(prevProps: Props) {\n    }\n\n\n    render() {\n        return (\n            <>\n                <div className={`morse-menu-wrapper ${this.props.className}`}>\n                    <div className=\"close-icon\" onClick={() => this.props.onClose()}/>\n                    <div className=\"list-wrapper\">\n                        <table>\n                            <tbody>\n                            {Object.entries(ALPHA_TO_MORSE).map(([key, value]) => {\n                                if (value) {\n                                    let val = value.toString();\n\n                                    return (\n                                        <tr className=\"list-morse\" key={key}>\n                                            <td>{key}</td>\n                                            {\n                                                val.split('').map((c: any, index) => {\n                                                    const tdKey = `${key}:td:${index}`;\n                                                    if (c === '.') {\n                                                        return <td className=\"code\" key={tdKey}><img src={`${circle}`}\n                                                                                                     className=\"icon-menu\"\n                                                                                                     alt=\"\"/>\n                                                        </td>;\n                                                    } else if (c === '-') {\n                                                        return <td className=\"code\" key={tdKey}><img src={`${dash}`}\n                                                                                                     className=\"icon-menu dash-width\"\n                                                                                                     alt=\"\"/>\n                                                        </td>;\n                                                    }\n                                                    return null;\n                                                })\n                                            }\n                                        </tr>);\n                                }\n                                return null;\n                            })}\n                            </tbody>\n                        </table>\n                    </div>\n\n\n                    <div className=\"list-wrapper-mobile\">\n                        <table className=\"column-chars\">\n                            <tbody>\n                            {Object.entries(ALPHA_TO_MORSE).slice(0, 13).map(([key, value]) => {\n                                if (value) {\n                                    let val = value.toString();\n\n                                    return (\n                                        <tr className=\"list-morse\" key={key}>\n                                            <td>{key}</td>\n                                            {\n                                                val.split('').map((c: any, index) => {\n                                                    const tdKey = `${key}:td:${index}`;\n                                                    if (c === '.') {\n                                                        return <td className=\"code\" key={tdKey}>\n                                                            <img src={`${circle}`} className=\"icon-menu\" alt=\"\"/>\n                                                        </td>;\n                                                    } else if (c === '-') {\n                                                        return <td className=\"code\" key={tdKey}>\n                                                            <img src={`${dash}`}\n                                                                 className=\"icon-menu dash-width\" alt=\"\"/>\n                                                        </td>;\n                                                    }\n                                                    return null;\n                                                })\n                                            }\n                                        </tr>\n                                    );\n                                }\n                                return null;\n                            })}\n                            </tbody>\n                        </table>\n                        <table className=\"column-chars\">\n                            <tbody>\n                            {Object.entries(ALPHA_TO_MORSE).slice(13, 26).map(([key, value]) => {\n                                if (value) {\n                                    let val = value.toString();\n\n                                    return (\n                                        <tr className=\"list-morse\" key={key}>\n                                            <td>{key}</td>\n                                            {\n                                                val.split('').map((c: any, index) => {\n                                                    const tdKey = `${key}:td:${index}`;\n                                                    if (c === '.') {\n                                                        return <td className=\"code\" key={tdKey}>\n                                                            <img src={`${circle}`} className=\"icon-menu\" alt=\"\"/>\n                                                        </td>;\n                                                    } else if (c === '-') {\n                                                        return <td className=\"code\" key={tdKey}>\n                                                            <img src={`${dash}`} className=\"icon-menu dash-width\"\n                                                                 alt=\"\"/>\n                                                        </td>;\n                                                    }\n                                                    return null;\n                                                })\n                                            }\n                                        </tr>\n                                    );\n                                }\n                                return null;\n                            })}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div className=\"bottom-bar-menu\">\n                        <div className=\"bottom-bar-menu-item\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"7\" height=\"7\" viewBox=\"0 0 8 8\">\n                                <circle cx=\"972\" cy=\"383\" r=\"4\" fill=\"#FFF\" fillRule=\"evenodd\"\n                                        transform=\"translate(-968 -379)\"/>\n                            </svg>\n\n                            &nbsp;$560\n                        </div>\n                        <div className=\"bottom-bar-menu-item\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"8\" viewBox=\"0 0 20 8\">\n                                <path fill=\"#FFF\" fillRule=\"evenodd\" d=\"M978 379H998V387H978z\"\n                                      transform=\"translate(-978 -379)\"/>\n                            </svg>\n                            &nbsp;$980\n                        </div>\n                    </div>\n                </div>\n                <div className={`full-screen-menu ${this.props.className}`} onClick={() => this.props.onClose()}></div>\n            </>\n        );\n\n    }\n}\n","import React from \"react\";\n\nimport './MorsePage.scss';\nimport {IReducers} from \"../../../redux/store\";\nimport {connect} from \"react-redux\";\nimport {MorseMenu} from \"../../SharedComponents/MorseMenu/MorseMenu\";\nimport {Morse, MorseTextInput} from \"../../SharedComponents/MorseTextInput/MorseTextInput\";\nimport circle from '../../../assets/oval.svg';\nimport {ALPHA_TO_MORSE, isMobile, isSamsungBrowser} from \"../../../assets/Constants\";\nimport {userChoiceTypeAction} from \"../../../redux/actions/MainAction\";\n\nimport arrow from '../../../assets/images/arrow-white.svg';\nimport arrow_grey from '../../../assets/images/arrow-grey.svg';\nimport arrow_black from '../../../assets/images/arrow-black.svg';\nimport {Card, ChainDetails} from \"../../../models/Interfaces\";\n\ninterface Props {\n    userChoice: any;\n    // typeChoice:(type:string)=>void;\n    onMorseType: (chainPriceAndWord: any) => void;\n    card: Card;\n    step: number;\n    handleBack: () => void;\n    handleNext: () => void;\n    finishMobileButton: boolean;\n    buyAction: Function;\n    selectEventMobile: boolean;\n    isAfterBuyPage: boolean;\n    resetMorse: boolean;\n    isBuyPage: boolean;\n    firstChain: any;\n    secondChain: any;\n    // inputRef:()\n}\n\ninterface State {\n    morseHover: boolean;\n    x: number;\n    y: number;\n    morseMenuOpen: boolean;\n    isAfterBuy: boolean;\n    firstChain: {\n        chain: string;\n        chainPriceAndWord: any;\n        indexError: number;\n    },\n    secondChain: {\n        chain: string;\n        chainPriceAndWord: any;\n        indexError: number;\n    }\n\n}\n\nexport class MorsePage extends React.Component<Props, State> {\n\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            morseHover: false,\n            x: 0,\n            y: 0,\n            morseMenuOpen: false,\n            isAfterBuy: false,\n            firstChain: {\n                chain: '',\n                indexError: -1,\n                chainPriceAndWord: {text: '', length: 0, totalPrice: 0, dashSum: 0, dotSum: 0}\n            },\n            secondChain: {\n                chain: '',\n                indexError: -1,\n                chainPriceAndWord: {text: '', length: 0, totalPrice: 0, dashSum: 0, dotSum: 0}\n            },\n        };\n    }\n\n\n    handleMouseMove = (e: any) => {\n        this.setState({\n            x: e.clientX,\n            y: e.clientY\n        });\n    };\n\n    handleChange = async (chain: string, indexError: number, chainDetails: ChainDetails) => {\n\n        const chainPriceAndWord = {\n            text: chain,\n            length: chainDetails.length,\n            totalPrice: chainDetails.totalPrice,\n            dashSum: chainDetails.dashSum,\n            dotSum: chainDetails.dotSum\n        };\n\n        if (this.props.card.duplicateMorse) {\n            await this.setState({\n                secondChain: {chain, indexError, chainPriceAndWord},\n                firstChain: {chain, indexError, chainPriceAndWord}\n            });\n\n        } else {\n            if (this.props.step === 1) {\n                await this.setState({firstChain: {chain, indexError, chainPriceAndWord}});\n            } else {\n                await this.setState({secondChain: {chain, indexError, chainPriceAndWord}});\n            }\n\n        }\n        this.props.onMorseType(this.state);\n\n    };\n\n    handleBuy = () => {\n        this.setState({isAfterBuy: true});\n    };\n\n\n    componentDidUpdate(prevProps: Props) {\n        if (prevProps.selectEventMobile !== this.props.selectEventMobile && isMobile) {\n            if (this.props.finishMobileButton) {\n                this.props.handleNext();\n            }\n        }\n\n\n        if (this.props.resetMorse) {\n            this.setState({\n                morseHover: false,\n                x: 0,\n                y: 0,\n                morseMenuOpen: false,\n                isAfterBuy: false,\n                firstChain: {\n                    chain: '',\n                    indexError: -1,\n                    chainPriceAndWord: {text: '', length: 0, totalPrice: 0, dashSum: 0, dotSum: 0}\n                },\n                secondChain: {\n                    chain: '',\n                    indexError: -1,\n                    chainPriceAndWord: {text: '', length: 0, totalPrice: 0, dashSum: 0, dotSum: 0}\n                },\n            });\n        }\n    }\n\n    buttons = () => {\n\n        const enable: boolean = this.state.firstChain.chain.length > 0 && (this.state.firstChain.indexError === -1 && this.state.secondChain.indexError === -1);\n        const enable2: boolean = this.props.card.stepsNumber === 2 ? this.state.secondChain.chain.length > 0 && (this.state.secondChain.indexError === -1 && this.state.secondChain.indexError === -1) : true;\n        if (this.props.step > this.props.card.stepsNumber)\n            return <div className=\"buy-morse\" onClick={this.handleBuy}>\n                BUY <img src={arrow_black} className=\"arrow\" alt=\"\"/>\n            </div>;\n        return <React.Fragment>\n            {this.props.step === this.props.card.stepsNumber ?\n                <div className={`${enable && enable2 ? 'next' : 'next-disable'}`}\n                     onClick={enable && enable2 ? this.props.handleNext : () => {\n                     }}>\n                    DONE\n                    <img src={enable && enable2 ? arrow : arrow_grey} className=\"arrow\" alt=\"\"/>\n                </div> :\n                <div onClick={enable ? this.props.handleNext : () => {\n                }}\n                     className={`${enable ? 'next' : 'next-disable'}`}>\n                    NEXT EAR\n                    <img src={enable ? arrow : arrow_grey} className=\"arrow\" alt=\"\"/>\n                </div>}\n            {<div\n                className={`${this.props.step === this.props.card.stepsNumber && this.props.step === 2 ? 'back' : 'back-disable'}`}\n                onClick={this.props.handleBack}>\n                <img src={arrow_grey} className=\"arrow left-arrow\" alt=\"\"/> BACK </div>}\n        </React.Fragment>;\n    };\n\n    inputFoucs(inputRef: any) {\n        if (inputRef && !this.state.morseMenuOpen)\n            inputRef.focus();\n    }\n\n    getTextMargin = () => {\n        return 0;\n    };\n\n\n    shiftMargin = () => {\n        return this.props.isBuyPage && !isMobile ? '25vw' : 0;\n    };\n\n\n    render() {\n\n\n        return (\n            <div\n                className={`container-morse ${this.props.card.stepsNumber === 2 ? \"container-morse-mini-text\" : \"\"}`}\n                style={{\n                    height: (!isSamsungBrowser) && isMobile ? '87vh' : '100vh',\n                    backdropFilter: this.state.isAfterBuy ? 'brightness(.5)' : 'none'\n                }}>\n                {this.state.isAfterBuy || this.props.isAfterBuyPage ? <BackToShop/> :\n                    <React.Fragment>\n                        {!this.props.isBuyPage &&\n                        <div className=\"question\"\n                             style={{opacity: this.state.firstChain.chain.length < 1 ? 1 : .4}}>\n                            WHAT'S YOUR SECRET?\n                        </div>}\n                        <div className=\"morse-texts\">\n                            {this.props.step === 2 && this.props.card.stepsNumber !== 1 &&\n                            <div className='first-morse'>\n                                <Morse text={this.state.firstChain.chain} indexError={30}/>\n                            </div>}\n                            {<MorseTextInput hidePlaceholder={false} inputRef={this.inputFoucs.bind(this)}\n                                             className={`morse-input ${this.props.step === 1 ? '' : 'display-none'}`}\n                                             onChange={this.handleChange}/>}\n                            {this.props.card.stepsNumber !== 1 &&\n                            <MorseTextInput inputRef={this.inputFoucs.bind(this)} hidePlaceholder={true}\n                                            className={`morse-input ${this.props.step === 2 ? '' : ' display-none'}`}\n                                            onChange={this.handleChange}/>}\n                        </div>\n\n\n                        <MorseChain\n                            card={this.props.card}\n                            className={this.props.card.rightNecklaceClass}\n                            getTextMargin={this.getTextMargin}\n                            shiftMargin={this.shiftMargin}\n                            chain={this.props.firstChain ? this.props.firstChain.chain : \"\"}\n                            step={this.props.step}\n                        />\n\n                        <MorseChain\n                            card={this.props.card}\n                            className={this.props.card.leftNecklaceClass}\n                            getTextMargin={this.getTextMargin}\n                            shiftMargin={this.shiftMargin}\n                            chain={this.props.secondChain ? this.props.secondChain.chain : \"\"}\n                            step={this.props.step}\n                        />\n\n                        <div className='morse-btns'>{this.buttons()}</div>\n                        {<div className={\"morse-menu-icon\"}\n                              onMouseEnter={() => this.setState({morseHover: true})}\n                              onMouseLeave={() => this.setState({morseHover: false})}\n                              onMouseMove={this.handleMouseMove} onClick={() => {\n                            this.setState({morseMenuOpen: true});\n                        }}></div>}\n\n\n                        {<MorseMenu className={this.state.morseMenuOpen ? '' : 'hide-menu'}\n                                    onClose={() => {\n                                        this.setState({morseMenuOpen: false});\n                                    }}/>}\n                    </React.Fragment>}\n\n\n                {this.state.morseHover && <div className=\"mouse-movement\"\n                                               style={{top: this.state.y - 6, left: this.state.x - 190}}>\n                    MORSE GUIDE\n                </div>}\n            </div>\n        );\n    }\n}\n\nconst DotIcon = React.memo((props: any) => {\n    const isFill = props.fill;\n    return (\n        <svg className='morse-char dot-icon' xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\">\n            <circle cx=\"972\" cy=\"383\" r=\"4\" style={{fill: isFill ? 'white' : ''}} fillRule=\"evenodd\"\n                    transform=\"translate(-968 -379)\"/>\n        </svg>\n\n    );\n});\nconst DashIcon = React.memo((props: any) => {\n    const isFill = props.fill;\n    return (\n        <svg className='morse-char dash-svg' width=\"8\" height=\"24\">\n            <rect width=\"8\" height=\"24\" style={{fill: isFill ? 'white' : ''}}/>\n        </svg>\n\n    );\n});\n\nconst mapStateToProps = (state: IReducers) => {\n    const {slides, userChoice} = state.mainState;\n    // console.log(\"userChoice\",userChoice)\n    return {\n        slides, userChoice\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\n    return {\n        typeChoice: (type: ChainDetails) => dispatch(userChoiceTypeAction(type)),\n\n    };\n};\n\n\nconst BackToShop = React.memo((props) => {\n\n    return (\n        <div className=\"back-to-shop-card\">\n            {!isMobile && <Morse text={\"THANK YOU\"} indexError={30} additionalClass={\"thank-you\"} withSpaces={true}/>}\n            {isMobile &&\n            <>\n                <Morse text={\"THANK\"} indexError={30} additionalClass={\"thank-you\"}/>\n                <Morse text={\"YOU\"} indexError={30} additionalClass={\"thank-you\"}/>\n            </>}\n            <div className=\"description\">YOU WERE REDIRECTED TO THE PAYMENT PAGE TO COMPLETE YOUR ORDER</div>\n            <div onClick={() => window.location.reload()} className=\"back-to-shop\">\n                CONTINUE SHOPPING\n                <img src={arrow} className=\"arrow\" alt=\"\"/>\n            </div>\n        </div>\n    );\n});\n\nconst MorseChain = React.memo((props: any) => {\n    return (\n        <div className=\"background-morse-wrapper\">\n            <div className={`paint-morse ${props.className}`}\n                 style={{marginTop: `${props.getTextMargin()}px`, marginRight: props.shiftMargin()}}>\n                <div className='morse-border'>\n                    {props.chain.split('').map((c: string, index: any) => {\n                        const divKey = `${c}:${index}`;\n                        return <div key={divKey}\n                                    className={`tasti ${props.step === props.card.stepsNumber && index === props.chain.split('').length - 1 ? 'white-morse-fill' : 'grey-morse-fill'} `}>\n                            {ALPHA_TO_MORSE[c.toUpperCase()].split('').map((p, iconIndex) => {\n                                const iconKey = `${divKey}:${iconIndex}`;\n                                if (p === '.')\n                                    return <DotIcon key={iconKey} fill={index === props.chain.split('').length - 1}/>;\n                                else if (p === '-')\n                                    return <DashIcon key={iconKey} fill={index === props.chain.split('').length - 1}/>;\n                                else\n                                    return '';\n                            })}\n                        </div>;\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MorsePage);\n","import {Dispatch} from \"redux\";\nimport {USER_CHOICE_CATEGORY, USER_CHOICE_STYLE, USER_CHOICE_MATERIAL, USER_CHOICE_TYPE} from \"./types\";\nimport {ChainDetails} from \"../../models/Interfaces\";\n\n// import { Dispatch } from 'redux';\nexport {};\n// import { getDriverTrackingPoints, filterDriverTrackingPoints } from '../../Services/DriverTrackingPoint';\n// import { GET_ALL_TRACKING_POINTS } from './types';\n\n\n// export const fetchTrackingPointsAction = () => {\n//   return async (dispatch: Dispatch) => {\n//       try{\n\n\n//     const { data } = await getDriverTrackingPoints();\n//     // console.log(data)\n//     const trackingPoints:any = []\n\n//     data.data.forEach((point:any)=>{\n//         if(point.latitude){\n//             trackingPoints.push(point) ;\n//         }\n//         // return false;\n//     })\n//     dispatch({\n//       type: GET_ALL_TRACKING_POINTS,\n//       trackingPoints:trackingPoints\n//     });\n//     }catch(error){\n//         console.log(error)\n//     }\n\n//   };\n// };\n\n\nexport const userChoiceCategoryAction = (userChoice: string) => {\n    return async (dispatch: Dispatch) => {\n        dispatch({\n            type: USER_CHOICE_CATEGORY,\n            choice: {userChoice: userChoice}\n        });\n    };\n};\n\nexport const userChoiceStyleAction = (userChoice: string) => {\n    return async (dispatch: Dispatch) => {\n        dispatch({\n            type: USER_CHOICE_STYLE,\n            choice: {userChoice: userChoice}\n        });\n    };\n};\n\nexport const userChoiceMaterialAction = (userChoice: string) => {\n    return async (dispatch: Dispatch) => {\n        dispatch({\n            type: USER_CHOICE_MATERIAL,\n            choice: {userChoice: userChoice}\n        });\n    };\n};\n\nexport const userChoiceTypeAction = (chainDetails: ChainDetails) => {\n\n    // const dots:number = chainDetails.\n    // const dashs:any = {price:userChoice.dashs.price,pcs:userChoice.dashs.sumDots}\n    return async (dispatch: Dispatch) => {\n        dispatch({\n            type: USER_CHOICE_TYPE,\n            choice: {userChoice: chainDetails}\n        });\n    };\n};\n","export const USER_CHOICE = 'USER_CHOICE';\nexport const USER_CHOICE_STYLE = 'USER_CHOICE_STYLE';\nexport const USER_CHOICE_CATEGORY = 'USER_CHOICE_CATEGORY';\nexport const USER_CHOICE_MATERIAL = 'USER_CHOICE_MATERIAL';\nexport const USER_CHOICE_TYPE = 'USER_CHOICE_TYPE';\n\nexport {}","import React from 'react';\nimport './MaterialComponent.scss';\nimport {isMobile, isSamsungBrowser} from '../../../assets/Constants';\nimport {Slider} from '../../../models/Interfaces';\n\ninterface Props {\n\n    slider: Slider;\n    onClick: Function;\n    // style:any;\n}\n\ninterface State {\n    x: number;\n    y: number;\n    mouseDirection: string;\n    text: string;\n    hoverWhite: boolean;\n    hoverYellow: boolean;\n}\n\nexport class MaterialComponent extends React.Component<Props, State> {\n\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {x: 0, y: 0, mouseDirection: \"left\", text: \"\", hoverWhite: false, hoverYellow: false};\n    }\n\n    handleMouseMove = (e: any, text: string) => {\n\n        this.setState({\n            x: e.clientX,\n            y: e.clientY,\n            text: text\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"material-page\">\n                <div className=\"grid-container first-card-background bb\">\n                    {!this.state.hoverWhite && !this.state.hoverYellow &&\n                    <div className=\"question\"> {'What’s your Material?'.toUpperCase()} </div>}\n\n                    <div className={`mini-item ${this.state.hoverYellow ? \"cover\" : \"mini-item-material\"}`}\n                         onMouseMove={(e) => this.handleMouseMove(e, \"WHITE GOLD\")}\n                         style={{\n                             height: (!isSamsungBrowser && isMobile) ? '78vh' : '100vh',\n                             animation: `${!isSamsungBrowser && isMobile ? 'mymove-chrome' : 'mymove'} 1s`,\n                         }}\n                         onClick={() => this.props.onClick(\"WHITE GOLD\")}\n                         onMouseEnter={() => this.setState({hoverYellow: true})}\n                         onMouseLeave={() => this.setState({hoverYellow: false})}>\n                        <img src={this.props.slider.material.white} className=\"material-image\" alt=\"\"/>\n\n                        {this.state.hoverYellow && isMobile &&\n                        <div className=\"type-mobile-material\">\n                            {this.state.text}\n                        </div>}\n                    </div>\n\n\n                    <div className={`mini-item ${this.state.hoverWhite ? \"cover\" : \"mini-item-material\"}`}\n                         onMouseMove={(e) => this.handleMouseMove(e, \"YELLOW GOLD\")}\n                         style={{\n                             height: (!isSamsungBrowser && isMobile) ? '78vh' : '100vh',\n                             animation: `${!isSamsungBrowser && isMobile ? 'mymove-chrome' : 'mymove'} 1s`,\n                         }}\n                         onClick={() => this.props.onClick(\"YELLOW GOLD\")}\n                         onMouseEnter={() => this.setState({hoverWhite: true})}\n                         onMouseLeave={() => this.setState({hoverWhite: false})}>\n                        <img src={this.props.slider.material.yellow} className=\"material-image\" alt=\"\"/>\n                        {this.state.hoverWhite && isMobile &&\n                        <div className=\"type-mobile-material\">\n                            {this.state.text}\n                        </div>}\n                    </div>\n\n                    <div className=\"mouse-movement\"\n                         style={{\n                             top: this.state.y - 6,\n                             left: this.state.mouseDirection === \"right\" ? this.state.x + 25 : this.state.text.length < 13 ? this.state.x - 200 : this.state.x - 295\n                         }}>\n                        {this.state.text}\n                    </div>\n                </div>\n            </div>\n        );\n\n    }\n}\n","import './ColumnGrid.scss';\nimport React from 'react';\nimport {CardComponent} from '../Card/CardComponent';\nimport {Card, TYPE, typeToString} from '../../../models/Interfaces';\nimport MorsePage from '../../screens/MorsePage/MorsePage';\nimport {RouteComponentProps} from \"react-router\";\nimport {isMobile, isSamsungBrowser} from '../../../assets/Constants';\nimport {MaterialComponent} from '../Material/MaterialComponent';\nimport arrow_black from '../../../assets/images/arrow-black.svg';\n\ninterface Props {\n    slides: any;\n    onClick: Function;\n    slideIndex: number;\n    onMorseType: (chainPriceAndWord: any) => void;\n    onBack: Function;\n    selectMobileButton: boolean;\n    finishMobile: boolean;\n    buyAction: Function;\n    isAfterBuyPage: boolean;\n    selectedBottom: any,\n    onEdit: boolean;\n    onMaterialClicked: Function;\n    firstChain: any;\n    secondChain: any;\n    isMaterialPage: boolean;\n    // isMaterialPage:boolean;\n}\n\ninterface State {\n    x: number;\n    y: number;\n    mouseText: string;\n    mouseDirection: string;\n    oldX: number;\n    isCardSelected: boolean;\n    selectedCard: number;\n    step: number\n    currentType: any;\n    currentIndex: number;\n    finishMobileButton: boolean;\n    resetMorse: boolean;\n    isMaterialPage: boolean;\n    buybtn: boolean;\n    hover: boolean;\n}\n\nexport class FirstColumnGrid extends React.Component<Props & RouteComponentProps, State> {\n    unlisten: any;\n\n    constructor(props: Props & RouteComponentProps) {\n        super(props);\n        this.state = {\n            step: 1,\n            isCardSelected: false,\n            selectedCard: -1,\n            x: 0, y: 0, mouseText: '',\n            mouseDirection: 'left',\n            oldX: 0,\n            currentType: null,\n            currentIndex: -1,\n            finishMobileButton: false,\n            resetMorse: false,\n            isMaterialPage: false, buybtn: false,\n            hover: false\n        };\n    }\n\n    handleMouseMove = (e: any) => {\n        this.setState({\n            x: e.clientX,\n            y: e.clientY\n        });\n        this.getMouseDirection(e);\n    };\n\n    componentDidMount(): void {\n        if (this.props.selectedBottom !== null) {\n            const slide = this.props.slides[0];\n            const index = slide.cards.findIndex((c: Card) => c.type === this.props.selectedBottom);\n            if (slide.cards[index]) {\n                this.handleSelect(slide.cards[index], index, true).then();\n            }\n        }\n\n\n        this.unlisten = this.props.history.listen((e, b) => {\n            if (b === 'POP') {\n                this.backLogic();\n            }\n        });\n    }\n\n    componentWillUnmount(): void {\n        this.unlisten();\n    }\n\n    componentDidUpdate(prevProps: Props) {\n\n        if (prevProps.onEdit !== this.props.onEdit) {\n            this.handleBack();\n        }\n\n\n        if (this.props.selectedBottom !== null && prevProps.selectedBottom !== this.props.selectedBottom) {\n            const slide = this.props.slides[this.props.selectedBottom === TYPE.NECKLACE ? 0 : 1];\n            const index = slide.cards.findIndex((c: Card) => c.type === this.props.selectedBottom);\n            if (slide.cards[index]) {\n                this.handleSelect(slide.cards[index], index, true).then();\n            }\n            this.setState({resetMorse: true});\n            this.setState({resetMorse: false});\n        }\n\n\n        if (prevProps.isMaterialPage !== this.props.isMaterialPage && isMobile) {\n\n            if (this.props.isMaterialPage) {\n                this.handleFinish();\n                this.setState({buybtn: true, isMaterialPage: false});\n            }\n\n        }\n\n        if (prevProps.selectMobileButton !== this.props.selectMobileButton && isMobile) {\n            this.setState({finishMobileButton: this.props.finishMobile});\n            if (this.state.currentType === TYPE.NECKLACE && !this.props.finishMobile) {\n                this.setState({isCardSelected: true, selectedCard: this.state.currentIndex});\n                this.props.history.push('/');\n            }\n        }\n    }\n\n\n    backLogic = () => {\n        if (this.state.isCardSelected) {\n            this.setState({isCardSelected: false, step: 1, selectedCard: -1, isMaterialPage: false, buybtn: false});\n            this.props.history.replace('/');\n        } else {\n            this.props.onBack();\n        }\n    };\n\n\n    handleSelect = async (c: Card, index: number, forceOpen = false) => {\n        await this.setState({currentType: c.type, currentIndex: index});\n        if (!isMobile) {\n            if (c.type === TYPE.NECKLACE || forceOpen) {\n                console.log('2222', {...this.state});\n                await this.setState({isCardSelected: true, selectedCard: index});\n            }\n            this.props.history.push('/');\n        }\n        this.props.onClick(typeToString(c.type));\n    };\n\n    getNe = (index: number) => {\n        if (this.state.isCardSelected)\n            return this.state.selectedCard === index ? 'full-width' : 'no-width';\n        return '';\n    };\n\n    handleNext = () => {\n        this.setState(prevState => ({...prevState, step: prevState.step + 1}));\n\n        if (!this.state.isMaterialPage)\n            this.setState({isMaterialPage: true});\n\n        // console.log(\"here\")\n    };\n\n    handleFinish = () => {\n        this.setState(prevState => ({...prevState, step: prevState.step + 1}));\n    };\n\n    handleBack = () => {\n        this.backLogic();\n    };\n\n\n    handleMaterial = (material: string) => {\n        this.props.onMaterialClicked(material);\n        if (!isMobile) {\n            this.handleFinish();\n            this.setState({buybtn: true, isMaterialPage: false});\n        }\n    };\n\n\n    render() {\n\n        // console.log(this.props.firstChain)\n        const slide = this.props.slides[this.props.slideIndex];\n        return (\n            <div className=\"grid-container first-card-background\" onMouseMove={this.handleMouseMove}>\n                {!this.state.isCardSelected && !this.state.isMaterialPage && !this.state.buybtn && !this.state.hover &&\n                <div className=\"question\"\n                     onClick={() => this.handleSelect(this.state.currentType ? this.state.currentType : TYPE.EARRING, 0)}\n                >{this.props.slides[this.props.slideIndex].title}</div>}\n\n                {this.props.slides[this.props.slideIndex].cards.map((c: Card, index: number) => {\n                    return (\n                        <div key={index} className={`mini-item ${this.getNe(index)}`} style={{\n                            height: (!isSamsungBrowser && isMobile) ? '79vh' : '100vh',\n                            animation: `${!isSamsungBrowser && isMobile ? 'mymove-chrome' : 'mymove'} ${2 - index + 2}s`,\n                        }}>\n                            <CardComponent\n                                mouseText={typeToString(c.type)}\n                                selectedCard={true}\n                                isCardSelected={this.state.isCardSelected}\n                                backgroundImage={this.state.isCardSelected ? c.simImage : c.image}\n                                onMouseMove={(mouseText: string) => {\n                                    this.setState({mouseText: mouseText});\n                                    this.setState({currentType: c.type, currentIndex: index});\n                                }}\n                                cardType={c.type}\n                                onMouseEnter={() => {\n                                    if (!isMobile) this.setState({hover: true});\n                                }}\n                                onMouseLeave={() => {\n                                    if (!isMobile) this.setState({hover: false});\n                                }}\n                                isBuyPage={this.state.step + 1 === c.stepsNumber}\n                                isAfterBuyPage={this.props.isAfterBuyPage}\n                                onClick={() => this.handleSelect(c, index)}\n                                isMaterialPage={this.state.isMaterialPage || this.state.buybtn}\n                                buyPage={this.state.buybtn && !this.props.isAfterBuyPage}\n                            />\n                        </div>\n                    );\n                })}\n\n                {this.state.buybtn && !this.props.isAfterBuyPage && <div className='morse-btns'>\n                    <div className=\"buy-morse\" onClick={this.props.buyAction.bind(this)}>\n                        BUY <img src={arrow_black} className=\"arrow\" alt=\"\"/></div>\n                </div>}\n\n                {this.state.isMaterialPage &&\n                <MaterialComponent\n                    slider={this.props.slides[this.props.slideIndex]}\n                    onClick={this.handleMaterial}\n                />}\n                {/*<div>{`1111-${String(this.state.isCardSelected)}-${String(this.state.isMaterialPage)}-${String(this.state.buybtn)}`}</div>*/}\n                {this.state.isCardSelected && ((!this.state.isMaterialPage) || this.state.buybtn) &&\n                <MorsePage selectEventMobile={this.props.selectMobileButton}\n                           resetMorse={this.state.resetMorse}\n                           buyAction={this.props.buyAction.bind(this)}\n                           finishMobileButton={this.state.finishMobileButton}\n                           handleBack={this.handleBack} handleNext={this.handleNext}\n                           step={this.state.step}\n                           card={slide.cards[this.state.selectedCard]}\n                           isAfterBuyPage={this.props.isAfterBuyPage}\n                           onMorseType={this.props.onMorseType.bind(this)}\n                           isBuyPage={this.state.buybtn}\n                           firstChain={this.props.firstChain}\n                           secondChain={this.props.secondChain}\n                />}\n\n\n                {!this.state.isCardSelected &&\n                <div className=\"mouse-movement\"\n                     style={{\n                         top: this.state.y - 6,\n                         left: this.state.mouseDirection === \"right\" ? this.state.x + 25 : this.state.mouseText.length < 13 ? this.state.x - 235 : this.state.x - 195\n                     }}>\n                    SELECT {this.state.mouseText}\n                </div>}\n\n            </div>\n        );\n    }\n\n\n    getMouseDirection(e: any) {\n        //deal with the horizontal case\n        // console.log('1111' , e.pageX,e.target.getBoundingClientRect().left,e.target.clientWidth,e);\n        if (this.state.oldX < e.pageX) {\n            this.setState({mouseDirection: \"left\"});\n        } else if (this.state.oldX > e.pageX) {\n            this.setState({mouseDirection: \"left\"});\n        }\n        this.setState({oldX: e.pageX});\n    }\n\n\n}\n\n","import './ColumnGrid.scss';\nimport React from 'react';\nimport {CardComponent} from '../Card/CardComponent';\nimport {Card, typeToString, TYPE} from '../../../models/Interfaces';\nimport MorsePage from '../../screens/MorsePage/MorsePage';\nimport {RouteComponentProps} from \"react-router\";\nimport {isMobile, isSamsungBrowser} from '../../../assets/Constants';\nimport {MaterialComponent} from '../Material/MaterialComponent';\nimport arrow_black from '../../../assets/images/arrow-black.svg';\n\ninterface Props {\n    slides: any;\n    onClick: Function;\n    slideIndex: number;\n    onMorseType: (chainPriceAndWord: any) => void;\n    onBack: Function;\n    selectMobileButton: boolean;\n    finishMobile: boolean;\n    buyAction: Function;\n    isAfterBuyPage: boolean;\n    selectedBottom: any;\n    onEdit: boolean;\n    onMaterialClicked: Function;\n    firstChain: any;\n    secondChain: any;\n    isMaterialPage: boolean;\n\n}\n\ninterface State {\n    x: number;\n    y: number;\n    mouseText: string;\n    mouseDirection: string;\n    oldX: number;\n    isCardSelected: boolean;\n    selectedCard: number;\n    step: number;\n    currentType: any;\n    currentIndex: number;\n    finishMobileButton: boolean;\n    resetMorse: boolean;\n    isMaterialPage: boolean;\n    buybtn: boolean;\n    hover: boolean;\n\n}\n\nexport class SecondColumnGrid extends React.Component<Props & RouteComponentProps, State> {\n\n    unlisten: any;\n\n    constructor(props: Props & RouteComponentProps) {\n        super(props);\n        this.state = {\n            step: 1,\n            isCardSelected: false,\n            selectedCard: -1,\n            x: 0, y: 0, mouseText: '',\n            mouseDirection: 'left',\n            oldX: 0,\n            currentType: TYPE.SINGLE_EARRING,\n            currentIndex: -1,\n            finishMobileButton: false,\n            resetMorse: false,\n            isMaterialPage: false, buybtn: false,\n            hover: false\n        };\n    }\n\n    handleMouseMove = (e: any) => {\n        this.setState({\n            x: e.clientX,\n            y: e.clientY\n        });\n        this.getMouseDirection(e);\n    };\n\n    componentDidMount(): void {\n        if (this.props.selectedBottom !== null) {\n            const slide = this.props.slides[1];\n            const index = slide.cards.findIndex((c: Card) => c.type === this.props.selectedBottom);\n            if (slide.cards[index])\n                this.handleSelect(slide.cards[index], index).then();\n        }\n\n        this.unlisten = this.props.history.listen((e, b) => {\n            if (b === 'POP') {\n                this.backLogic();\n            }\n        });\n    }\n\n    componentWillUnmount(): void {\n        this.unlisten();\n    }\n\n\n    backLogic = () => {\n        if (!this.state.isCardSelected) {\n            this.props.onBack();\n            this.props.history.replace('/');\n        } else {\n            this.props.history.replace('/');\n        }\n        this.setState({isCardSelected: false, selectedCard: -1, isMaterialPage: false, buybtn: false});\n    };\n\n\n    componentDidUpdate(prevProps: Props) {\n        if (prevProps.onEdit !== this.props.onEdit) {\n            this.handleBack();\n        }\n        if (this.props.selectedBottom !== null && prevProps.selectedBottom !== this.props.selectedBottom) {\n            const slide = this.props.slides[this.props.selectedBottom === TYPE.NECKLACE ? 0 : 1];\n            const index = slide.cards.findIndex((c: Card) => c.type === this.props.selectedBottom);\n            if (slide.cards[index])\n                this.handleSelect(slide.cards[index], index).then();\n            this.setState({resetMorse: true});\n            this.setState({resetMorse: false});\n        }\n\n        if (prevProps.isMaterialPage !== this.props.isMaterialPage && isMobile) {\n\n            if (this.props.isMaterialPage) {\n                this.setState({buybtn: true, isMaterialPage: false});\n            }\n\n        }\n\n        if (prevProps.selectMobileButton !== this.props.selectMobileButton && isMobile) {\n            this.setState({finishMobileButton: this.props.finishMobile});\n            if (this.props.slideIndex === 1 && this.state.currentIndex > -1 && !this.props.finishMobile) {\n                this.setState({isCardSelected: true, step: 1, selectedCard: this.state.currentIndex});\n            }\n        }\n    }\n\n    handleSelect = async (c: Card, index: number) => {\n        await this.setState({currentIndex: index, currentType: c.type});\n        this.props.onClick(typeToString(c.type));\n        if (!isMobile) {\n            if (this.props.slideIndex === 1) {\n                this.setState({isCardSelected: true, step: 1, selectedCard: index});\n            }\n        }\n    };\n\n    getNe = (index: number) => {\n        if (this.state.isCardSelected)\n            return this.state.selectedCard === index ? 'full-width' : 'no-width';\n        return '';\n    };\n\n    handleNext = () => {\n\n\n        if (this.state.step < 3)\n            this.setState(prevState => ({...prevState, step: prevState.step + 1}));\n        // if(!this.state.isMaterialPage)\n        // console.log(\"this.state.currentType\",typeToString(this.state.currentType))\n        // console.log(\"this.state.step\",this.state.step)\n\n        if ((this.state.currentType !== TYPE.DISTINCT_PAIR) || (this.state.currentType === TYPE.DISTINCT_PAIR\n            && this.state.step === 2)) {\n            this.setState({isMaterialPage: true});\n        }\n\n\n    };\n\n    handleBack = () => {\n        this.backLogic();\n    };\n\n    handleMaterial = (material: string) => {\n        this.props.onMaterialClicked(material);\n        if (!isMobile) {\n            this.setState({buybtn: true, isMaterialPage: false});\n        }\n    };\n\n    render() {\n        const slide = this.props.slides[this.props.slideIndex];\n        return (\n            <div style={{backgroundColor: '#4c4c4c'}}\n                 className={`grid-container second-card-background second-grid ${this.state.isCardSelected ? 'second-grid-selected' : ''}`}\n                 onMouseMove={this.handleMouseMove}>\n                {!this.state.isCardSelected && !this.state.isMaterialPage && !this.state.buybtn && !this.state.hover &&\n                <div className=\"question\"\n                     onClick={() => this.handleSelect(this.state.currentType ? this.state.currentType : TYPE.EARRING, 0)}>\n                    {this.props.slides[this.props.slideIndex].title}</div>}\n                {this.props.slides[this.props.slideIndex].cards.map((c: Card, index: number) => {\n                    return (\n                        <div key={index} className={`mini-item ${this.getNe(index)}`} style={{\n                            height: (!isSamsungBrowser) && isMobile ? '26.3vh' : isMobile ? '30.65vh' : '100vh',\n                            animation: `${!isSamsungBrowser && isMobile ? 'mymovesecond-chrome' : 'mymovesecond'} ${index + 0.5}s`\n                        }}>\n                            <CardComponent\n                                mouseText={typeToString(c.type)}\n                                selectedCard={true}\n                                isCardSelected={this.state.isCardSelected}\n                                backgroundImage={this.state.isCardSelected ? c.simImage : c.image}\n                                onMouseMove={(mouseText: string) => {\n                                    this.setState({mouseText: mouseText});\n                                }}\n                                onMouseEnter={() => {\n                                    if (!isMobile) this.setState({hover: true});\n                                }}\n                                onMouseLeave={() => {\n                                    if (!isMobile) this.setState({hover: false});\n                                }}\n                                isBuyPage={this.state.step > c.stepsNumber}\n                                isAfterBuyPage={this.props.isAfterBuyPage}\n                                onClick={() => this.handleSelect(c, index)}\n                                isMaterialPage={this.state.isMaterialPage || this.state.buybtn}\n                                cardType={c.type}\n                                buyPage={this.state.buybtn}\n                            />\n                        </div>\n                    );\n                })}\n\n                {this.state.isMaterialPage &&\n                <MaterialComponent slider={this.props.slides[this.props.slideIndex]} onClick={this.handleMaterial}\n                />}\n\n                {this.state.buybtn && !this.props.isAfterBuyPage && <div className='morse-btns'>\n                    <div className=\"buy-morse\" onClick={this.props.buyAction.bind(this)}>\n                        BUY <img src={arrow_black} className=\"arrow\" alt=\"\"/>\n                    </div>\n                </div>}\n\n\n                {this.state.isCardSelected && (!this.state.isMaterialPage || this.state.buybtn) &&\n                <MorsePage selectEventMobile={this.props.selectMobileButton}\n                           buyAction={this.props.buyAction.bind(this)}\n                           finishMobileButton={this.state.finishMobileButton}\n                           handleBack={this.handleBack}\n                           handleNext={this.handleNext}\n                           step={this.state.step}\n                           card={slide.cards[this.state.selectedCard]}\n                           isAfterBuyPage={this.props.isAfterBuyPage}\n                           resetMorse={this.state.resetMorse}\n                           onMorseType={this.props.onMorseType.bind(this)}\n                           isBuyPage={this.state.buybtn}\n                           firstChain={this.props.firstChain}\n                           secondChain={this.props.secondChain}\n                />}\n                {!this.state.isCardSelected &&\n                <div className=\"mouse-movement\"\n                     style={{\n                         top: this.state.y - 6,\n                         left: this.state.mouseDirection === \"right\" ? this.state.x + 20 : this.state.mouseText.length < 13 ? this.state.x - 115 : this.state.x - 215\n                     }}>\n                    {this.state.mouseText}\n                </div>}\n            </div>\n        );\n    }\n\n    getMouseDirection(e: any) {\n        if (this.state.oldX < e.pageX) {\n            this.setState({mouseDirection: \"left\"});\n        } else {\n            this.setState({mouseDirection: \"left\"});\n        }\n        this.setState({oldX: e.pageX});\n    }\n}\n","import Client, { Cart } from 'shopify-buy';\n\nconst client = Client.buildClient({\n    domain: 'ame-dev.myshopify.com',\n    storefrontAccessToken: '275b72ed93cbb3624b17f3f290330364'\n});\n\n// 1. Get products and create lineItems from them \n// https://shopify.github.io/js-buy-sdk/\n// Returns all products\nexport const fetchProducts = (): Promise<Client.Product[]> => {\n    return client.product.fetchAll();\n}\n\n// 2. Create checkout\nexport const createCheckout=(): Promise<Cart> => {\n    return client.checkout.create();\n}\n\nexport const fetchCheckout=(checkoutId: string) => {\n    return client.checkout.fetch(checkoutId);\n}\n\n\nexport const updateLineItems=(checkoutId: string) => {\n\n}\n\n// 3. Add line items to checkout\nexport const addLineItems=(checkoutId: string, lineItems: any): Promise<Client.Cart> => {\n    // const lineItemsToAdd = [{\n    //     variantId: '',\n    //     quantity: 1,\n    //     customAttributes: [{key: \"MyKey\", value: \"MyValue\"}]\n    // }];\n\n    return client.checkout.addLineItems(checkoutId, lineItems);\n}\n\n// 4. Redirect to checkout url after items were added\n\nexport const fetchProductByHandle=(handle: string) => {\n    return client.product.fetchByHandle(handle);\n    // .then((product) => {\n    //     // Do something with the product\n    //     console.log(product);\n    // });\n}\n","import React from \"react\";\n\nimport './HomePage.scss';\nimport {IReducers} from \"../../../redux/store\";\nimport {connect} from \"react-redux\";\nimport {BottomBar} from \"../../SharedComponents/BottomBar/BottomBar\";\nimport {Types, typeToString, TYPE} from \"../../../models/Interfaces\";\nimport {\n    userChoiceCategoryAction,\n    userChoiceStyleAction,\n    userChoiceMaterialAction\n} from \"../../../redux/actions/MainAction\";\nimport {RouteComponentProps} from \"react-router\";\nimport {FirstColumnGrid} from \"../../SharedComponents/GridComponent/FirstColumnGrid\";\nimport {SecondColumnGrid} from \"../../SharedComponents/GridComponent/SecondColumnGrid\";\nimport {isMobile, isSamsungBrowser, createPopupWin} from \"../../../assets/Constants\";\nimport arrow from '../../../assets/images/arrow-white.svg';\nimport * as shop from '../../../Services/shopify';\n\ninterface Props {\n    slides: any[],\n    categoryChoice: (category: string) => void,\n    styleChoice: (style: string) => void,\n    materialChoice: (material: string) => void,\n    userChoice: any\n}\n\ninterface State {\n    slideIndex: number;\n    userChoice: any;\n    chainPriceAndDetails: any | null;\n    cardClicked: boolean;\n    selectClicked: boolean;\n    currentType: string;\n    buttonText: string;\n    hideBottomBar: boolean;\n    showProductDetails: boolean;\n    isAfterBuyPage: boolean;\n    selectedBottom: any;\n    onEdit: boolean;\n    clickedMaterial: boolean;\n    currentMaterial: string;\n    isMaterial: boolean;\n}\n\nexport class HomePage extends React.Component<Props & RouteComponentProps, State> {\n\n    unlisten: any;\n\n    constructor(props: Props & RouteComponentProps) {\n        super(props);\n        this.state = {\n            slideIndex: 0,\n            userChoice: undefined,\n            chainPriceAndDetails: null,\n            cardClicked: false,\n            currentType: '',\n            selectClicked: false,\n            buttonText: 'SELECT',\n            hideBottomBar: false,\n            showProductDetails: false,\n            isAfterBuyPage: false,\n            selectedBottom: null,\n            onEdit: false,\n            clickedMaterial: false,\n            currentMaterial: '',\n            isMaterial: false\n        };\n\n    }\n\n\n    resetChain() {\n        this.setState({chainPriceAndDetails: null});\n    }\n\n    componentDidMount() {\n        this.setState({userChoice: this.props.userChoice});\n        this.unlisten = this.props.history.listen((e, b) => {\n            if (b === 'POP') {\n                this.resetChain();\n            }\n        });\n    }\n\n    componentWillUnmount(): void {\n        this.unlisten();\n    }\n\n    handleEditBtn = () => {\n        this.setState(prevState => ({\n            ...prevState,\n            showProductDetails: false,\n            hideBottomBar: false,\n            onEdit: !prevState.onEdit\n        }));\n    };\n\n    onBack = () => {\n        this.setState(prevState => ({...prevState, slideIndex: prevState.slideIndex - 1}));\n        this.resetChain();\n    };\n\n    onClick(type: string) {\n        this.setState({cardClicked: true, currentType: type});\n        if (!isMobile || (this.state.selectClicked)) {\n            if (this.props.slides[this.state.slideIndex].screenType === Types.CATEGORY) {\n                this.props.categoryChoice(type);\n            }\n            if (this.props.slides[this.state.slideIndex].screenType === Types.MATERTIAL) {\n                this.props.materialChoice(type);\n            }\n            if (this.props.slides[this.state.slideIndex].screenType === Types.STYLE) {\n                this.props.styleChoice(type);\n            }\n            if (this.state.slideIndex < 1 && type !== typeToString(TYPE.NECKLACE)) {\n                this.setState({slideIndex: (this.state.slideIndex + 1)});\n            }\n        }\n    }\n\n    handleBottomBarClicked = (value: any) => {\n        switch (value.keyinput) {\n            case \"style\":\n                if (value.value.key === TYPE.NECKLACE) {\n                    this.props.categoryChoice(typeToString(value.value.key));\n                    this.props.styleChoice(\"\");\n                    this.setState({slideIndex: 0});\n                } else {\n                    this.props.categoryChoice(typeToString(TYPE.EARRING));\n                    this.props.styleChoice(typeToString(value.value.key));\n                }\n                this.resetChain();\n                this.setState({selectedBottom: value.value.key});\n                break;\n            case \"material\":\n                this.props.materialChoice(typeToString(value.value.key));\n                break;\n        }\n    };\n\n    isTyping = () => {\n\n        if (this.state.chainPriceAndDetails) {\n            if (this.state.currentType === typeToString(TYPE.IDENTICAL_PAIR) || this.state.currentType === typeToString(TYPE.DISTINCT_PAIR)) {\n                if (this.state.chainPriceAndDetails.firstChain.chain.length > 0) {\n\n                    if (this.state.chainPriceAndDetails.secondChain.chain.length > 0) {\n                        if (this.state.buttonText !== 'DONE')\n                            this.setState({buttonText: 'DONE'});\n                        return true;\n                    }\n                    if (this.state.buttonText !== 'NEXT')\n                        this.setState({buttonText: 'NEXT'});\n                    return true;\n                }\n            } else {\n\n                if (this.state.chainPriceAndDetails.firstChain.chain.length > 0) {\n                    if (this.state.buttonText !== 'DONE')\n                        this.setState({buttonText: 'DONE'});\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    buyAction = async () => {\n        this.setState({isAfterBuyPage: true, buttonText: 'CONTINUE SHOPPING'});\n        let dotHandle, dashHandle;\n        switch (this.props.userChoice.material) {\n            case 'WHITE GOLD':\n                dotHandle = 'white-gold-morse-diamond-dot';\n                dashHandle = 'white-gold-morse-diamond-dash';\n                break;\n            default:\n                dotHandle = 'diamond-dot';\n                dashHandle = 'morse-diamond-dash';\n                break;\n        }\n\n        Promise.all([// shop.fetchProducts(),\n            shop.createCheckout(),\n            shop.fetchProductByHandle('morse-custom-jewelry'),\n            shop.fetchProductByHandle(dotHandle),\n            shop.fetchProductByHandle(dashHandle)\n        ])\n            .then(data => {\n                const checkout: any = data[0];\n                const morseCustomJewelry = data[1];\n                const yellowDot = data[2];\n                const yellowDash = data[3];\n                const variantId = morseCustomJewelry.variants[0].id;\n                const yellowDotVariantId = yellowDot.variants[0].id;\n                const yellowDashVariantId = yellowDash.variants[0].id;\n\n                // Dummy item with all descriptions\n                const morsecjLineItem: any = {\n                    variantId,\n                    quantity: 1,\n                    customAttributes: []\n                };\n\n                // If user forgot to select material it will be yellow gold\n                let material = '';\n                if (this.props.userChoice.material) {\n                    material = this.props.userChoice.material;\n                } else {\n                    material = 'WHITE GOLD';\n                }\n\n                // Lets count dots and dashes\n                let dotsQty = 0, dashesQty = 0;\n                dotsQty = +this.state.chainPriceAndDetails.firstChain.chainPriceAndWord.dotSum;\n                dashesQty = +this.state.chainPriceAndDetails.firstChain.chainPriceAndWord.dashSum;\n\n                // Add description for necklace\n                if (this.props.userChoice.category === 'NECKLACE') {\n                    morsecjLineItem.customAttributes.push(\n                        {\n                            key: 'Necklace',\n                            value: `${material}. “${this.state.chainPriceAndDetails.firstChain.chain.toUpperCase()}”`\n                        });\n                }\n\n                // Description for earring\n                if (this.props.userChoice.category === 'EARRING') {\n                    morsecjLineItem.customAttributes.push(\n                        {\n                            key: 'Earring 1',\n                            value: `${material}. “${this.state.chainPriceAndDetails.firstChain.chain.toUpperCase()}”`\n                        });\n\n                    // If there are 2 earrings\n                    if (this.props.userChoice.style === 'IDENTICAL PAIR' || this.props.userChoice.style === 'DISTINCT PAIR') {\n                        morsecjLineItem.customAttributes.push(\n                            {\n                                key: 'Earring 2',\n                                value: `${material}. “${this.state.chainPriceAndDetails.secondChain.chain.toUpperCase()}”`\n                            });\n\n                        // Add some dots\n                        dotsQty += +this.state.chainPriceAndDetails.secondChain.chainPriceAndWord.dotSum;\n                        dashesQty += +this.state.chainPriceAndDetails.secondChain.chainPriceAndWord.dashSum;\n                    }\n                }\n\n                // Sum it up\n                const lineItems = [morsecjLineItem, {\n                    variantId: yellowDotVariantId,\n                    quantity: dotsQty,\n                }, {\n                    variantId: yellowDashVariantId,\n                    quantity: dashesQty,\n                }];\n                shop.addLineItems(checkout.id.toString(), lineItems)\n                    .then(cart => {\n                        createPopupWin(checkout.webUrl, \"shopify\", window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / 4, window.innerWidth / 4);\n                    });\n            });\n\n        return true;\n\n    };\n\n    donePhase = () => {\n        this.setState({hideBottomBar: true, showProductDetails: true});\n    };\n\n    onMaterialClicked = (material: string) => {\n\n        if (!isMobile) {\n            this.props.materialChoice(material);\n            this.setState({clickedMaterial: true});\n        }\n        this.setState({cardClicked: true});\n        this.setState({currentMaterial: material});\n    };\n\n\n    render() {\n        return (\n\n\n            <div className=\"container\" style={{height: (!isSamsungBrowser) && isMobile ? '87vh' : '100vh'}}>\n\n                <div className=\"version\">v0.2.0</div>\n                <div className=\"logo\"></div>\n                <MobileLoading/>\n                {this.state.slideIndex === 0 ?\n                    <FirstColumnGrid buyAction={this.buyAction.bind(this)} {...this.props} onBack={this.onBack}\n                                     slideIndex={this.state.slideIndex} slides={this.props.slides}\n                                     onMorseType={(chainPriceAndDetails: any) => {\n                                         //  console.log(\"ABC\",chainPriceAndDetails)\n                                         this.setState({chainPriceAndDetails: chainPriceAndDetails});\n                                     }}\n                                     onEdit={this.state.onEdit}\n                                     isAfterBuyPage={this.state.isAfterBuyPage}\n                                     selectMobileButton={this.state.selectClicked}\n                                     onClick={(type: string) => {\n                                         this.onClick(type);\n                                     }}\n                                     selectedBottom={this.state.selectedBottom}\n                                     finishMobile={this.state.buttonText === 'NEXT' || this.state.buttonText === 'DONE'}\n                                     onMaterialClicked={this.onMaterialClicked}\n                                     firstChain={this.state.chainPriceAndDetails ? this.state.chainPriceAndDetails.firstChain : {chain: \"\"}}\n                                     secondChain={this.state.chainPriceAndDetails ? this.state.chainPriceAndDetails.secondChain : {chain: \"\"}}\n                                     isMaterialPage={this.state.isMaterial}\n                    /> :\n                    <SecondColumnGrid buyAction={this.buyAction.bind(this)} {...this.props} onBack={this.onBack}\n                                      slideIndex={this.state.slideIndex} slides={this.props.slides}\n                                      onMorseType={(chainPriceAndDetails: any) => {\n                                          this.setState({chainPriceAndDetails: chainPriceAndDetails});\n                                      }}\n                                      onEdit={this.state.onEdit}\n                                      selectedBottom={this.state.selectedBottom}\n                                      isAfterBuyPage={this.state.isAfterBuyPage}\n                                      selectMobileButton={this.state.selectClicked}\n                                      onClick={(type: string) => {\n                                          this.onClick(type);\n                                      }}\n                                      finishMobile={this.state.buttonText === 'NEXT' || this.state.buttonText === 'DONE'}\n                                      onMaterialClicked={this.onMaterialClicked}\n                                      firstChain={this.state.chainPriceAndDetails ? this.state.chainPriceAndDetails.firstChain : {chain: \"\"}}\n                                      secondChain={this.state.chainPriceAndDetails ? this.state.chainPriceAndDetails.secondChain : {chain: \"\"}}\n                                      isMaterialPage={this.state.isMaterial}\n\n                    />\n                } {(!this.state.hideBottomBar || !isMobile || this.state.isAfterBuyPage || !this.state.isMaterial) &&\n            <BottomBar\n\n                className=\"bottom-bar\"\n                userChoice={this.props.userChoice}\n                selectedType={(value: any) => {\n                    this.handleBottomBarClicked(value);\n                }}\n                secret={this.state.chainPriceAndDetails}\n                getSelected={async (selected: boolean, add: any = null) => {\n                    if (add) {\n                        console.log('4444', this.isTyping(), this.state.currentType);\n                        this.setState({isAfterBuyPage: false});\n                        return;\n                    }\n                    await this.setState({selectClicked: selected});\n                    if (this.state.buttonText === 'CONTINUE SHOPPING') {\n                        window.location.reload();\n                        return;\n                    }\n\n                    if (!this.isTyping()) {\n                        await this.onClick(this.state.currentType);\n                        this.setState({selectClicked: false, cardClicked: false});\n                    } else {\n                        await this.setState({selectClicked: false});\n                        if (this.state.currentMaterial !== '') {\n                            this.props.materialChoice(this.state.currentMaterial);\n                            await this.setState({clickedMaterial: true, isMaterial: true});\n                            return;\n                        }\n                        if (this.state.buttonText === 'DONE') {\n                            this.donePhase();\n                        }\n                    }\n                }}\n\n                buttonTextMobile={this.state.buttonText}\n                cardClicked={this.state.cardClicked || this.isTyping()}/>}\n\n\n                {(this.state.showProductDetails && isMobile) && !this.state.isAfterBuyPage && this.state.clickedMaterial &&\n\n                <ProductDetails category={this.props.userChoice.category}\n                                style={this.props.userChoice.style}\n                                material={this.props.userChoice.material}\n                                chainPriceAndDetails={this.state.chainPriceAndDetails}\n                                handleEditBtn={this.handleEditBtn}\n                                buyAction={this.buyAction}/>}\n            </div>\n        );\n    }\n}\n\nconst MobileLoading = React.memo((props) => {\n    return (\n        <div className=\"mobile-loading\">\n            {isMobile && <div className='off-line'>\n                <div className=\"line hidden\"/>\n                <div className=\"line hide-line-mobile\"/>\n                <div className=\"line hide-line-mobile\"/>\n                <div className=\"line\"/>\n                <div className=\"line hide-line-mobile\"/>\n                <div className=\"line hide-line-mobile\"/>\n                <div className=\"line hidden\"/>\n            </div>}\n        </div>\n    );\n});\n\n\nconst ProductDetails = React.memo((props: any) => {\n    return (\n        <div className=\"product-details\">\n            <div className=\"product-item\">{props.category === 'NECKLACE' ? props.category : props.style}</div>\n            <div className=\"product-item\">{props.material !== '' ? props.material : 'MATERIAL'}</div>\n            <div className=\"product-item\">\n                {props.chainPriceAndDetails.firstChain.chain.toUpperCase()}\n                - {(props.chainPriceAndDetails.firstChain.chainPriceAndWord.length * .1).toFixed(2)}cm\n                {props.chainPriceAndDetails.secondChain.chain !== '' ? (' ' + props.chainPriceAndDetails.secondChain.chain.toUpperCase() +\n                    ' - ' + (props.chainPriceAndDetails.secondChain.chainPriceAndWord.length * .1).toFixed(2) + 'cm') : ''}\n            </div>\n            <div className=\"product-item\">DASH: $980 X{\n                props.chainPriceAndDetails.firstChain.chainPriceAndWord.dashSum +\n                props.chainPriceAndDetails.secondChain.chainPriceAndWord.dashSum} - DOT : $560 X{\n                props.chainPriceAndDetails.firstChain.chainPriceAndWord.dotSum +\n                props.chainPriceAndDetails.secondChain.chainPriceAndWord.dotSum}</div>\n            <div className=\"product-item\">PRICE: ${props.chainPriceAndDetails.firstChain.chainPriceAndWord.totalPrice +\n            props.chainPriceAndDetails.secondChain.chainPriceAndWord.totalPrice}</div>\n            <div className=\"product-item\" style={{textDecoration: \"underline\"}} onClick={props.handleEditBtn}>EDIT</div>\n            <div className=\"buy-morse\" onClick={props.buyAction}> BUY <img src={arrow} className=\"arrow\" alt=\"\"/></div>\n        </div>\n    );\n});\n\n\nconst mapStateToProps = (state: IReducers) => {\n    const {slides, userChoice} = state.mainState;\n    return {\n        slides, userChoice\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\n    return {\n        categoryChoice: (category: string) => dispatch(userChoiceCategoryAction(category)),\n        styleChoice: (style: string) => dispatch(userChoiceStyleAction(style)),\n        materialChoice: (material: string) => dispatch(userChoiceMaterialAction(material)),\n\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch\n} from 'react-router-dom';\nimport {AppRoutes} from \"./ScreensName\";\nimport HomePage from \"./screens/HomePage/HomePage\";\n\n\nexport class Main extends React.Component<{}> {\n\n    // constructor(props:any){\n    //     super(props)\n    //     window.screen.orientation.lock(\"natural\");\n    // }\n\n    getAppRoutes() {\n        return (\n            <Switch>\n                <Route path={AppRoutes.MORSE} component={HomePage}/>\n                <Route path={AppRoutes.ROOT} component={HomePage}/>\n                <Route path={AppRoutes.CATEGORY} component={HomePage}/>\n                <Route path={AppRoutes.STYLE} component={HomePage}/>\n            </Switch>\n        );\n    }\n\n    render() {\n        return (\n            <Router>{this.getAppRoutes()}</Router>\n        );\n    }\n}\n\n","import {Slider, TYPE, Types} from \"../../models/Interfaces\";\nimport {USER_CHOICE_CATEGORY, USER_CHOICE_STYLE, USER_CHOICE_MATERIAL, USER_CHOICE_TYPE} from \"../actions/types\";\n\nimport model_earring from '../../assets/images/model-earring.png';\nimport model_earrings_identical from '../../assets/images/model-earrings-identical.png';\nimport model_earrings_two from '../../assets/images/model-earring-two.png';\nimport model_necklace from '../../assets/images/model-necklace.png';\nimport model_earring_4sim from '../../assets/images/model-earring-4sim.png';\nimport model_earrings_identical_4sim from '../../assets/images/model-earrings-identical-4sim.png';\nimport model_earrings_two_4sim from '../../assets/images/model-earring-two-4sim.png';\nimport model_necklace_4sim from '../../assets/images/model-necklace-4sim.png';\n\nimport earring_yellow from '../../assets/images/img-yellow-gold-earring.png';\nimport earring_white from '../../assets/images/img-white-gold-earring.png';\nimport necklace_yellow from '../../assets/images/img-yellow-gold-necklace.png';\nimport necklace_white from '../../assets/images/img-white-gold-necklace.png';\n\nexport interface MainState {\n    slides: Slider[];\n    userChoice: any;\n    price: number;\n\n}\n\nconst initState: MainState = {\n    slides: [{\n        cards: [\n            {image: model_earring, simImage: model_earring_4sim, type: TYPE.EARRING, stepsNumber: 999,},\n            {\n                image: model_necklace,\n                simImage: model_necklace_4sim,\n                type: TYPE.NECKLACE,\n                stepsNumber: 1,\n                rightNecklaceClass: \"paint-morse-necklace\",\n                leftNecklaceClass: \"\",\n            }\n        ],\n        title: 'WHAT\\'S YOUR CATEGORY?', screenType: Types.CATEGORY,\n        material: {white: necklace_white, yellow: necklace_yellow}\n    },\n        {\n            cards: [\n                {\n                    image: model_earring,\n                    simImage: model_earring_4sim,\n                    type: TYPE.SINGLE_EARRING,\n                    stepsNumber: 1,\n                    rightNecklaceClass: \"single-paint-morse\",\n                    leftNecklaceClass: \"\"\n                },\n                {\n                    image: model_earrings_identical,\n                    simImage: model_earrings_identical_4sim,\n                    type: TYPE.IDENTICAL_PAIR,\n                    stepsNumber: 1,\n                    rightNecklaceClass: \"second-paint-morse-right\",\n                    leftNecklaceClass: \"second-paint-morse-left\",\n                    duplicateMorse: true\n                },\n                {\n                    image: model_earrings_two,\n                    simImage: model_earrings_two_4sim,\n                    type: TYPE.DISTINCT_PAIR,\n                    stepsNumber: 2,\n                    rightNecklaceClass: \"third-paint-morse-right\",\n                    leftNecklaceClass: \"third-paint-morse-left\"\n                }],\n            title: 'WHAT\\'S YOUR STYLE?', screenType: Types.STYLE,\n            material: {white: earring_white, yellow: earring_yellow}\n        }\n        // {cards:[{image:model_necklace,type:TYPE.WHITE_GOLD}\n        //     ,{image:model6,type:TYPE.YELLOW_GOLD}],title:'WHAT\\'S YOUR MATERIAL?',screenType:Types.MATERTIAL}\n    ],\n    userChoice: {\n        category: '',\n        style: '',\n        material: '',\n        chainDetails: {}\n    },\n    price: 0\n};\n\nconst MainReducer = (state: MainState = initState, action: any) => {\n    switch (action.type) {\n        case USER_CHOICE_CATEGORY:\n            return {...state, userChoice: {...state.userChoice, category: action.choice.userChoice}};\n        case USER_CHOICE_STYLE:\n            return {...state, userChoice: {...state.userChoice, style: action.choice.userChoice}};\n        case USER_CHOICE_MATERIAL:\n            return {...state, userChoice: {...state.userChoice, material: action.choice.userChoice}};\n        case USER_CHOICE_TYPE:\n            console.log(\"action.choice.userChoice  \", action.choice.userChoice);\n            return {...state, userChoice: {...state.userChoice, chainDetails: action.choice.userChoice}};\n        default:\n            return state;\n    }\n\n};\nexport default MainReducer;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport MainReducer, {MainState} from './reducers/MainReducer';\n\nconst initialState = {};\n\nexport interface IReducers {\n    mainState: MainState\n}\n\nconst reducers = combineReducers<IReducers>({\n    mainState: MainReducer\n});\n\nconst store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport './App.scss';\nimport {Main} from './components/Main';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nfunction App() {\n\n    return (\n        <Provider store={store}>\n            <Main/>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import 'fontsource-roboto';\n\nimport TagManager from 'react-gtm-module';\n\nconst tagManagerArgs = {\n    gtmId: 'GTM-TRS674H'\n};\n\nTagManager.initialize(tagManagerArgs);\n// import './assets/fonts/NEXTMonoPan-Thin.otf';\n// import './assets/fonts'\n// import './assets/fonts'\n// import './assets/fonts'\n// import './assets/fonts'\n// import './assets/fonts'\n// import './assets/fonts'\n// import './assets/fonts'\n\n\n// globalizeLocalizer()\n// import moment from  'moment';\n// import momentLocalizer from 'react-widgets-moment'\n// momentLocalizer()\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}