{"version":3,"sources":["assets/images/arrow-black-2.svg","assets/oval.svg","assets/rectangle.svg","assets/images/arrow-white.svg","assets/images/drop-down.svg","assets/images/arrow-grey.svg","assets/images/model-earing.png","assets/images/model-necklace.png","assets/red-oval.svg","assets/red-rectangle.svg","assets/images/arrow-black.svg","assets/images/model-9.png","assets/images/img-yellow-gold-earring.png","assets/images/img-white-gold-earring.png","assets/images/img-yellow-gold-necklace.png","assets/images/img-white-gold-necklace.png","components/ScreensName.ts","models/Interfaces.ts","assets/Constants.ts","components/SharedComponents/MorseTextInput/MorseTextInput.tsx","components/SharedComponents/BottomBar/BottomBar.tsx","components/SharedComponents/Card/CardComponent.tsx","components/SharedComponents/MorseMenu/MorseMenu.tsx","components/screens/MorsePage/MorsePage.tsx","redux/actions/MainAction.ts","redux/actions/types.ts","components/SharedComponents/Material/MaterialComponent.tsx","components/SharedComponents/GridComponent/FirstColumnGrid.tsx","components/SharedComponents/GridComponent/SecondColumnGrid.tsx","Services/shopify.ts","components/screens/HomePage/HomePage.tsx","components/Main.tsx","redux/reducers/MainReducer.ts","redux/store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","AppRoutes","TYPE","Types","typeToString","key","WHITE_GOLD","YELLOW_GOLD","EARRING","NECKLACE","DISTINCT_PAIR","IDENTICAL_PAIR","SINGLE_NECKLACE","SINGLE_EARRING","stringToType","stringType","remainingTypes","displayName","GOLD","ALPHA_TO_MORSE","isMobile","document","documentElement","clientWidth","isSamsungBrowser","test","navigator","userAgent","vendor","match","MorseTextInput","props","handleChange","event","a","target","value","toString","setState","text","dashLength","dotLength","chainLength","indexError","morseSum","dotSum","dashSum","charSum","split","map","c","index","morseChar","toUpperCase","state","forEach","char","onChange","slice","length","totalPrice","join","focus","className","this","style","border","borderColor","autoFocus","ref","input","inputRef","textIndent","hidePlaceholder","Morse","toLocaleUpperCase","React","Component","memo","dangerouslySetInnerHTML","__html","cc","red_circle","circle","red_dash","dash","BottomBar","notSelectedArrayHover","isMenuOpen","isMaterialMobileOpen","isCategoryMobileOpen","isSecretMobileOpen","userChoice","category","type","selectedType","keyinput","enableCategory","enableMaterial","material","enablePrice","secret","firstChain","chainPriceAndWord","console","log","onClick","handleClickedItem","toFixed","secondChain","cardClicked","getSelected","buttonTextMobile","src","arrow","dropdown_icon","window","location","reload","CardComponent","getClassName","isAfterBuyPage","isMaterialPage","getSelectedCardClass","isCardSelected","selectedCard","hover","prevProps","bind","onMouseMove","mouseText","cardType","backgroundImage","onMouseEnter","onMouseLeave","buyPage","MorseMenu","onClose","Object","entries","val","xmlns","width","height","viewBox","cx","cy","r","fill","fill-rule","transform","d","MorsePage","handleMouseMove","e","x","clientX","y","clientY","chain","chainDetails","card","duplicateMorse","step","onMorseType","handleBuy","buyAction","isAfterBuy","buttons","enable","enable2","stepsNumber","arrow_black","Fragment","handleNext","arrow_grey","handleBack","getTextMargin","shiftMargin","isBuyPage","morseHover","morseMenuOpen","selectEventMobile","finishMobileButton","resetMorse","backdropFilter","BackToShop","opacity","inputFoucs","MorseChain","rightNecklaceClass","leftNecklaceClass","top","left","DotIcon","isFill","DashIcon","marginTop","marginRight","p","connect","mainState","slides","dispatch","typeChoice","choice","MaterialComponent","mouseDirection","hoverWhite","hoverYellow","animation","slider","white","yellow","FirstColumnGrid","unlisten","getMouseDirection","backLogic","buybtn","history","replace","onBack","handleSelect","forceOpen","currentType","currentIndex","push","getNe","prevState","handleFinish","handleMaterial","onMaterialClicked","oldX","selectedBottom","slide","cards","findIndex","then","listen","b","onEdit","selectMobileButton","finishMobile","slideIndex","title","image","pageX","SecondColumnGrid","backgroundColor","client","Client","buildClient","domain","storefrontAccessToken","addLineItems","checkoutId","lineItems","checkout","fetchProductByHandle","handle","product","fetchByHandle","HomePage","handleEditBtn","showProductDetails","hideBottomBar","resetChain","handleBottomBarClicked","categoryChoice","styleChoice","materialChoice","isTyping","chainPriceAndDetails","buttonText","dotHandle","dashHandle","Promise","all","create","shop","data","morseCustomJewelry","yellowDot","yellowDash","variantId","variants","id","yellowDotVariantId","yellowDashVariantId","morsecjLineItem","quantity","customAttributes","dotsQty","dashesQty","cart","pageURL","pageTitle","popupWinWidth","popupWinHeight","webUrl","innerWidth","innerHeight","open","donePhase","clickedMaterial","currentMaterial","undefined","selectClicked","isMaterial","screenType","CATEGORY","MATERTIAL","STYLE","MobileLoading","selected","ProductDetails","textDecoration","Main","path","MORSE","component","ROOT","getAppRoutes","initState","model7","model8","necklace_white","necklace_yellow","model6","earring_white","earring_yellow","price","MainReducer","action","reducers","combineReducers","store","createStore","applyMiddleware","thunk","App","Boolean","hostname","TagManager","initialize","gtmId","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.99f0c856.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow-black-2.a51dcbe8.svg\";","module.exports = __webpack_public_path__ + \"static/media/oval.f07768aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/rectangle.a40fabd1.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-white.96831bea.svg\";","module.exports = __webpack_public_path__ + \"static/media/drop-down.d9213db9.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-grey.d3f5960e.svg\";","module.exports = __webpack_public_path__ + \"static/media/model-earing.b57c099a.png\";","module.exports = __webpack_public_path__ + \"static/media/model-necklace.1c9cb5d4.png\";","module.exports = __webpack_public_path__ + \"static/media/red-oval.ddaf0401.svg\";","module.exports = __webpack_public_path__ + \"static/media/red-rectangle.97344bb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-black.e0f8b96f.svg\";","module.exports = __webpack_public_path__ + \"static/media/model-9.461f73fd.png\";","module.exports = __webpack_public_path__ + \"static/media/img-yellow-gold-earring.f59eecc7.png\";","module.exports = __webpack_public_path__ + \"static/media/img-white-gold-earring.2018785e.png\";","module.exports = __webpack_public_path__ + \"static/media/img-yellow-gold-necklace.76f7bc70.png\";","module.exports = __webpack_public_path__ + \"static/media/img-white-gold-necklace.60ddea61.png\";","export enum AppRoutes {\n    HOME = '/home',\n    STYLE = '/style',\n    CATEGORY = '/category',\n    MORSE = '/morse',\n    ROOT = ''\n  }","export interface Card {\n    image:string;\n    type:TYPE,\n    stepsNumber :number;\n    rightNecklaceClass?: string;\n    leftNecklaceClass?: string;\n    duplicateMorse?: boolean;\n    // material:any;\n  }\n\n\nexport enum TYPE {\n    NECKLACE,\n    EARRING,\n    WHITE_GOLD,\n    YELLOW_GOLD,\n    SINGLE_EARRING,\n    IDENTICAL_PAIR,\n    DISTINCT_PAIR,\n    SINGLE_NECKLACE,\n    GOLD\n}\n\n\nexport enum Types {\n    STYLE,\n    MATERTIAL,\n    CATEGORY\n}\n\n// export enum Category {\n//     NECKLACE,\n//     EARRING\n// }\n\n// export enum Style {\n//     SINGLE_EARRING,\n//     IDENTICAL_PAIR,\n//     DISTINCT_PAIR,\n//     SINGLE_NECKLACE\n// }\n\nexport interface Slider {\n    cards:Card[],\n    title:string,\n    screenType:Types;\n    material:any;\n\n}\n\n\nexport interface ChainDetails {\n    length:number,\n    dashSum:number,\n    dotSum:number,\n    totalPrice:number\n}\n\nexport const  typeToString:any  = (key:TYPE)=> {\n\n   switch(key){\n       \n       case TYPE.WHITE_GOLD :\n       return \"WHITE GOLD\"\n\n        case TYPE.YELLOW_GOLD :\n        return \"YELLOW GOLD\"\n\n        case TYPE.EARRING :\n       return \"EARRING\"\n\n        case TYPE.NECKLACE :\n       return \"NECKLACE\"\n\n        case TYPE.DISTINCT_PAIR :\n       return \"DISTINCT PAIR\"\n\n        case TYPE.IDENTICAL_PAIR :\n       return \"IDENTICAL PAIR\"\n\n        case TYPE.SINGLE_NECKLACE :\n       return \"SINGLE NECKLACE\";\n\n        case TYPE.SINGLE_EARRING :\n       return \"SINGLE EARRING\";\n    \n       default:\n           return null\n   }\n   \n}\n\nexport const  stringToType:any  = (stringType:string)=> {\n\n    switch(stringType){\n        case \"WHITE GOLD\" :\n        return TYPE.WHITE_GOLD \n \n        case \"YELLOW GOLD\" :\n         return TYPE.YELLOW_GOLD \n \n         case \"EARRING\" :\n         return TYPE.EARRING \n \n        case \"NECKLACE\" :\n         return TYPE.NECKLACE \n \n        case \"DISTINCT PAIR\" :\n         return TYPE.DISTINCT_PAIR \n \n        case \"IDENTICAL PAIR\" :\n         return TYPE.IDENTICAL_PAIR \n \n        case \"SINGLE NECKLACE\" :\n         return TYPE.SINGLE_NECKLACE \n \n        case \"SINGLE EARRING\" :\n         return TYPE.SINGLE_EARRING \n     \n        default:\n            return TYPE.EARRING \n\n    }\n    \n }\n\n\nexport const  remainingTypes:any = (key:TYPE)=> {\n\n    switch(key){\n        case TYPE.WHITE_GOLD :\n        return [{key:TYPE.YELLOW_GOLD,displayName:\"YELLOW GOLD\"}]\n \n         case TYPE.YELLOW_GOLD :\n         return [{key:TYPE.WHITE_GOLD,displayName:\"WHITE GOLD\"}]\n         case TYPE.GOLD :\n         return [{key:TYPE.WHITE_GOLD,displayName:\"WHITE GOLD\"},\n         {key:TYPE.YELLOW_GOLD,displayName:\"YELLOW GOLD\"}]\n \n         case TYPE.EARRING :\n        return [\n            {key:TYPE.NECKLACE,displayName:\"NECKLACE\"},\n            {key:TYPE.DISTINCT_PAIR,displayName:\"EARRINGS - DISTINCT PAIR\"},\n            {key:TYPE.IDENTICAL_PAIR,displayName:\"EARRINGS - IDENTICAL PAIR\"},\n            {key:TYPE.SINGLE_EARRING,displayName:\"EARRINGS - SINGLE EARRING\"},\n        ]\n        case TYPE.NECKLACE :\n        return [\n            {key:TYPE.DISTINCT_PAIR,displayName:\"EARRINGS - DISTINCT PAIR\"},\n            {key:TYPE.IDENTICAL_PAIR,displayName:\"EARRINGS - IDENTICAL PAIR\"},\n            {key:TYPE.SINGLE_EARRING,displayName:\"EARRINGS - SINGLE EARRING\"},\n        ]\n \n         case TYPE.DISTINCT_PAIR :\n        return [\n            {key:TYPE.NECKLACE,displayName:\"NECKLACE\"},\n            {key:TYPE.IDENTICAL_PAIR,displayName:\"EARRINGS - IDENTICAL PAIR\"},\n            {key:TYPE.SINGLE_EARRING,displayName:\"EARRINGS - SINGLE EARRING\"},\n        ]\n \n         case TYPE.IDENTICAL_PAIR :\n        return [\n            {key:TYPE.NECKLACE,displayName:\"NECKLACE\"},\n            {key:TYPE.DISTINCT_PAIR,displayName:\"EARRINGS - DISTINCT PAIR\"},\n            {key:TYPE.SINGLE_EARRING,displayName:\"EARRINGS - SINGLE EARRING\"},\n        ]\n \n        case TYPE.SINGLE_EARRING :\n        return [\n            {key:TYPE.NECKLACE,displayName:\"NECKLACE\"},\n            {key:TYPE.DISTINCT_PAIR,displayName:\"EARRINGS - DISTINCT PAIR\"},\n            {key:TYPE.IDENTICAL_PAIR,displayName:\"EARRINGS - IDENTICAL PAIR\"},\n        ]\n        default:\n            return {}\n    }\n    \n }\n","declare global {\n    interface Window { chrome: any; }\n}\n\n// declare \n\nexport const ALPHA_TO_MORSE:{[key: string]: string;} = {\n     \"A\":\".-\",\n     \"B\":\"-...\",\n     \"C\":\"-.-.\",\n     \"D\":\"-..\",\n     \"E\":\".\",\n     \"F\":\"..-.\",\n     \"G\":\"--.\",\n     \"H\":\"....\",\n     \"I\":\"..\",\n     \"J\":\".---\",\n     \"K\":\"-.-\",\n     \"L\":\".-..\",\n     \"M\":\"--\",\n     \"N\":\"-.\",\n     \"O\":\"---\",\n     \"P\":\".--.\",\n     \"Q\":\"--.-\",\n     \"R\":\".-.\",\n     \"S\":\"...\",\n     \"T\":\"-\",\n     \"U\":\"..-\",\n     \"V\":\"...-\",\n     \"W\":\".--\",\n     \"X\":\"-..-\",\n     \"Y\":\"-.--\",\n     \"Z\":\"--..\",\n     \" \":\" \"\n}\n\nexport const MORSE_TO_ALPHA = {\n    \".-\": \"A\",\n    \"-...\": \"B\",\n    \"-.-.\": \"C\",\n    \"-..\": \"D\",\n    \".\": \"E\",\n    \"..-.\": \"F\",\n    \"--.\": \"G\",\n    \"....\": \"H\",\n    \"..\": \"I\",\n    \".---\": \"J\",\n    \"-.-\": \"K\",\n    \".-..\": \"L\",\n    \"--\": \"M\",\n    \"-.\": \"N\",\n    \"---\": \"O\",\n    \".--.\": \"P\",\n    \"--.-\": \"Q\",\n    \".-.\": \"R\",\n    \"...\": \"S\",\n    \"-\": \"T\",\n    \"..-\": \"U\",\n    \"...-\": \"V\",\n    \".--\": \"W\",\n    \"-..-\": \"X\",\n    \"-.--\": \"Y\",\n    \"--..\": \"Z\",\n}\n\nexport const MORSE_TO_IMG:any = {\n    '-':`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"8\" viewBox=\"0 0 20 8\">\n    <path fill=\"#FFF\" fill-rule=\"evenodd\" d=\"M978 379H998V387H978z\" transform=\"translate(-978 -379)\"/>\n        </svg>`,\n    '.':`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\">\n            <circle cx=\"972\" cy=\"383\" r=\"4\" fill=\"#FFF\" fill-rule=\"evenodd\" transform=\"translate(-968 -379)\"/>\n        </svg>`\n}\n\nexport const isMobile = document.documentElement.clientWidth < 600;\n\n// const isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);\n\n// const isSafari = /constructor/i.test(window.HTMLElement.toString()) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));\n\n// window.chrome\n// export const  isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime)&&isMobile;\nexport const isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n\n// var isSafari = /constructor/i.test(window.HTMLElement.toString()) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));\n// export const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\n// export const isSafari = (navigator.userAgent.indexOf(\"Safari\") != -1)&&isMobile;\nexport const isSafari=  /Safari/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent);\n\n// export const user = navigator.userAgent;\n\nexport const isAndroid= /Android/.test(navigator.userAgent);\n\n\nexport const  isSamsungBrowser = navigator.userAgent.match(/SamsungBrowser/i)&&isMobile;\n\n\n\nexport const createPopupWin = (pageURL:string, pageTitle:string, \n    popupWinWidth:number, popupWinHeight:number,top:number,left:number) =>{ \n        // var left = (window.screen.width ) ; \n        // var top = (window.screen.height ) ; \n    var myWindow = window.open(pageURL, pageTitle,  \n        'resizable=yes, width=' + popupWinWidth \n        + ', height=' + popupWinHeight + ', top=' \n        + top + ', left=' + left); \n} \n\n// function lock (orientation) {\n//     // Go into full screen first\n//     if (document.documentElement.requestFullscreen) {\n//       document.documentElement.requestFullscreen();\n//     } else if (document.documentElement.mozRequestFullScreen) {\n//       document.documentElement.mozRequestFullScreen();\n//     } else if (document.documentElement.webkitRequestFullscreen) {\n//       document.documentElement.webkitRequestFullscreen();\n//     } else if (document.documentElement.msRequestFullscreen) {\n//       document.documentElement.msRequestFullscreen();\n//     }\n  \n//     // Then lock orientation\n//     screen.orientation.lock(orientation);\n//   }","import React from 'react';\nimport './MorseTextInput.scss';\nimport { ALPHA_TO_MORSE, MORSE_TO_IMG, isMobile } from '../../../assets/Constants';\nimport circle from '../../../assets/oval.svg';\nimport dash from '../../../assets/rectangle.svg';\nimport red_circle from '../../../assets/red-oval.svg';\nimport red_dash from '../../../assets/red-rectangle.svg';\nimport { ChainDetails } from '../../../models/Interfaces';\n\n\n\n\nconst  MAX_LENGTH =  100;\nexport const DOT_PRICE = 560;\nexport const DASH_PRICE = 980;\ninterface Props {\n    className:string;\n    hidePlaceholder?:boolean;\n    onChange:(chain:string,indexError:number,chainDetails:ChainDetails)=>void;\n    inputRef:(inputRef:any)=>void;\n}\n\ninterface State  {\n    text:string;\n    dashLength:number;\n    dotLength:number;\n    chainLength:number;\n    indexError:number;\n    focus:boolean;\n\n}\n\nexport class MorseTextInput extends React.Component<Props,State>{\n\n\n    \n    constructor(props:Props){\n        super(props);\n        this.state={text:'',dashLength:0,dotLength:0,chainLength:0,indexError:-1,focus:true}\n    }\n\n    handleChange = async (event:any)=>{\n                if(/^(([a-zA-Z]{1,})\\s{0,1})*$/m.test(event.target.value.toString())){\n                    const value:string = event.target.value;\n\n                    ///////////////////////\n                    await this.setState({text:value,dashLength:0,dotLength:0,chainLength:0,indexError:-1})\n                    let morseSum = 0;\n                    let dotSum = 0;\n                    let dashSum = 0;\n                    let charSum = 0;\n                    value.split('').map(async (c:string,index)=>{\n                        const morseChar = ALPHA_TO_MORSE[c.toUpperCase()].split('');\n                        if(this.state.indexError==-1)\n                            charSum++;\n    \n    \n                        if(this.state.indexError==-1)\n                        morseChar.forEach((char)=>{\n                            if(this.state.indexError==-1) { \n                             \n                            if(char == '.'){\n                                this.setState({dotLength:this.state.dotLength+3,chainLength:this.state.chainLength+3,})\n    \n                                morseSum += 3;\n                                dotSum+=1;\n    \n                            }else if(char =='-'){\n                                this.setState({dashLength:this.state.dashLength+7,chainLength:this.state.chainLength+7})\n                                morseSum += 7;\n                                dashSum+=1;\n                            }\n                            else if(char ==' '){\n                                this.setState({chainLength:this.state.chainLength+2.5})\n                                morseSum += 2.5;\n                            }\n                            if(morseSum>MAX_LENGTH&&this.state.indexError==-1){\n                                this.props.onChange(value.slice(0,charSum),index,{length:morseSum,dotSum:dotSum,dashSum:dashSum,totalPrice:(dotSum*DOT_PRICE+dashSum*DASH_PRICE)});\n                                 this.setState({indexError:index});\n                            }\n                           \n                            this.props.onChange(value.slice(0,charSum),this.state.indexError,{length:morseSum,dotSum:dotSum,dashSum:dashSum,totalPrice:(dotSum*DOT_PRICE+dashSum*DASH_PRICE)});\n                        }\n                      \n                      })\n                        return morseChar.join('')\n                    }).join('');\n    \n                    if(value.length==0){\n                        this.props.onChange(value,-1,{length:0,dotSum:0,dashSum:0,totalPrice:0});\n                    }\n                 }\n    }\n\n    render(){\n        return (<div className={\"input-wrapper-all \"+this.props.className}>\n            <div className={\"morse-text-input-div\"} style={{border:5,borderColor:\"black\"}}>\n            <input autoFocus={this.state.focus}\n            ref={(input) => {  this.props.inputRef(input)}} \n             style={{textIndent:this.state.text.length<1?'-35vw':'0'}}\n              className={\"morse-text-input\"} value={this.state.indexError===-1?this.state.text:this.state.text.slice(0,this.state.indexError)} onChange={this.handleChange}/>\n            {this.state.text.length === 0 && !this.props.hidePlaceholder && <div className=\"placeholder\">TYPE</div>}\n            <Morse text={this.state.text} indexError={this.state.indexError}/>\n            </div>\n\n            <div className={\"error-position\"+(this.state.indexError==-1?\" invalid-validations\":'')}>\n                <div className=\"error-message\">\n                {`The morse Secret is too long!`.toLocaleUpperCase()}\n                </div>\n                {!isMobile && <div className=\"suggestions\">\n                &nbsp;{` Here are some other suggestions:`.toLocaleUpperCase()}<br/>\n                {`“be mine” “Love” “Marry me” “Candy”`.toLocaleUpperCase()}\n                </div>}\n            </div>\n\n        </div>\n\n        );\n    }\n}\n\nexport const Morse = React.memo((props: {text: string, indexError: number }) => {\n    return (\n        <div className=\"text-span-input  \"\n             dangerouslySetInnerHTML={{__html:`${\n                     props.text.slice(0,props.indexError!==-1?(props.indexError+1):props.text.length).split('').map((c:string,index:number)=>{\n                         return `<span class=\"span-char-input ${props.text.length<8?'':props.text.length<14?'long-text-width':'too-long-text-width'}\n                     ${index===props.indexError&&props.indexError!=-1?\"red\":''}\">${c}`+`<span class=\"char\" >${ALPHA_TO_MORSE[c.toUpperCase()].split('').map((cc:string)=>{\n\n                             if(cc=='.'){\n                                 if(index===props.indexError&&props.indexError!=-1)\n                                     return `<img src=${red_circle} class=\"icon dot-width-input\"  />`\n                                 return `<img src=${circle} class=\"icon dot-width-input\"  />`\n                             }\n                             else if(cc =='-'){\n                                 if(index===props.indexError&&props.indexError!=-1)\n                                     return `<img src=${red_dash} class=\"icon dash-width-input\" />`\n                                 return `<img src=${dash} class=\"icon dash-width-input\"  />`\n                             }else if( cc==' '){\n                                 return ``;\n                             }\n                             return false;\n                         }).join('')}</span></span>`\n                     }).join('')}`}}>\n        </div>\n    );\n})\n","\n\nimport React from 'react';\nimport './BottomBar.scss';\nimport { remainingTypes, stringToType, TYPE } from '../../../models/Interfaces';\nimport { DOT_PRICE, DASH_PRICE } from '../MorseTextInput/MorseTextInput';\nimport arrow from '../../../assets/images/arrow-black.svg'//'../../../assets/images/arrow-white.svg';\nimport dropdown_icon from '../../../assets/images/drop-down.svg'//'../../../assets/images/arrow-white.svg';\nimport { isMobile } from '../../../assets/Constants';\nimport { MorseMenu } from '../MorseMenu/MorseMenu';\n\n\ninterface Props {\n    className?:string;\n    userChoice:any;\n    secret:any;\n    selectedType:(value:any)=>void;\n    cardClicked:Boolean;\n    getSelected:(selected:boolean)=>void;\n    buttonTextMobile:string;\n}\n\ninterface State  {\n    notSelectedArrayHover:any[];\n    isMenuOpen:boolean;\n    isMaterialMobileOpen:boolean;\n    isCategoryMobileOpen:boolean;\n    isSecretMobileOpen:boolean;\n}\n\nexport class BottomBar extends React.Component<Props,State>{\n\n\n    constructor(props:Props){\n        super(props);\n        this.state = {notSelectedArrayHover:[],isMenuOpen:false,isMaterialMobileOpen:false,isCategoryMobileOpen:false,isSecretMobileOpen:false}\n    }\n\n    componentDidMount():void {\n        this.setState({notSelectedArrayHover:!this.props.userChoice?remainingTypes(stringToType('EARRING'))\n        ?\n                        this.props.userChoice.style==''?remainingTypes(stringToType(this.props.userChoice.category))\n                        :remainingTypes(stringToType(this.props.userChoice.style)):[]:[]})\n    }\n\n    handleClickedItem(c:any,type:string){\n        this.props.selectedType({value:c,keyinput:type});\n    }\n\n    render(){\n\n        const enableCategory = this.props.userChoice.category.length !== 0;\n        const enableMaterial = this.props.userChoice.material.length !== 0;\n        const enablePrice = this.props.secret &&(this.props.secret.firstChain.chainPriceAndWord.length !== 0); \n        console.log(\"this.props.userChoice.material\",enableMaterial)\n        \n        return (\n           <div className={`bottom-container ${this.props.className?this.props.className:''}`}>\n               <div className={`menu-item  ${!enableCategory?'not-active-bottom-item':''}`}>\n                    {this.props.userChoice?this.props.userChoice.category==''?'CATEGORY':this.props.userChoice.category:'CATEGORY'}\n                    <span>  {this.props.userChoice?this.props.userChoice.style==''?'':'-  '+this.props.userChoice.style:''}</span>\n\n                   {enableCategory&& <div className={`dropdown-content category-width `} >\n                        {this.props.userChoice.style?remainingTypes(stringToType(this.props.userChoice.style)).map((c:any)=>{\n                            return ( <div className=\"sub-menu-item dropdown-content-category\" onClick={()=>this.handleClickedItem(c,\"style\")} >{c.displayName}</div>)\n                        }):remainingTypes(stringToType(this.props.userChoice.category)).map((c:any)=>{\n                            return ( <div className=\"sub-menu-item dropdown-content-category\" onClick={()=>this.handleClickedItem(c,\"style\")}>{c.displayName}</div>)\n                        })}\n                   </div>}\n                </div>\n\n               <div className={`menu-item ${!enableMaterial?'not-active-bottom-item':''}`}> \n                {enableMaterial?this.props.userChoice.material:'MATERIAL'}\n                \n                {enableMaterial&&<div className=\"dropdown-content\">\n                        {enableMaterial?remainingTypes(stringToType(this.props.userChoice.material)).map((c:any)=>{\n                            return ( <div className=\"sub-menu-item\" onClick={()=>this.handleClickedItem(c,\"material\")}>{c.displayName}</div>)\n                        }):remainingTypes(TYPE.GOLD).map((c:any)=>{\n                            return ( <div className=\"sub-menu-item\" onClick={()=>this.handleClickedItem(c,\"material\")}>{c.displayName}</div>)\n                        })}\n                   </div>}\n               </div>\n\n              <div className={`menu-item ${!this.props.secret?'not-active-bottom-item':''}`}> \n                  {this.props.secret?((this.props.secret.firstChain.chainPriceAndWord.text).toUpperCase() +' - '+\n                  ((this.props.secret.firstChain.chainPriceAndWord.length*.1).toFixed(2)+'  '+\n                  (this.props.secret.secondChain.chainPriceAndWord.length>0?((this.props.secret.secondChain.chainPriceAndWord.text).toUpperCase() +' - '+\n                  (this.props.secret.secondChain.chainPriceAndWord.length*.1).toFixed(2)+'cm'):''))):'SECRET'}\n               </div>\n\n             <div className={`menu-item end-item ${!enablePrice?'not-active-bottom-item':''}`}> \n               PRICE: {this.props.secret?`\\$${(this.props.secret.firstChain.chainPriceAndWord.totalPrice+\n                this.props.secret.secondChain.chainPriceAndWord.totalPrice\n                )}`:'$0'}\n               \n               {enablePrice&&  <div className=\"price-dropdown\">\n                    <div className=\"price-item\" >DASH STONES:&nbsp; <span className=\"price-text\">{DASH_PRICE}</span> \n                    \n                    <span className={\"number-of-stones\"}>X{enablePrice?(this.props.secret.firstChain.chainPriceAndWord.dashSum+\n                        this.props.secret.secondChain.chainPriceAndWord.dashSum\n                        ):0}</span></div>\n                    <div className=\"price-item\" >\n                        \n                        DOT STONES:&nbsp;&nbsp;<span className=\"price-text\">{DOT_PRICE}</span> \n                    <span className={\"number-of-stones\"}>X{enablePrice?(this.props.secret.firstChain.chainPriceAndWord.dotSum\n                        +this.props.secret.secondChain.chainPriceAndWord.dotSum\n                        ):0}</span>\n\n                    </div>\n                  \n                </div>}\n                </div>\n\n\n                <div className={`menu-item-mobile morse-menu-item`} onClick={()=>this.setState({isMenuOpen:!this.state.isMenuOpen})}> \n                    <div className=\"menu-morse-mobile\">i</div>\n               </div>\n               <div className={`menu-item-mobile button-position-mobile ${!this.props.cardClicked?'select-disable':''}`} \n            //    style={{zIndex:99999999999999999}}\n                onClick={()=>{\n                    // alert(\"aaa\")\n                    if(this.props.cardClicked)\n                    this.props.getSelected(true);\n                }}\n               > \n                    {this.props.buttonTextMobile} <img src={arrow} className=\"arrow\"/>\n                </div>\n\n                 {this.state.isMenuOpen&&<div className={`mobile-menu`}>\n                        <div className=\"menu-item-sub\" onClick={enableCategory?()=>{\n                            this.setState({isCategoryMobileOpen:!this.state.isCategoryMobileOpen})\n                            this.setState({isSecretMobileOpen:false})\n                            this.setState({isMaterialMobileOpen:false})\n                            \n                        }:()=>{}}>\n                            {this.props.userChoice?this.props.userChoice.category==''?'CATEGORY':this.props.userChoice.category:'CATEGORY'}\n                            <span>  {this.props.userChoice?this.props.userChoice.style==''?'':'-  '+this.props.userChoice.style:''}</span> \n                            <img src={dropdown_icon} className=\"dropdown-icon\"/>\n                        </div>\n                        {this.state.isCategoryMobileOpen&& (this.props.userChoice.style?remainingTypes(stringToType(this.props.userChoice.style)).map((c:any)=>{\n                            return ( <div className=\"menu-item-sub menu-item-sub-black\" onClick={()=>{\n                                this.handleClickedItem(c,\"style\")\n                                window.location.reload()\n                            }} >{c.displayName}</div>)\n                        }):remainingTypes(stringToType(this.props.userChoice.category)).map((c:any)=>{\n                            return ( <div className=\"menu-item-sub menu-item-sub-black\" onClick={()=>{\n                                this.handleClickedItem(c,\"style\")\n                                window.location.reload()\n                            }}>{c.displayName}</div>)\n                        }))}\n                        <div className=\"menu-item-sub\" onClick={enablePrice?()=>{\n                            this.setState({isSecretMobileOpen:!this.state.isSecretMobileOpen})\n                            this.setState({isCategoryMobileOpen:false})\n                            this.setState({isMaterialMobileOpen:false})\n                            }:()=>{}}>\n                            {this.props.secret?((this.props.secret.firstChain.chainPriceAndWord.text).toUpperCase() +' - '+\n                            ((this.props.secret.firstChain.chainPriceAndWord.length*.1).toFixed(2)+'  '+\n                            (this.props.secret.secondChain.chainPriceAndWord.length>0?((this.props.secret.secondChain.chainPriceAndWord.text).toUpperCase() +' - '+\n                            (this.props.secret.secondChain.chainPriceAndWord.length*.1).toFixed(2)+'cm'):''))):'SECRET'}\n                            <img src={dropdown_icon} className=\"dropdown-icon\"/>\n                        </div>\n                        {this.state.isSecretMobileOpen&& (\n                                <div className=\"menu-item-sub menu-item-sub-black\" onClick={()=>{\n                                    console.log(\"edit\")\n                                }}>EDIT</div>\n                            )}\n                        <div className=\"menu-item-sub\" onClick={enableMaterial?()=>{\n                            this.setState({isMaterialMobileOpen:!this.state.isMaterialMobileOpen})\n                            this.setState({isCategoryMobileOpen:false})\n                            this.setState({isSecretMobileOpen:false})\n                            }:()=>{}}>\n                            {this.props.userChoice?this.props.userChoice.material==''?'MATERIAL':this.props.userChoice.material:'MATERIAL'}\n                            <img src={dropdown_icon} className=\"dropdown-icon\"/>    \n                        </div>\n                        {this.state.isMaterialMobileOpen&&(this.props.userChoice.material?remainingTypes(stringToType(this.props.userChoice.material)).map((c:any)=>{\n                            return ( <div className=\"menu-item-sub menu-item-sub-black\" onClick={()=>this.handleClickedItem(c,\"material\")}>{c.displayName}</div>)\n                        }):remainingTypes(TYPE.GOLD).map((c:any)=>{\n                            return ( <div className=\"menu-item-sub menu-item-sub-black\" onClick={()=>this.handleClickedItem(c,\"material\")}>{c.displayName}</div>)\n                        }))}\n                </div>}\n           </div>\n        );\n    }\n}\n","import React from 'react';\nimport './CardComponent.scss';\nimport { TYPE } from '../../../models/Interfaces';\n\ninterface Props {\n    backgroundImage:string;\n    mouseText:string;\n    onMouseMove:Function;\n    onClick:Function;\n    selectedCard: boolean;\n    isCardSelected: boolean;\n    isBuyPage: boolean;\n    isAfterBuyPage: boolean;\n    isMaterialPage:boolean\n    onMouseEnter:Function;\n    onMouseLeave:Function;\n    cardType:TYPE;\n    buyPage:boolean;\n}\n\ninterface State  {\n    hover:boolean,\n}\n\nexport class CardComponent extends React.Component<Props,State>{\n\n    getClassName = () => {\n        if (this.props.isAfterBuyPage)\n            return \"\"\n        if (this.props.isMaterialPage)\n            return \"full-light\"\n        return \"\"\n    }\n\n\n    constructor(props:Props){\n        super(props);\n        this.state = {hover:false}\n    }\n\n    componentDidUpdate(prevProps:Props){\n    }\n\n\n    getSelectedCardClass = () => {\n        if (this.props.isCardSelected){\n            return this.props.selectedCard ? 'full-width' : 'no-width'\n        }\n        return ''\n    }\n\n    render(){\n        return (\n            <div className={`card-wrapper ${this.getSelectedCardClass()} ${this.state.hover ? \"cover\" : \"\"} ${this.props.isMaterialPage ? \"full-light\" : \"\"} ${this.getClassName()}`}\n             onClick={this.props.onClick.bind(this)} \n             onMouseMove={()=>this.props.onMouseMove(this.props.mouseText)}>\n                    <div className={`item-column ${this.props.isAfterBuyPage||this.props.isMaterialPage ? \"center-woman\": \"\"}  \n                    ${this.props.isCardSelected&&this.props.cardType===TYPE.NECKLACE?'necklace-move':'other-move'}`}\n                         style={{backgroundImage: `url(${this.props.backgroundImage})`,}}\n                         onMouseEnter={() => {\n                             this.setState({hover: true});\n                             this.props.onMouseEnter();\n                            }}\n                         onMouseLeave={() => {\n                             this.setState({hover: false})\n                             this.props.onMouseLeave();\n                             }}>\n                        <div className=\"gradiant\"/>\n                        {!this.state.hover&& !this.props.buyPage &&<div className=\"layer\"/>}\n\n                        {!this.state.hover && !this.props.isCardSelected &&\n                         <div className='off-line'>\n                            <div className=\"line hidden\"/>\n                            <div className=\"line hide-line-mobile\"/>\n                            <div className=\"line hide-line-mobile\"/>\n                            <div className=\"line\"/>\n                            <div className=\"line hide-line-mobile\"/>\n                            <div className=\"line hide-line-mobile\"/>\n                            <div className=\"line hidden\"/>\n                        </div>}\n                    </div>\n                    {this.state.hover && \n                    <div className=\"type-mobile\">\n                        {this.props.mouseText}\n                    </div>}\n        </div>\n\n        );\n    }\n}\n","import React from 'react';\nimport './MorseMenu.scss';\nimport { ALPHA_TO_MORSE, MORSE_TO_IMG } from '../../../assets/Constants';\nimport circle from '../../../assets/oval.svg';\nimport dash from '../../../assets/rectangle.svg';\n\ninterface Props {\n    onClose:()=>void;\n    className?:string;\n}\n\ninterface State  {\n}\n\nexport class MorseMenu extends React.Component<Props,State>{\n\n\n    constructor(props:Props){\n        super(props);\n        this.state = {hover:false}\n    }\n\n    componentDidUpdate(prevProps:Props){\n    }\n\n\n\n\n    render(){\n        return (\n            <>\n            <div className={\"morse-menu-wrapper\"+\" \"+this.props.className} >\n                <div className=\"close-icon\" onClick={()=>this.props.onClose()}/>\n                <div className=\"list-wrapper\">\n                    <table>\n                        <tbody>\n                        {Object.entries(ALPHA_TO_MORSE).map(([key, value]) => {\n                            if(value){\n                            let val = value.toString();\n                            \n                            return (<tr className=\"list-morse\" key={key}><td>\n                                {key}</td>&nbsp; <td className=\"code\" key={key+\"1\"} dangerouslySetInnerHTML={{__html:val.split('').map((c:any)=>{\n                                    if(c=='.'){\n                                        return `<img src=${circle} class=\"icon-menu\"  />`\n                                    }\n                                    else if(c =='-'){\n                                        return `<img src=${dash} class=\"icon-menu dash-width\"   />`\n                                    }\n                                }).join(' ')}}\n                            ></td>\n                            </tr>)\n                            }\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n\n\n                <div className=\"list-wrapper-mobile\">\n                    <table className=\"column-chars\">\n                        <tbody>\n                            {Object.entries(ALPHA_TO_MORSE).slice(0,13).map(([key, value]) => {\n                                if(value){\n                                let val = value.toString();\n                                \n                                return (<tr className=\"list-morse\" key={key}><td>\n                                    {key}</td>&nbsp; <td className=\"code\" key={key+\"1\"} dangerouslySetInnerHTML={{__html:val.split('').map((c:any)=>{\n                                        if(c=='.'){\n                                            return `<img src=${circle} class=\"icon-menu\"  />`\n                                        }\n                                        else if(c =='-'){\n                                            return `<img src=${dash} class=\"icon-menu dash-width\"   />`\n                                        }\n                                    }).join(' ')}}\n                                ></td>\n                             \n                                </tr>)\n                                }\n                                })}\n                        </tbody>\n                    </table>\n                    <table className=\"column-chars\">\n                        <tbody>\n                            {Object.entries(ALPHA_TO_MORSE).slice(13,26).map(([key, value]) => {\n                                if(value){\n                                let val = value.toString();\n                                \n                                return (<tr className=\"list-morse\" key={key}><td>\n                                    {key}</td>&nbsp; <td className=\"code\" key={key+\"1\"} dangerouslySetInnerHTML={{__html:val.split('').map((c:any)=>{\n                                        if(c=='.'){\n                                            return `<img src=${circle} class=\"icon-menu\"  />`\n                                        }\n                                        else if(c =='-'){\n                                            return `<img src=${dash} class=\"icon-menu dash-width\"   />`\n                                        }\n                                    }).join(' ')}}\n                                ></td>\n                             \n                                </tr>)\n                                }\n                                })}\n                        </tbody>\n                    </table>\n                </div>\n\n                <div className=\"bottom-bar-menu\">\n                        <div className=\"bottom-bar-menu-item\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"7\" height=\"7\" viewBox=\"0 0 8 8\">\n                            <circle cx=\"972\" cy=\"383\" r=\"4\" fill=\"#FFF\" fill-rule=\"evenodd\" transform=\"translate(-968 -379)\"/>\n                        </svg>\n\n                        &nbsp;$560</div>\n                        <div className=\"bottom-bar-menu-item\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"8\" viewBox=\"0 0 20 8\">\n                            <path fill=\"#FFF\" fill-rule=\"evenodd\" d=\"M978 379H998V387H978z\" transform=\"translate(-978 -379)\"/>\n                        </svg>\n                        &nbsp;$980</div>\n                    </div>\n            </div>\n            <div className={`full-screen-menu ${this.props.className}`} onClick={()=>this.props.onClose()}> </div>\n            </> \n        );\n        \n    }\n}\n","import React  from \"react\";\n\nimport './MorsePage.scss';\nimport { IReducers } from \"../../../redux/store\";\nimport { connect } from \"react-redux\";\nimport { BottomBar } from \"../../SharedComponents/BottomBar/BottomBar\";\nimport { MorseMenu } from \"../../SharedComponents/MorseMenu/MorseMenu\";\nimport {Morse, MorseTextInput} from \"../../SharedComponents/MorseTextInput/MorseTextInput\";\nimport circle from '../../../assets/oval.svg';\nimport dash from '../../../assets/rectangle.svg';\nimport red_circle from '../../../assets/red-oval.svg';\nimport red_dash from '../../../assets/red-rectangle.svg';\nimport { ALPHA_TO_MORSE, isMobile, isSamsungBrowser } from \"../../../assets/Constants\";\nimport { userChoiceTypeAction } from \"../../../redux/actions/MainAction\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nimport arrow from '../../../assets/images/arrow-white.svg';\nimport arrow_grey from '../../../assets/images/arrow-grey.svg';\nimport arrow_black from '../../../assets/images/arrow-black-2.svg';\nimport {Card, ChainDetails} from \"../../../models/Interfaces\";\n\ninterface Props {\n    userChoice:any;\n    // typeChoice:(type:string)=>void;\n    onMorseType:(chainPriceAndWord:any)=>void;\n    card: Card;\n    step: number;\n    handleBack: ()=>void;\n    handleNext: ()=>void;\n    finishMobileButton:boolean;\n    buyAction:Function;\n    selectEventMobile:boolean;\n    isAfterBuyPage:boolean;\n    resetMorse:boolean;\n    isBuyPage:boolean;\n    firstChain:any;\n    secondChain:any;\n    // inputRef:()\n}\n\ninterface State {\n    morseHover:boolean;\n    x:number;\n    y:number;\n    morseMenuOpen: boolean;\n    isAfterBuy : boolean;\n    firstChain: {\n        chain: string;\n        chainPriceAndWord: any;\n        indexError: number;\n    },\n    secondChain: {\n        chain: string;\n        chainPriceAndWord: any;\n        indexError: number;\n    }\n\n}\n\nexport class MorsePage extends React.Component<Props,State>{\n\n\n    constructor(props:Props){\n        super(props);\n\n        this.state = {\n            morseHover:false,\n            x:0,\n            y:0,\n            morseMenuOpen: false,\n            isAfterBuy: false,\n            firstChain: {\n                chain: '', indexError: -1, chainPriceAndWord: {text: '', length: 0, totalPrice: 0,dashSum:0,dotSum:0}\n            },\n            secondChain: {\n                chain: '', indexError: -1, chainPriceAndWord: {text: '', length: 0, totalPrice: 0,dashSum:0,dotSum:0}\n            },\n        }\n    }\n\n\n    handleMouseMove = (e:any) => {\n        this.setState({\n          x: e.clientX,\n          y: e.clientY\n        });\n      };\n\n    handleChange = async (chain:string,indexError:number,chainDetails:ChainDetails) => {\n\n        const chainPriceAndWord = {text: chain, length: chainDetails.length, totalPrice: chainDetails.totalPrice,dashSum:chainDetails.dashSum,dotSum:chainDetails.dotSum}\n\n        if (this.props.card.duplicateMorse){\n            await this.setState({secondChain: {chain, indexError, chainPriceAndWord} ,firstChain: {chain, indexError, chainPriceAndWord}})\n\n        }else {\n            if (this.props.step === 1) {\n                await this.setState({firstChain: {chain, indexError, chainPriceAndWord}})\n            } else {\n                await this.setState({secondChain: {chain, indexError, chainPriceAndWord}})\n            }\n        \n        }\n        this.props.onMorseType(this.state);\n\n    }\n\n    handleBuy = () => {\n        const isAfterBuy = this.props.buyAction()\n        \n        this.setState({isAfterBuy: true})\n    }\n\n\n    componentDidUpdate(prevProps:Props){\n        if(prevProps.selectEventMobile !=this.props.selectEventMobile&&isMobile){\n            if(this.props.finishMobileButton){\n                this.props.handleNext()\n            }\n        }\n\n \n\n\n\n\n        if(this.props.resetMorse){\n            this.state = {\n                morseHover:false,\n                x:0,\n                y:0,\n                morseMenuOpen: false,\n                isAfterBuy: false,\n                firstChain: {\n                    chain: '', \n                    indexError: -1, \n                    chainPriceAndWord: {text: '', length: 0, totalPrice: 0,dashSum:0,dotSum:0}\n                },\n                secondChain: {\n                    chain: '', \n                    indexError: -1, \n                    chainPriceAndWord: {text: '', length: 0, totalPrice: 0,dashSum:0,dotSum:0}\n                },\n            }\n        }\n    }\n\n    buttons = () => {\n\n        const enable:boolean = this.state.firstChain.chain.length>0 &&(this.state.firstChain.indexError===-1&&this.state.secondChain.indexError===-1)\n        const enable2:boolean = this.props.card.stepsNumber === 2?this.state.secondChain.chain.length>0 &&(this.state.secondChain.indexError===-1&&this.state.secondChain.indexError===-1):true;\n            if(this.props.step > this.props.card.stepsNumber)\n                return <div className=\"buy-morse\" onClick={this.handleBuy}> BUY <img src={arrow_black} className=\"arrow\"/></div>\n        return <React.Fragment>\n            {this.props.step === this.props.card.stepsNumber ?\n                <div className={`${enable&&enable2?'next':'next-disable'}`} \n                     onClick={enable&&enable2?this.props.handleNext:()=>{}} > \n                     DONE \n                     <img src={enable&&enable2?arrow:arrow_grey} className=\"arrow\"/>\n                </div> :\n                <div onClick={enable?this.props.handleNext:()=>{}}\n                    className={`${enable?'next':'next-disable'}`}> \n                    NEXT EAR\n                 <img src={enable?arrow:arrow_grey} className=\"arrow\"/>\n                 </div>}\n            {<div className={`${this.props.step === this.props.card.stepsNumber&&this.props.step ===2?'back':'back-disable'}`}\n             onClick={this.props.handleBack}>\n                <img src={arrow_grey} className=\"arrow left-arrow\"/> BACK </div>}\n        </React.Fragment>\n    }\n\n    inputFoucs(inputRef:any){\n        if(inputRef&&!this.state.morseMenuOpen)\n           inputRef.focus(); \n    }\n\n    getTextMargin = () => {\n        return  0;\n    }\n\n\n    shiftMargin = ()=>{\n        return  this.props.isBuyPage&&!isMobile?'25vw':0;\n    }\n\n\n\n    render(){\n      \n\n        return (\n            <div className={`container-morse ${this.props.card.stepsNumber === 2 ? \"container-morse-mini-text\" :\"\" }`}\n            style={{height:(!isSamsungBrowser)&&isMobile?'87vh':'100vh',backdropFilter:this.state.isAfterBuy?'brightness(.5)':'none'}}>\n               {this.state.isAfterBuy||this.props.isAfterBuyPage ? <BackToShop/> :\n                <React.Fragment>\n                    {!this.props.isBuyPage&&\n                <div className=\"question\" style={{opacity: this.state.firstChain.chain.length<1? 1:.4}}>WHAT'S YOUR SECRET? </div>}\n                <div className=\"morse-texts\">\n                    {this.props.step === 2 && this.props.card.stepsNumber !== 1 && \n                    <div className='first-morse'>\n                        <Morse text={this.state.firstChain.chain} indexError={30}/>\n                    </div>}\n                    {<MorseTextInput hidePlaceholder={false} inputRef={this.inputFoucs.bind(this)}\n                                     className={`morse-input ${this.props.step === 1 ? '' : 'display-none'}`}\n                                     onChange={this.handleChange}/>}\n                    {this.props.card.stepsNumber !== 1 &&\n                    <MorseTextInput inputRef={this.inputFoucs.bind(this)} hidePlaceholder={true}\n                                    className={`morse-input ${this.props.step === 2 ? '' : ' display-none'}`}\n                                    onChange={this.handleChange}/>}\n                   </div>\n\n\n                <MorseChain \n                    card={this.props.card}\n                    className={this.props.card.rightNecklaceClass}\n                    getTextMargin={this.getTextMargin}\n                    shiftMargin={this.shiftMargin}\n                    chain={this.props.firstChain?this.props.firstChain.chain:\"\"}\n                    step={this.props.step}\n                />\n\n                <MorseChain \n                    card={this.props.card}\n                    className={this.props.card.leftNecklaceClass}\n                    getTextMargin={this.getTextMargin}\n                    shiftMargin={this.shiftMargin}\n                    chain={this.props.secondChain?this.props.secondChain.chain:\"\"}\n                    step={this.props.step}\n                />\n\n                <div className='morse-btns'>{this.buttons()}</div>\n                {<div className={\"morse-menu-icon\"}  \n                onMouseEnter={() => this.setState({morseHover: true})}\n                onMouseLeave={() => this.setState({morseHover: false})}\n                onMouseMove={this.handleMouseMove} onClick={() => {\n                    this.setState({morseMenuOpen: true})\n                }}></div>}\n\n                \n                {<MorseMenu className={this.state.morseMenuOpen ? '' : 'hide-menu'} \n                    onClose={() => {\n                        this.setState({morseMenuOpen: false})\n                    }}/>}\n                </React.Fragment>}\n\n\n                {this.state.morseHover &&<div className=\"mouse-movement\" \n                        style={{top:this.state.y-6,left:this.state.x-190}}> \n                         MORSE GUIDE\n                    </div>}\n            </div>\n        );\n    }\n}\n\nconst DotIcon = React.memo((props:any) => {\n    const isFill = props.fill;\n    return (\n        <svg className='morse-char dot-icon' xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\">\n            <circle cx=\"972\" cy=\"383\" r=\"4\" style={{fill:isFill?'white':''}} fill-rule=\"evenodd\" transform=\"translate(-968 -379)\"/>\n        </svg>\n\n    );\n})\nconst DashIcon = React.memo((props:any) => {\n    const isFill = props.fill;\n    return (\n        <svg className='morse-char dash-svg' width=\"8\" height=\"24\">\n        <rect width=\"8\" height=\"24\" style={{fill:isFill?'white':''}}/>\n        </svg>\n\n    );\n})\n\n  const mapStateToProps = (state:IReducers) => {\n    const  {slides,userChoice} = state.mainState;\n    console.log(\"userChoice\",userChoice)\n    return {\n        slides,userChoice\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch:any) => {\n    \n    return {\n        typeChoice:(type:ChainDetails)=>dispatch(userChoiceTypeAction(type)),\n\n    };\n  };\n\n\n  const BackToShop = React.memo((props) => {\n\n    return (\n        <div className=\"back-to-shop-card\">\n            <Morse text={\"THANK YOU\"} indexError={30}/>\n            <div className=\"description\">YOU WERE REDIRECTED TO THE PAYMENT PAGE TO COMPLETE YOUR ORDER</div>\n            <div onClick={()=> window.location.reload()} className=\"back-to-shop\">\n             CONTINUE SHOPPING \n             <img src={arrow_black} className=\"arrow\"/>\n            </div>\n        </div>\n    );\n})\n\nconst MorseChain = React.memo((props:any) => {\n    return (\n        <div className=\"background-morse-wrapper\">\n            <div className={`paint-morse ${props.className}`}\n                style={{marginTop: `${props.getTextMargin()}px`,marginRight:props.shiftMargin()}}>\n                <div className='morse-border'>\n                    {props.chain.split('').map((c: string, index:any) => {\n                        return <div key={c + index}\n                                    className={`tasti ${props.step === props.card.stepsNumber&&index==props.chain.split('').length-1 ? 'white-morse-fill' : 'grey-morse-fill'} `} >\n                            {ALPHA_TO_MORSE[c.toUpperCase()].split('').map((p) => {\n\n                                if(p === '.')\n                                    return   <DotIcon fill={index==props.chain.split('').length-1}/>\n                                else if(p === '-')\n                                    return  <DashIcon fill={index==props.chain.split('').length-1}/>\n                                else\n                                    return ''\n                            })}\n                        </div>\n                    })}\n                </div>\n            </div>\n       </div>\n    );\n})\n\n  \n\n  export default connect(mapStateToProps,mapDispatchToProps)(MorsePage);\n","import { Dispatch } from \"redux\";\nimport { USER_CHOICE, USER_CHOICE_CATEGORY, USER_CHOICE_STYLE, USER_CHOICE_MATERIAL, USER_CHOICE_TYPE } from \"./types\";\nimport { ChainDetails } from \"../../models/Interfaces\";\n\n// import { Dispatch } from 'redux';\nexport {}\n// import { getDriverTrackingPoints, filterDriverTrackingPoints } from '../../Services/DriverTrackingPoint';\n// import { GET_ALL_TRACKING_POINTS } from './types';\n\n\n// export const fetchTrackingPointsAction = () => {\n//   return async (dispatch: Dispatch) => {\n//       try{\n\n      \n//     const { data } = await getDriverTrackingPoints();\n//     // console.log(data)\n//     const trackingPoints:any = []\n    \n//     data.data.forEach((point:any)=>{\n//         if(point.latitude){\n//             trackingPoints.push(point) ;\n//         }\n//         // return false;\n//     })\n//     dispatch({\n//       type: GET_ALL_TRACKING_POINTS,\n//       trackingPoints:trackingPoints\n//     });\n//     }catch(error){\n//         console.log(error)\n//     }\n\n//   };\n// };\n\n\n\nexport const userChoiceCategoryAction = (userChoice:string) => {\n    return async (dispatch: Dispatch) => {\n      dispatch({\n        type: USER_CHOICE_CATEGORY,\n        choice:{userChoice:userChoice}\n      });\n    };\n  };\n\n  export const userChoiceStyleAction = (userChoice:string) => {\n    return async (dispatch: Dispatch) => {\n      dispatch({\n        type: USER_CHOICE_STYLE,\n        choice:{userChoice:userChoice}\n      });\n    };\n  };\n\n  export const userChoiceMaterialAction = (userChoice:string) => {\n    return async (dispatch: Dispatch) => {\n      dispatch({\n        type: USER_CHOICE_MATERIAL,\n        choice:{userChoice:userChoice}\n      });\n    };\n  };\n\n  export const userChoiceTypeAction = (chainDetails:ChainDetails) => {\n\n    // const dots:number = chainDetails.\n    // const dashs:any = {price:userChoice.dashs.price,pcs:userChoice.dashs.sumDots}\n    return async (dispatch: Dispatch) => {\n      dispatch({\n        type: USER_CHOICE_TYPE,\n        choice:{userChoice:chainDetails}\n      });\n    };\n  };","export const USER_CHOICE = 'USER_CHOICE';\nexport const USER_CHOICE_STYLE = 'USER_CHOICE_STYLE';\nexport const USER_CHOICE_CATEGORY = 'USER_CHOICE_CATEGORY';\nexport const USER_CHOICE_MATERIAL = 'USER_CHOICE_MATERIAL';\nexport const USER_CHOICE_TYPE = 'USER_CHOICE_TYPE';\n\nexport {}","import React from 'react';\nimport './MaterialComponent.scss';\nimport { CardComponent } from '../Card/CardComponent';\nimport { isSamsungBrowser, isMobile } from '../../../assets/Constants';\nimport { Slider } from '../../../models/Interfaces';\n\ninterface Props {\n\n    slider:Slider;\n    onClick:Function;\n    // style:any;\n}\n\ninterface State  {\n    x:number;\n    y:number;\n    mouseDirection:string;\n    text:string;\n    hoverWhite:boolean;\n    hoverYellow:boolean;\n}\n\nexport class MaterialComponent extends React.Component<Props,State>{\n\n\n    constructor(props:Props){\n        super(props);\n        this.state = {x:0,y:0,mouseDirection:\"left\",text:\"\",hoverWhite:false,hoverYellow:false}\n    }\n\n    handleMouseMove = (e:any,text:string) => {\n        \n        this.setState({\n          x: e.clientX,\n          y: e.clientY,\n          text:text\n        });\n      };\n\n    render(){\n        return (\n            <div className=\"material-page\"  >\n                <div className=\"grid-container first-card-background bb\"  >\n                    { !this.state.hoverWhite&&!this.state.hoverYellow&&<div className=\"question\" > {'What’s your Material?'.toUpperCase()} </div>}\n\n                    <div  className={`mini-item ${this.state.hoverYellow ? \"cover\" : \"mini-item-material\"}`} onMouseMove={(e)=>this.handleMouseMove(e,\"WHITE GOLD\")}\n                    style={{height:(!isSamsungBrowser&&isMobile)?'78vh':'100vh',animation: `${!isSamsungBrowser&&isMobile?'mymove-chrome':'mymove'} 1s`,}}\n                    onClick={()=>this.props.onClick(\"WHITE GOLD\")} \n                    onMouseEnter={() => this.setState({hoverYellow: true})}\n                    onMouseLeave={() => this.setState({hoverYellow: false})}>\n                        <img src={this.props.slider.material.white} className=\"material-image\"/>\n\n                    {this.state.hoverYellow && isMobile&& \n                    <div className=\"type-mobile-material\">\n                        {this.state.text}\n                    </div>}  \n                    </div>\n\n\n                    <div  className={`mini-item ${this.state.hoverWhite ? \"cover\" : \"mini-item-material\"}`} onMouseMove={(e)=>this.handleMouseMove(e,\"YELLOW GOLD\")}\n                    style={{height:(!isSamsungBrowser&&isMobile)?'78vh':'100vh',animation: `${!isSamsungBrowser&&isMobile?'mymove-chrome':'mymove'} 1s`,}}\n                    onClick={()=>this.props.onClick(\"YELLOW GOLD\")}\n                    onMouseEnter={() => this.setState({hoverWhite: true})}\n                    onMouseLeave={() => this.setState({hoverWhite: false})}>\n                         <img src={this.props.slider.material.yellow} className=\"material-image\"/>\n                    {this.state.hoverWhite  && isMobile&& \n                    <div className=\"type-mobile-material\">\n                        {this.state.text}\n                    </div>}  \n                    </div>\n\n                    <div className=\"mouse-movement\" \n                        style={{top:this.state.y-6,left:this.state.mouseDirection ===\"right\"? this.state.x+25:this.state.text.length<13?this.state.x-200: this.state.x-295}}> \n                        {this.state.text}\n                    </div>\n                </div>\n            </div>\n        );\n        \n    }\n}\n","import './ColumnGrid.scss';\nimport React from 'react';\nimport { CardComponent } from '../Card/CardComponent';\nimport { Card,TYPE, Slider, typeToString } from '../../../models/Interfaces';\nimport MorsePage from '../../screens/MorsePage/MorsePage';\nimport {RouteComponentProps} from \"react-router\";\nimport { isMobile, isSamsungBrowser } from '../../../assets/Constants';\nimport { MaterialComponent } from '../Material/MaterialComponent';\nimport arrow_black from '../../../assets/images/arrow-black-2.svg';\n\ninterface Props {\n    slides:any;\n    onClick:Function;\n    slideIndex: number;\n    onMorseType:(chainPriceAndWord:any)=>void;\n    onBack: Function;\n    selectMobileButton:boolean;\n    finishMobile:boolean;\n    buyAction:Function;\n    isAfterBuyPage: boolean;\n    selectedBottom: any,\n    onEdit: boolean;\n    onMaterialClicked:Function;\n    firstChain:any;\n    secondChain:any;\n    isMaterialPage:boolean;\n    // isMaterialPage:boolean;\n}\n\ninterface State  {\n    x:number;\n    y:number;\n    mouseText:string;\n    mouseDirection:string;\n    oldX:number;\n    isCardSelected: boolean;\n    selectedCard: number;\n    step: number\n    currentType:any;\n    currentIndex:number;\n    finishMobileButton:boolean;\n    resetMorse:boolean;\n    isMaterialPage:boolean;\n    buybtn:boolean;\n    hover:boolean;\n}\n\nexport class FirstColumnGrid extends React.Component<Props&RouteComponentProps,State>{\n    unlisten: any\n    constructor(props:Props&RouteComponentProps){\n        super(props);\n        this.state = {\n            step: 1,\n            isCardSelected: false,\n            selectedCard: -1,\n            x:0,y:0,mouseText:'',\n            mouseDirection:'left',\n            oldX:0,\n            currentType:null,\n            currentIndex:-1,\n            finishMobileButton:false,\n            resetMorse:false,\n            isMaterialPage:false,buybtn:false,\n            hover:false\n        }\n    }\n\n    handleMouseMove = (e:any) => {\n        this.setState({\n          x: e.clientX,\n          y: e.clientY\n        });\n        this.getMouseDirection(e)\n      };\n\n    componentDidMount(): void {\n        if(this.props.selectedBottom !== null ){\n            const slide = this.props.slides[0]\n            const index = slide.cards.findIndex((c: Card) => c.type === this.props.selectedBottom)\n            if(slide.cards[index]) {\n                this.handleSelect(slide.cards[index], index, true).then()\n            }\n        }\n\n\n\n        this.unlisten = this.props.history.listen((e, b)=>{\n            if(b ==='POP') {\n                this.backLogic();\n            }\n        })\n    }\n    componentWillUnmount(): void {\n        this.unlisten();\n    }\n\n    componentDidUpdate(prevProps:Props){\n\n        if(prevProps.onEdit !== this.props.onEdit){\n            this.handleBack();\n        }\n\n\n        if(this.props.selectedBottom !== null && prevProps.selectedBottom !== this.props.selectedBottom){\n            const slide = this.props.slides[this.props.selectedBottom === TYPE.NECKLACE ? 0 : 1]\n            const index = slide.cards.findIndex((c: Card) => c.type === this.props.selectedBottom)\n            if(slide.cards[index]) {\n                this.handleSelect(slide.cards[index], index, true).then()\n            }\n            this.setState({resetMorse:true})\n            this.setState({resetMorse:false})\n        }\n\n\n\n        if(prevProps.isMaterialPage != this.props.isMaterialPage&&isMobile){\n\n            if(this.props.isMaterialPage){\n                this.handleFinish()\n                this.setState({buybtn:true,isMaterialPage:false})\n            }\n\n        }\n\n        if(prevProps.selectMobileButton !=this.props.selectMobileButton&&isMobile){\n            this.setState({finishMobileButton:this.props.finishMobile})\n            if(this.state.currentType === TYPE.NECKLACE&&!this.props.finishMobile) {\n            this.setState({isCardSelected: true, selectedCard: this.state.currentIndex})\n            this.props.history.push('/category')\n            }\n        }\n    }\n\n\n    backLogic = ()=>{\n        if (this.state.isCardSelected){\n            this.setState({isCardSelected: false,step: 1, selectedCard: -1,isMaterialPage:false,buybtn:false})\n            this.props.history.replace('/')\n        }\n        else {\n            this.props.onBack();\n        }\n    }\n\n\n\n    handleSelect = async (c: Card, index: number, forceOpen = false) => {\n        await this.setState({currentType:c.type,currentIndex:index})\n        if(!isMobile){\n        if(c.type === TYPE.NECKLACE || forceOpen) {\n\n            await this.setState({isCardSelected: true, selectedCard: index})\n        }\n        this.props.history.push('/category')\n        }\n        this.props.onClick(typeToString(c.type))\n    }\n\n    getNe = (index: number) => {\n        if(this.state.isCardSelected)\n        return this.state.selectedCard === index ? 'full-width' : 'no-width'\n        return ''\n    }\n\n    handleNext = () => {\n        this.setState(prevState=> ({...prevState, step: prevState.step + 1}));\n\n        if(!this.state.isMaterialPage)\n            this.setState({isMaterialPage:true})\n\n        // console.log(\"here\")\n    }\n\n    handleFinish = ()=>{\n        this.setState(prevState=> ({...prevState, step: prevState.step + 1}));\n    }\n\n    handleBack = () => {\n        this.backLogic();\n    }\n\n\n    handleMaterial = (material:string)=>{\n            this.props.onMaterialClicked(material);\n        if(!isMobile){\n\n            this.handleFinish()\n            this.setState({buybtn:true,isMaterialPage:false})\n\n            console.log(\"heress in material\",material)\n        }\n\n\n    }\n\n\n    render(){\n\n        // console.log(this.props.firstChain)\n        const slide =this.props.slides[this.props.slideIndex]\n        return (\n            <div className=\"grid-container first-card-background\"  onMouseMove={this.handleMouseMove}>\n                {!this.state.isCardSelected && !this.state.isMaterialPage && !this.state.buybtn && !this.state.hover && <div className=\"question\"\n                onClick={() => this.handleSelect(this.state.currentType?this.state.currentType:TYPE.EARRING, 0)}\n                >{this.props.slides[this.props.slideIndex].title}</div>}\n\n                {this.props.slides[this.props.slideIndex].cards.map((c:Card, index: number)=>{\n                    return (\n                        <div  className={`mini-item ${this.getNe(index)}`} style={{height:(!isSamsungBrowser&&isMobile)?'79vh':'100vh',animation: `${!isSamsungBrowser&&isMobile?'mymove-chrome':'mymove'} ${2 - index + 2}s`,}}>\n                                <CardComponent\n                                    mouseText={typeToString(c.type)}\n                                    selectedCard={true}\n                                    isCardSelected={this.state.isCardSelected}\n                                    backgroundImage={c.image}\n                                    onMouseMove={(mouseText: string) => {\n                                        this.setState({mouseText: mouseText})\n                                        this.setState({currentType:c.type,currentIndex:index})\n                                    }}\n                                    cardType={c.type}\n                                    onMouseEnter={()=>{if(!isMobile) this.setState({hover:true})}}\n                                    onMouseLeave={()=>{if(!isMobile)this.setState({hover:false})}}\n                                    isBuyPage={this.state.step + 1 === c.stepsNumber}\n                                    isAfterBuyPage={this.props.isAfterBuyPage}\n                                    onClick={() => this.handleSelect(c, index)}\n                                    isMaterialPage={this.state.isMaterialPage||this.state.buybtn}\n                                    buyPage={this.state.buybtn&& !this.props.isAfterBuyPage}\n                                    />\n                                    </div>\n                    )\n                })}\n\n                 {this.state.buybtn&& !this.props.isAfterBuyPage && <div className='morse-btns'>\n                        <div className=\"buy-morse\" onClick={this.props.buyAction.bind(this)}> BUY <img src={arrow_black} className=\"arrow\"/></div>\n                    </div>}\n\n                {this.state.isMaterialPage &&\n                 <MaterialComponent\n                    slider={this.props.slides[this.props.slideIndex]}\n                    onClick={this.handleMaterial}\n                    />}\n                {this.state.isCardSelected && (!this.state.isMaterialPage||this.state.buybtn) &&\n                <MorsePage selectEventMobile={this.props.selectMobileButton}\n                resetMorse={this.state.resetMorse}\n                buyAction={this.props.buyAction.bind(this)}\n                finishMobileButton={this.state.finishMobileButton}\n                handleBack={this.handleBack} handleNext={this.handleNext}\n                step={this.state.step}\n                card={slide.cards[this.state.selectedCard]}\n                isAfterBuyPage={this.props.isAfterBuyPage}\n                 onMorseType={this.props.onMorseType.bind(this)}\n                 isBuyPage={this.state.buybtn}\n                 firstChain={this.props.firstChain}\n                 secondChain={this.props.secondChain}\n                 />}\n\n\n                {!this.state.isCardSelected &&\n                    <div className=\"mouse-movement\"\n                        style={{top:this.state.y-6,left:this.state.mouseDirection ===\"right\"? this.state.x+25:this.state.mouseText.length<13?this.state.x-235: this.state.x-195}}>\n                        SELECT {this.state.mouseText}\n                    </div>}\n\n            </div>\n        );\n    }\n\n\n\n    getMouseDirection(e:any) {\n        //deal with the horizontal case\n        // console.log('1111' , e.pageX,e.target.getBoundingClientRect().left,e.target.clientWidth,e);\n        if (this.state.oldX < e.pageX) {\n            this.setState({mouseDirection:\"left\"});\n        } else if (this.state.oldX > e.pageX){\n            this.setState({mouseDirection:\"right\"});\n        }\n        this.setState({oldX:e.pageX});\n    }\n\n\n}\n\n","import './ColumnGrid.scss';\nimport React from 'react';\nimport { CardComponent } from '../Card/CardComponent';\nimport { Card, Slider, typeToString, TYPE } from '../../../models/Interfaces';\nimport MorsePage from '../../screens/MorsePage/MorsePage';\nimport {RouteComponentProps} from \"react-router\";\nimport { isMobile, isSamsungBrowser } from '../../../assets/Constants';\nimport { MaterialComponent } from '../Material/MaterialComponent';\nimport arrow_black from '../../../assets/images/arrow-black-2.svg';\n\ninterface Props {\n    slides:any;\n    onClick:Function;\n    slideIndex: number;\n    onMorseType:(chainPriceAndWord:any)=>void;\n    onBack: Function;\n    selectMobileButton:boolean;\n    finishMobile:boolean;\n    buyAction:Function;\n    isAfterBuyPage: boolean;\n    selectedBottom: any;\n    onEdit: boolean;\n    onMaterialClicked:Function;\n    firstChain:any;\n    secondChain:any;\n    isMaterialPage:boolean;\n\n}\n\ninterface State  {\n    x:number;\n    y:number;\n    mouseText:string;\n    mouseDirection:string;\n    oldX:number;\n    isCardSelected: boolean;\n    selectedCard: number;\n    step: number;\n    currentType:any;\n    currentIndex:number;\n    finishMobileButton:boolean;\n    resetMorse:boolean;\n    isMaterialPage:boolean;\n    buybtn:boolean;\n    hover:boolean;\n\n}\n\nexport class SecondColumnGrid extends React.Component<Props&RouteComponentProps,State>{\n\n    unlisten: any;\n\n    constructor(props:Props&RouteComponentProps){\n        super(props);\n        this.state = {\n            step: 1, \n            isCardSelected: false, \n            selectedCard: -1, \n            x:0,y:0,mouseText:'',\n            mouseDirection:'left',\n            oldX:0,\n            currentType:TYPE.SINGLE_EARRING,\n            currentIndex:-1,\n            finishMobileButton:false,\n            resetMorse:false,\n            isMaterialPage:false,buybtn:false,\n            hover:false\n        }\n    }\n\n    handleMouseMove = (e:any) => {\n        this.setState({\n          x: e.clientX,\n          y: e.clientY\n        });\n        this.getMouseDirection(e)\n      };\n\n    componentDidMount(): void {\n        if (this.props.selectedBottom !== null) {\n            const slide = this.props.slides[1]\n            const index = slide.cards.findIndex((c: Card) => c.type === this.props.selectedBottom)\n            if (slide.cards[index])\n                this.handleSelect(slide.cards[index], index).then()\n        }\n\n        this.unlisten = this.props.history.listen((e, b)=>{\n            if(b ==='POP') {\n                this.backLogic();\n            }\n        })\n    }\n    componentWillUnmount(): void {\n        this.unlisten()\n    }\n\n\n    backLogic = ()=>{\n        if(!this.state.isCardSelected) {\n            this.props.onBack()\n            this.props.history.replace('/')\n        }\n        else {\n            this.props.history.replace('/category')\n        }\n        this.setState({isCardSelected: false, selectedCard: -1,isMaterialPage:false,buybtn:false})\n    }\n\n\n    componentDidUpdate(prevProps:Props){\n        if(prevProps.onEdit !== this.props.onEdit){\n            this.handleBack()\n        }\n        if(this.props.selectedBottom !== null && prevProps.selectedBottom !== this.props.selectedBottom){\n            const slide = this.props.slides[this.props.selectedBottom === TYPE.NECKLACE ? 0 : 1]\n            const index = slide.cards.findIndex((c: Card) => c.type === this.props.selectedBottom)\n            if(slide.cards[index])\n                this.handleSelect(slide.cards[index], index).then()\n            this.setState({resetMorse:true})\n            this.setState({resetMorse:false})\n        }\n\n        if(prevProps.isMaterialPage != this.props.isMaterialPage&&isMobile){\n\n            if(this.props.isMaterialPage){\n                this.setState({buybtn:true,isMaterialPage:false})\n            }\n       \n        }\n\n        if(prevProps.selectMobileButton !=this.props.selectMobileButton&&isMobile){\n            this.setState({finishMobileButton:this.props.finishMobile});\n            if(this.props.slideIndex === 1&&this.state.currentIndex>-1&&!this.props.finishMobile) {\n                this.setState({isCardSelected: true,step: 1, selectedCard: this.state.currentIndex})\n            }\n        }\n    }\n\n    handleSelect = async (c: Card, index: number) => {\n        await this.setState({currentIndex: index,currentType:c.type})\n        this.props.onClick(typeToString(c.type))\n        if(!isMobile){\n            if(this.props.slideIndex === 1) {\n                this.setState({isCardSelected: true,step: 1, selectedCard: index})\n            }\n        }\n    }\n\n    getNe = (index: number) => {\n        if(this.state.isCardSelected)\n            return this.state.selectedCard === index ? 'full-width' : 'no-width'\n        return ''\n    }\n\n    handleNext = () => {\n\n        \n        if (this.state.step < 3)\n            this.setState(prevState => ({...prevState, step: prevState.step + 1}))\n        // if(!this.state.isMaterialPage)\n        // console.log(\"this.state.currentType\",typeToString(this.state.currentType))\n        // console.log(\"this.state.step\",this.state.step)\n\n        if((this.state.currentType !== TYPE.DISTINCT_PAIR)||this.state.currentType === TYPE.DISTINCT_PAIR \n        &&this.state.step ===2)\n            {\n            this.setState({isMaterialPage:true})\n        }\n\n        \n    }\n\n    handleBack = () => {\n        this.backLogic();\n    }\n\n    handleMaterial =  (material:string)=>{\n         this.props.onMaterialClicked(material);\n        if(!isMobile){\n\n         this.setState({buybtn:true,isMaterialPage:false})\n        \n        console.log(\"heress in material\",material)\n        }\n    }\n\n    render(){\n        const slide = this.props.slides[this.props.slideIndex]\n        return (\n            <div style={{backgroundColor: '#4c4c4c'}} className={`grid-container second-card-background second-grid ${this.state.isCardSelected?'second-grid-selected':''}`}  onMouseMove={this.handleMouseMove}>\n                {!this.state.isCardSelected && !this.state.isMaterialPage && !this.state.buybtn && !this.state.hover &&<div className=\"question\" \n                onClick={() => this.handleSelect(this.state.currentType?this.state.currentType:TYPE.EARRING, 0)} >\n                {this.props.slides[this.props.slideIndex].title}</div>}\n                {this.props.slides[this.props.slideIndex].cards.map((c:Card, index: number)=>{\n                    return (\n                        <div  className={`mini-item ${this.getNe(index)}`} style={{height:(!isSamsungBrowser)&&isMobile?'26.3vh':isMobile?'30.65vh':'100vh',animation: `${!isSamsungBrowser&&isMobile?'mymovesecond-chrome':'mymovesecond'} ${index + 0.5}s`}}>\n                        <CardComponent\n                            mouseText={typeToString(c.type)}\n                            selectedCard={true}\n                            isCardSelected={this.state.isCardSelected}\n                            backgroundImage={c.image}\n                            onMouseMove={(mouseText: string) => {this.setState({mouseText: mouseText})}}\n                            onMouseEnter={()=>{if(!isMobile)this.setState({hover:true})}}\n                            onMouseLeave={()=>{if(!isMobile)this.setState({hover:false})}}\n                            isBuyPage={this.state.step > c.stepsNumber}\n                            isAfterBuyPage={this.props.isAfterBuyPage}\n                            onClick={() => this.handleSelect(c, index)}\n                            isMaterialPage={this.state.isMaterialPage||this.state.buybtn}\n                            cardType={c.type}\n                            buyPage={this.state.buybtn}\n                            />\n                         </div>\n                    )\n                })}\n\n                {this.state.isMaterialPage && <MaterialComponent slider={this.props.slides[this.props.slideIndex]} onClick={this.handleMaterial}\n                />}\n\n                    {this.state.buybtn && !this.props.isAfterBuyPage && <div className='morse-btns'>\n                        <div className=\"buy-morse\" onClick={this.props.buyAction.bind(this)}> BUY <img src={arrow_black} className=\"arrow\"/></div>    \n                    </div>}\n\n\n                {this.state.isCardSelected && (!this.state.isMaterialPage||this.state.buybtn) &&\n                <MorsePage selectEventMobile={this.props.selectMobileButton} \n                buyAction={this.props.buyAction.bind(this)} \n                finishMobileButton={this.state.finishMobileButton}\n                 handleBack={this.handleBack} \n                 handleNext={this.handleNext} \n                 step={this.state.step} \n                 card={slide.cards[this.state.selectedCard]}\n                 isAfterBuyPage={this.props.isAfterBuyPage}\n                 resetMorse={this.state.resetMorse}\n                  onMorseType={this.props.onMorseType.bind(this)}\n                  isBuyPage={this.state.buybtn}\n                  firstChain={this.props.firstChain}\n                  secondChain={this.props.secondChain}\n                   />}\n                {!this.state.isCardSelected &&\n                <div className=\"mouse-movement\" \n                    style={{top:this.state.y-6,left:this.state.mouseDirection ===\"right\"? this.state.x+20:this.state.mouseText.length<13?this.state.x-115: this.state.x-215}}> \n                    {this.state.mouseText}\n                </div>}\n            </div>\n        );\n    }\n\n    getMouseDirection(e:any) {\n        if (this.state.oldX < e.pageX) {\n            this.setState({mouseDirection:\"left\"});\n        } else {\n            this.setState({mouseDirection:\"left\"});\n        }\n        this.setState({oldX:e.pageX});\n    }\n}\n","import Client, { Cart } from 'shopify-buy';\n\nconst client = Client.buildClient({\n    domain: 'ame-dev.myshopify.com',\n    storefrontAccessToken: '275b72ed93cbb3624b17f3f290330364'\n});\n\n// 1. Get products and create lineItems from them \n// https://shopify.github.io/js-buy-sdk/\n// Returns all products\nexport const fetchProducts = (): Promise<Client.Product[]> => {\n    return client.product.fetchAll();\n}\n\n// 2. Create checkout\nexport const createCheckout=(): Promise<Cart> => {\n    return client.checkout.create();\n}\n\nexport const fetchCheckout=(checkoutId: string) => {\n    return client.checkout.fetch(checkoutId);\n}\n\n\nexport const updateLineItems=(checkoutId: string) => {\n\n}\n\n// 3. Add line items to checkout\nexport const addLineItems=(checkoutId: string, lineItems: any): Promise<Client.Cart> => {\n    // const lineItemsToAdd = [{\n    //     variantId: '',\n    //     quantity: 1,\n    //     customAttributes: [{key: \"MyKey\", value: \"MyValue\"}]\n    // }];\n\n    return client.checkout.addLineItems(checkoutId, lineItems);\n}\n\n// 4. Redirect to checkout url after items were added\n\nexport const fetchProductByHandle=(handle: string) => {\n    return client.product.fetchByHandle(handle);\n    // .then((product) => {\n    //     // Do something with the product\n    //     console.log(product);\n    // });\n}\n","import React  from \"react\";\n\nimport './HomePage.scss'\nimport { IReducers } from \"../../../redux/store\";\nimport { connect } from \"react-redux\";\nimport { BottomBar } from \"../../SharedComponents/BottomBar/BottomBar\";\nimport { Types,typeToString, TYPE } from \"../../../models/Interfaces\";\nimport { userChoiceCategoryAction, userChoiceStyleAction, userChoiceMaterialAction } from \"../../../redux/actions/MainAction\";\nimport { RouteComponentProps} from \"react-router\";\nimport {FirstColumnGrid} from \"../../SharedComponents/GridComponent/FirstColumnGrid\";\nimport { SecondColumnGrid } from \"../../SharedComponents/GridComponent/SecondColumnGrid\";\nimport { isMobile, isSamsungBrowser, createPopupWin } from \"../../../assets/Constants\";\nimport arrow from '../../../assets/images/arrow-white.svg';\nimport * as shop from '../../../Services/shopify';\n\ninterface Props {\n    slides:any[],\n    categoryChoice:(category:string)=>void,\n    styleChoice:(style:string)=>void,\n    materialChoice:(material:string)=>void,\n    userChoice:any\n}\n\ninterface State  {\n    slideIndex:number;\n    userChoice:any;\n    chainPriceAndDetails:any|null;\n    cardClicked:boolean;\n    selectClicked:boolean;\n    currentType:string;\n    buttonText:string;\n    hideBottomBar:boolean;\n    showProductDetails:boolean;\n    isAfterBuyPage:boolean;\n    selectedBottom: any;\n    onEdit: boolean;\n    clickedMaterial:boolean;\n    currentMaterial:string;\n    isMaterial:boolean;\n}\n\nexport class HomePage extends React.Component<Props&RouteComponentProps,State>{\n\n    unlisten: any\n\n    constructor(props:Props&RouteComponentProps){\n        super(props);\n        this.state = {slideIndex:0,\n            userChoice:undefined,\n            chainPriceAndDetails:null,\n            cardClicked:false,\n            currentType:'',\n            selectClicked:false,\n            buttonText:'SELECT',\n            hideBottomBar:false,\n            showProductDetails:false,\n            isAfterBuyPage : false,\n            selectedBottom: null,\n            onEdit: false,\n            clickedMaterial:false,\n            currentMaterial:'',\n            isMaterial:false\n        }\n\n    }\n\n\n    resetChain(){\n        this.setState({chainPriceAndDetails:null})\n    }\n    componentDidMount(){\n        this.setState({userChoice:this.props.userChoice});\n        this.unlisten = this.props.history.listen((e, b)=>{\n            if(b ==='POP') {\n            this.resetChain()\n            }\n        })\n    }\n\n    componentWillUnmount(): void {\n        this.unlisten()\n    }\n\n    handleEditBtn = () => {\n        this.setState(prevState => ({...prevState,showProductDetails: false, hideBottomBar: false, onEdit: !prevState.onEdit}))\n    }\n      \n    onBack = () => {\n        this.setState(prevState => ({...prevState, slideIndex: prevState.slideIndex - 1}))\n        this.resetChain();\n    }\n\n     onClick(type:string){\n        this.setState({cardClicked:true,currentType:type})\n        if(!isMobile||(this.state.selectClicked)){\n            if(this.props.slides[this.state.slideIndex].screenType === Types.CATEGORY) {\n                this.props.categoryChoice(type);\n            }\n            if(this.props.slides[this.state.slideIndex].screenType === Types.MATERTIAL){\n                this.props.materialChoice(type);\n            }\n            if(this.props.slides[this.state.slideIndex].screenType === Types.STYLE){\n                this.props.styleChoice(type);\n            }\n            if(this.state.slideIndex < 1 && type !== typeToString(TYPE.NECKLACE)){\n                 this.setState({slideIndex:(this.state.slideIndex+1)})\n            }\n         }\n    }\n\n    handleBottomBarClicked = (value:any)=>{\n        switch(value.keyinput){\n            case \"style\":\n                if(value.value.key === TYPE.NECKLACE){\n                    this.props.categoryChoice(typeToString(value.value.key))\n                    this.props.styleChoice(\"\");\n                    this.setState({slideIndex: 0})\n                }else{\n                    this.props.categoryChoice(typeToString(TYPE.EARRING))\n                    this.props.styleChoice(typeToString(value.value.key));\n                }\n                this.resetChain()\n                this.setState({selectedBottom: value.value.key})\n                break;\n            case \"material\":\n                this.props.materialChoice(typeToString(value.value.key))\n                break;\n        }\n    }\n\n    isTyping = ()=>{\n\n        if(this.state.chainPriceAndDetails){\n            if(this.state.currentType === typeToString(TYPE.IDENTICAL_PAIR)||this.state.currentType === typeToString(TYPE.DISTINCT_PAIR)){\n                if(this.state.chainPriceAndDetails.firstChain.chain.length > 0 ){\n                    \n                    if(this.state.chainPriceAndDetails.secondChain.chain.length > 0 ){\n                        if(this.state.buttonText!=='DONE')\n                        this.setState({buttonText:'DONE'})\n                       return true;\n                    }\n                    if(this.state.buttonText!=='NEXT')\n                        this.setState({buttonText:'NEXT'})\n                    return true;\n                }\n            }else{\n                \n                if(this.state.chainPriceAndDetails.firstChain.chain.length > 0 ){\n                    if(this.state.buttonText!=='DONE')\n                    this.setState({buttonText:'DONE'})\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n\n    buyAction = async ()=>{\n        this.setState({isAfterBuyPage: true,buttonText:'CONTINUE SHOPPING'})\n        let dotHandle, dashHandle;\n        switch (this.props.userChoice.material) {\n            case 'WHITE GOLD':\n                dotHandle = 'white-gold-morse-diamond-dot';\n                dashHandle = 'white-gold-morse-diamond-dash';\n                break;\n            default:\n                dotHandle = 'diamond-dot';\n                dashHandle = 'morse-diamond-dash';\n                break;\n        }\n\n        Promise.all([// shop.fetchProducts(), \n            shop.createCheckout(), \n            shop.fetchProductByHandle('morse-custom-jewelry'),\n            shop.fetchProductByHandle(dotHandle),\n            shop.fetchProductByHandle(dashHandle)\n        ])\n        .then(data => {\n            const checkout: any = data[0];\n            const morseCustomJewelry = data[1];\n            const yellowDot = data[2];\n            const yellowDash = data[3];\n            const variantId = morseCustomJewelry.variants[0].id\n            const yellowDotVariantId = yellowDot.variants[0].id\n            const yellowDashVariantId = yellowDash.variants[0].id\n            \n            // Dummy item with all descriptions\n            const morsecjLineItem: any = {\n                variantId,\n                quantity: 1,\n                customAttributes: [] \n            };\n\n            // If user forgot to select material it will be yellow gold\n            let material = '';\n            if (this.props.userChoice.material) {\n                material = this.props.userChoice.material;\n            } else {\n                material = 'WHITE GOLD';\n            }\n\n            // Lets count dots and dashes\n            let dotsQty = 0, dashesQty = 0;\n            dotsQty = +this.state.chainPriceAndDetails.firstChain.chainPriceAndWord.dotSum;\n            dashesQty = +this.state.chainPriceAndDetails.firstChain.chainPriceAndWord.dashSum;\n\n            // Add description for necklace\n            if (this.props.userChoice.category === 'NECKLACE') {\n                morsecjLineItem.customAttributes.push(\n                    { key: 'Necklace', \n                        value: `${material}. “${this.state.chainPriceAndDetails.firstChain.chain.toUpperCase()}”` \n                    });\n            }\n\n            // Description for earring\n            if (this.props.userChoice.category === 'EARRING') {\n                morsecjLineItem.customAttributes.push(\n                    { key: 'Earring 1', \n                        value: `${material}. “${this.state.chainPriceAndDetails.firstChain.chain.toUpperCase()}”` \n                    });\n                \n                // If there are 2 earrings\n                if (this.props.userChoice.style === 'IDENTICAL PAIR' || this.props.userChoice.style === 'DISTINCT PAIR') {\n                    morsecjLineItem.customAttributes.push(\n                        { key: 'Earring 2', \n                            value: `${material}. “${this.state.chainPriceAndDetails.secondChain.chain.toUpperCase()}”` \n                        });\n                    \n                    // Add some dots\n                    dotsQty += +this.state.chainPriceAndDetails.secondChain.chainPriceAndWord.dotSum;\n                    dashesQty += +this.state.chainPriceAndDetails.secondChain.chainPriceAndWord.dashSum;\n                }\n            }\n\n            // Sum it up\n            const lineItems = [morsecjLineItem, {\n                variantId: yellowDotVariantId,\n                quantity: dotsQty,\n            }, {\n                variantId: yellowDashVariantId,\n                quantity: dashesQty,\n            }];\n            shop.addLineItems(checkout.id.toString(), lineItems)\n            .then(cart => {\n                createPopupWin(checkout.webUrl,\"shopify\",window.innerWidth/2,window.innerHeight/2,window.innerHeight/4,window.innerWidth/4);\n            });\n        });   \n        \n        return true;\n\n    }\n\n    donePhase = ()=>{\n        this.setState({hideBottomBar:true,showProductDetails:true})\n    }\n\n    onMaterialClicked = (material:string)=>{\n\n        if(!isMobile){\n            this.props.materialChoice(material);\n            this.setState({clickedMaterial:true});\n        }\n        this.setState({cardClicked:true})\n        this.setState({currentMaterial:material})\n    }\n\n\n    render(){\n        return (\n\n           \n            <div className=\"container\" style={{height:(!isSamsungBrowser)&&isMobile?'87vh':'100vh'}}>\n\n                <div className=\"version\">v0.2.0</div>\n                <div className=\"logo\"></div>\n                <MobileLoading/>\n                {this.state.slideIndex === 0 ?\n                    <FirstColumnGrid buyAction={this.buyAction.bind(this)} {...this.props} onBack={this.onBack} slideIndex={this.state.slideIndex} slides={this.props.slides}\n                                     onMorseType={(chainPriceAndDetails: any) => {\n                                        //  console.log(\"ABC\",chainPriceAndDetails)\n                                         this.setState({chainPriceAndDetails: chainPriceAndDetails})\n                                     }}\n                                     onEdit={this.state.onEdit}\n                                     isAfterBuyPage={this.state.isAfterBuyPage}\n                                     selectMobileButton={this.state.selectClicked}\n                                     onClick={(type: string) => {this.onClick(type)}}\n                                     selectedBottom={this.state.selectedBottom}\n                                     finishMobile={this.state.buttonText === 'NEXT'||this.state.buttonText === 'DONE'}\n                                     onMaterialClicked={this.onMaterialClicked}\n                                     firstChain={this.state.chainPriceAndDetails?this.state.chainPriceAndDetails.firstChain:{chain:\"\"}}\n                                     secondChain={this.state.chainPriceAndDetails?this.state.chainPriceAndDetails.secondChain:{chain:\"\"}}\n                                     isMaterialPage={this.state.isMaterial}\n                                     /> :\n                    <SecondColumnGrid buyAction={this.buyAction.bind(this)} {...this.props} onBack={this.onBack} slideIndex={this.state.slideIndex} slides={this.props.slides}\n                                      onMorseType={(chainPriceAndDetails: any) => {\n                                          this.setState({chainPriceAndDetails: chainPriceAndDetails})\n                                      }}\n                                      onEdit={this.state.onEdit}\n                                      selectedBottom={this.state.selectedBottom}\n                                      isAfterBuyPage={this.state.isAfterBuyPage}\n                                      selectMobileButton={this.state.selectClicked}\n                                      onClick={(type: string) => {this.onClick(type)}}\n                                      finishMobile={this.state.buttonText === 'NEXT'||this.state.buttonText === 'DONE'}\n                                      onMaterialClicked={this.onMaterialClicked}\n                                      firstChain={this.state.chainPriceAndDetails?this.state.chainPriceAndDetails.firstChain:{chain:\"\"}}\n                                      secondChain={this.state.chainPriceAndDetails?this.state.chainPriceAndDetails.secondChain:{chain:\"\"}}\n                                      isMaterialPage={this.state.isMaterial}\n\n                                      />\n                }  {(!this.state.hideBottomBar||!isMobile||this.state.isAfterBuyPage||!this.state.isMaterial)   && <BottomBar \n                    \n                            className=\"bottom-bar\" \n                            userChoice={this.props.userChoice} \n                            selectedType={(value:any)=>{\n                                                    this.handleBottomBarClicked(value)\n                                                    }}\n                           secret={this.state.chainPriceAndDetails}\n                           getSelected={async (selected:boolean)=>{\n                            await this.setState({selectClicked:selected})\n\n                            \n                               if(!this.isTyping()){\n                                await  this.onClick(this.state.currentType);\n                                this.setState({selectClicked:false,cardClicked:false})\n                               }else{\n                                await this.setState({selectClicked:false});\n                                if(this.state.currentMaterial !== ''){\n                                    this.props.materialChoice(this.state.currentMaterial);\n                                    await this.setState({clickedMaterial:true,isMaterial:true});\n                                    return;\n                                }\n                                if(this.state.buttonText === 'DONE'){\n                                    this.donePhase();\n                                 }\n                                 if(this.state.buttonText === 'CONTINUE SHOPPING'){\n                                    window.location.reload();\n                                 }\n                               }\n                            \n                            }}\n\n                        buttonTextMobile={this.state.buttonText}\n                        cardClicked={this.state.cardClicked||this.isTyping()}/>}\n\n\n                       {(this.state.showProductDetails&&isMobile) && !this.state.isAfterBuyPage && this.state.clickedMaterial &&\n                       \n                       <ProductDetails category={this.props.userChoice.category} \n                       style={this.props.userChoice.style} \n                       material={this.props.userChoice.material}\n                       chainPriceAndDetails={this.state.chainPriceAndDetails} \n                       handleEditBtn={this.handleEditBtn}\n                       buyAction={this.buyAction}/> }\n            </div>\n        );\n    }\n}\n\nconst MobileLoading = React.memo((props) => {\n    return (\n        <div className=\"mobile-loading\">\n            {isMobile && <div className='off-line'>\n                <div className=\"line hidden\"/>\n                <div className=\"line hide-line-mobile\"/>\n                <div className=\"line hide-line-mobile\"/>\n                <div className=\"line\"/>\n                <div className=\"line hide-line-mobile\"/>\n                <div className=\"line hide-line-mobile\"/>\n                <div className=\"line hidden\"/>\n            </div>}\n        </div>\n    );\n})\n\n\nconst ProductDetails = React.memo((props:any) => {\n    return (\n        <div className=\"product-details\">\n        <div className=\"product-item\">{props.category==='NECKLACE'?props.category:props.style}</div>\n        <div className=\"product-item\">{props.material!==''?props.material:'MATERIAL'}</div>\n        <div className=\"product-item\">\n            {props.chainPriceAndDetails.firstChain.chain.toUpperCase()} \n        - {(props.chainPriceAndDetails.firstChain.chainPriceAndWord.length*.1).toFixed(2)}cm \n        {props.chainPriceAndDetails.secondChain.chain!==''?(' '+props.chainPriceAndDetails.secondChain.chain.toUpperCase()+\n        ' - ' +(props.chainPriceAndDetails.secondChain.chainPriceAndWord.length*.1).toFixed(2)+'cm'):''}\n        </div>\n        <div className=\"product-item\">DASH: $980 X{\n        props.chainPriceAndDetails.firstChain.chainPriceAndWord.dashSum+\n        props.chainPriceAndDetails.secondChain.chainPriceAndWord.dashSum} - DOT : $560 X{\n            props.chainPriceAndDetails.firstChain.chainPriceAndWord.dotSum+\n            props.chainPriceAndDetails.secondChain.chainPriceAndWord.dotSum}</div>\n        <div className=\"product-item\">PRICE: ${props.chainPriceAndDetails.firstChain.chainPriceAndWord.totalPrice+\n            props.chainPriceAndDetails.secondChain.chainPriceAndWord.totalPrice}</div>\n        <div className=\"product-item\" style={{textDecoration:\"underline\"}} onClick={props.handleEditBtn}>EDIT</div>\n        <div className=\"buy-morse\" onClick={props.buyAction}> BUY <img src={arrow} className=\"arrow\"/></div>\n    </div>\n    );\n})\n\n\nconst mapStateToProps = (state:IReducers) => {\n    const  {slides,userChoice} = state.mainState;\n    return {\n        slides,userChoice\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch:any) => {\n    \n    return {\n        categoryChoice:(category:string)=>dispatch(userChoiceCategoryAction(category)),\n        styleChoice:(style:string)=>dispatch(userChoiceStyleAction(style)),\n        materialChoice:(material:string)=>dispatch(userChoiceMaterialAction(material)),\n\n    };\n  };\n  \n  export default connect(mapStateToProps,mapDispatchToProps)(HomePage);\n","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch\n  } from 'react-router-dom';\nimport { AppRoutes } from \"./ScreensName\";\nimport HomePage from \"./screens/HomePage/HomePage\";\nimport MorsePage from \"./screens/MorsePage/MorsePage\";\n\n\nexport class Main extends React.Component<{}>{\n\n    constructor(props:any){\n        super(props)\n        // window.screen.orientation.lock(\"natural\");\n\n\n    }\n    getAppRoutes(){\n        return (\n        <Switch >\n            <Route path={AppRoutes.MORSE} component={HomePage} />\n            <Route path={AppRoutes.ROOT} component={HomePage} />\n            <Route path={AppRoutes.CATEGORY} component={HomePage} />\n            <Route path={AppRoutes.STYLE} component={HomePage} />\n        </Switch>\n        )\n    }\n    render(){\n        return (\n            <Router>{this.getAppRoutes()}</Router>\n        );\n    }\n}\n\n","import { Slider, TYPE, Types } from \"../../models/Interfaces\";\nimport { USER_CHOICE, USER_CHOICE_CATEGORY, USER_CHOICE_STYLE, USER_CHOICE_MATERIAL, USER_CHOICE_TYPE } from \"../actions/types\";\n\n\n\n\n\nimport model6 from '../../assets/images/model-9.png';\nimport model7 from '../../assets/images/model-earing.png';\nimport model8 from '../../assets/images/model-necklace.png';\n\n\nimport earring_yellow from '../../assets/images/img-yellow-gold-earring.png';\nimport earring_white from '../../assets/images/img-white-gold-earring.png';\nimport necklace_yellow from '../../assets/images/img-yellow-gold-necklace.png';\nimport necklace_white from '../../assets/images/img-white-gold-necklace.png';\n\nexport interface MainState {\n  slides:Slider[] ;\n  userChoice:any;\n  price:number;\n\n}\n\n\n\n\nconst initState: MainState = {\n    slides: [{\n                cards: [\n                    {image: model7, type: TYPE.EARRING, stepsNumber: 999,  },\n                    {image: model8, type: TYPE.NECKLACE,  stepsNumber: 1, rightNecklaceClass:\"paint-morse-necklace\", leftNecklaceClass: \"\",\n                }\n                ],\n                title: 'WHAT\\'S YOUR CATEGORY?', screenType: Types.CATEGORY,\n                material:{white:necklace_white,yellow:necklace_yellow}\n                },\n                {\n                cards: [\n                    {image: model7, type: TYPE.SINGLE_EARRING, stepsNumber: 1, rightNecklaceClass:\"single-paint-morse\", leftNecklaceClass: \"\"},\n                    {image: model8, type: TYPE.IDENTICAL_PAIR, stepsNumber: 1, rightNecklaceClass:\"second-paint-morse-right\", leftNecklaceClass: \"second-paint-morse-left\", duplicateMorse: true},\n                    {image: model6, type: TYPE.DISTINCT_PAIR, stepsNumber: 2, rightNecklaceClass:\"third-paint-morse-right\", leftNecklaceClass: \"third-paint-morse-left\"}],\n                title: 'WHAT\\'S YOUR STYLE?', screenType: Types.STYLE,\n                material:{white:earring_white,yellow:earring_yellow}\n                }\n        // {cards:[{image:model8,type:TYPE.WHITE_GOLD}\n        //     ,{image:model6,type:TYPE.YELLOW_GOLD}],title:'WHAT\\'S YOUR MATERIAL?',screenType:Types.MATERTIAL}\n           ],\n            userChoice:{\n                category:'',\n                style:'',\n                material:'',\n                chainDetails:{}\n            },\n          price:0\n}\n\nconst MainReducer = (state: MainState = initState, action:any) => {\n  switch (action.type) {\n    case USER_CHOICE_CATEGORY:\n\n    // console.log(\"in category choice\")\n    // const type = action.choice.key;\n        return {...state,userChoice:{...state.userChoice,category:action.choice.userChoice}}\n    case USER_CHOICE_STYLE:\n        return {...state,userChoice:{...state.userChoice,style:action.choice.userChoice}};\n    case USER_CHOICE_MATERIAL:\n        return {...state,userChoice:{...state.userChoice,material:action.choice.userChoice}};\n    case USER_CHOICE_TYPE:\n        console.log(\"action.choice.userChoice  \",action.choice.userChoice)\n        return {...state,userChoice:{...state.userChoice,chainDetails:action.choice.userChoice}};\n\n\n    default:\n      return state;\n  }\n\n};\nexport default MainReducer;\n","import {applyMiddleware, combineReducers, createStore, Reducer} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport MainReducer, { MainState } from './reducers/MainReducer';\n\nexport interface IReducers {\n    mainState: MainState\n}\n\nconst reducers = combineReducers<IReducers>({\n\n    mainState: MainReducer\n});\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nexport default store\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.scss';\nimport { Main } from './components/Main';\nimport { HomePage } from './components/screens/HomePage/HomePage';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nfunction App() {\n  \n  return (\n    <Provider store={store}>\n      \n      <Main/>\n   </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import 'fontsource-roboto';\n\nimport TagManager from 'react-gtm-module';\n\nconst tagManagerArgs = {\n  gtmId: 'GTM-TRS674H'\n}\n\nTagManager.initialize(tagManagerArgs)\n// import './assets/fonts/NEXTMonoPan-Thin.otf';\n// import './assets/fonts'\n// import './assets/fonts'\n// import './assets/fonts'\n// import './assets/fonts'\n// import './assets/fonts'\n// import './assets/fonts'\n// import './assets/fonts'\n\n\n// globalizeLocalizer()\n// import moment from  'moment';\n// import momentLocalizer from 'react-widgets-moment'\n// momentLocalizer()\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}