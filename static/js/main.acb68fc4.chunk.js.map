{"version":3,"sources":["assets/images/arrow-black.svg","assets/images/arrow-white.svg","assets/oval.svg","assets/rectangle.svg","assets/images/drop-down.svg","assets/images/arrow-grey.svg","assets/images/model-earring.png","assets/images/model-earring-4sim.png","assets/images/model-earring-4sim-4edit.png","assets/images/mobile/model-earring.png","assets/images/mobile/model-earring-4sim.png","assets/images/mobile/model-earring-4sim-4edit.png","assets/images/yellow-gold.png","assets/images/white-gold.png","assets/red-oval.svg","assets/red-rectangle.svg","assets/images/model-earrings-identical.png","assets/images/model-earrings-distinct.png","assets/images/model-necklace.png","assets/images/model-earrings-identical-4sim.png","assets/images/model-earrings-distinct-4sim.png","assets/images/model-necklace-4sim.png","assets/images/model-earrings-identical-4sim-4edit.png","assets/images/model-earrings-distinct-4sim-4edit.png","assets/images/model-necklace-4sim-4edit.png","assets/images/mobile/model-earrings-identical.png","assets/images/mobile/model-earrings-distinct.png","assets/images/mobile/model-necklace.png","assets/images/mobile/model-earrings-identical-4sim.png","assets/images/mobile/model-earrings-distinct-4sim.png","assets/images/mobile/model-necklace-4sim.png","assets/images/mobile/model-earrings-identical-4sim-4edit.png","assets/images/mobile/model-earrings-distinct-4sim-4edit.png","assets/images/mobile/model-necklace-4sim-4edit.png","components/ScreensName.ts","models/Interfaces.ts","assets/Constants.ts","components/SharedComponents/MorseTextInput/MorseTextInput.tsx","redux/actions/types.ts","redux/actions/MainAction.ts","components/SharedComponents/BottomBar/BottomBar.tsx","components/SharedComponents/Card/CardComponent.tsx","components/SharedComponents/MorseMenu/MorseMenu.tsx","components/screens/MorsePage/MorsePage.tsx","components/SharedComponents/Material/MaterialComponent.tsx","components/SharedComponents/GridComponent/FirstColumnGrid.tsx","components/SharedComponents/GridComponent/SecondColumnGrid.tsx","Services/shopify.ts","components/screens/HomePage/HomePage.tsx","components/Main.tsx","redux/reducers/MainReducer.ts","redux/store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","AppRoutes","TYPE","Types","ALPHA_TO_MORSE","isMobile","document","documentElement","clientWidth","isSamsungBrowser","test","navigator","userAgent","vendor","match","typeToString","key","WHITE_GOLD","YELLOW_GOLD","EARRING","NECKLACE","DISTINCT_PAIR","IDENTICAL_PAIR","SINGLE_NECKLACE","SINGLE_EARRING","stringToType","stringType","remainingTypes","displayName","GOLD","MorseTextInput","props","handleChange","event","a","target","value","toString","setState","text","dashLength","dotLength","chainLength","indexError","morseSum","dotSum","dashSum","charSum","split","map","c","index","morseChar","toUpperCase","state","forEach","char","onChange","slice","length","totalPrice","join","focus","className","this","style","border","borderColor","autoFocus","ref","input","inputRef","textIndent","hidePlaceholder","Morse","toLocaleUpperCase","React","Component","memo","additionalClass","dangerouslySetInnerHTML","__html","cc","red_circle","circle","red_dash","dash","withSpaces","ActionTypes","toggleSummaryAction","dispatch","type","BottomBar","notSelectedArrayHover","isMenuOpen","isMaterialMobileOpen","isCategoryMobileOpen","isSecretMobileOpen","userChoice","category","selectedType","keyinput","aIsSecondChain","console","log","getSelected","total","secret","firstChain","chainPriceAndWord","secondChain","parseFloat","toFixed","replace","toggleSummary","enableCategory","enableMaterial","material","enablePrice","href","formatTotalPrice","onClick","handleToggleSummary","cardClicked","buttonTextMobile","src","arrow","alt","dropdown_icon","handleClickedItem","window","location","reload","connect","CardComponent","secretStruct","chain","trim","chainCoreLength","chainText4Button","handleClick","isSecondChain","getClassName","isAfterBuyPage","isMaterialPage","getSelectedCardClass","isCardSelected","selectedCard","hover","prevProps","isCenterWoman","isNecklaceMove","cardType","bind","onMouseMove","mouseText","isBuyPage","isMorseEdit","backgroundImage","onMouseEnter","onMouseLeave","displayState","summary","mainState","MorseMenu","onClose","Object","entries","MorseMenuTr","letter","morse","xmlns","width","height","viewBox","cx","cy","r","fill","fillRule","transform","d","val","align","tdKey","MorsePage","handleMouseMove","e","x","clientX","y","clientY","chainDetails","card","duplicateMorse","step","onMorseType","handleBuy","buyAction","isAfterBuy","buttons","enable","enable2","stepsNumber","arrow_black","Fragment","handleNext","arrow_grey","handleBack","getTextMargin","shiftMargin","morseHover","morseMenuOpen","selectEventMobile","finishMobileButton","resetMorse","BackToShop","showOnlyMorseChain","opacity","inputFoucs","MorseChain","rightNecklaceClass","leftNecklaceClass","top","left","defaultProps","DotIcon","DashIcon","calcTop","calcRight","proportionalTop","proportionalRight","ratio","edit","sim","innerWidth","innerHeight","marginTop","marginRight","right","divKey","p","iconIndex","iconKey","slides","typeChoice","choice","MaterialComponent","mouseDirection","hoverWhite","hoverYellow","isNecklace","slider","animation","yellow","white","FirstColumnGrid","unlisten","getMouseDirection","backLogic","buybtn","onBack","history","handleSelect","forceOpen","currentType","currentIndex","push","getNe","prevState","handleFinish","handleMaterial","onMaterialClicked","oldX","selectedBottom","slide","cards","findIndex","then","listen","b","onEdit","selectMobileButton","finishMobile","currentCard","slideIndex","isBuy","title","image","editImage","simImage","buyPage","pageX","SecondColumnGrid","backgroundColor","client","Client","buildClient","domain","storefrontAccessToken","addLineItems","checkoutId","lineItems","checkout","fetchProductByHandle","handle","product","fetchByHandle","HomePage","handleEditBtn","showProductDetails","hideBottomBar","aOnlyResetChain","resetChain","handleBottomBarClicked","categoryChoice","styleChoice","materialChoice","isTyping","chainPriceAndDetails","buttonText","dotHandle","dashHandle","Promise","all","create","shop","data","morseCustomJewelry","yellowDot","yellowDash","variantId","variants","id","yellowDotVariantId","yellowDashVariantId","morsecjLineItem","quantity","customAttributes","dotsQty","dashesQty","cart","pageURL","pageTitle","popupWinWidth","popupWinHeight","webUrl","open","donePhase","clickedMaterial","currentMaterial","closeProductDetails","setSummaryState","undefined","selectClicked","isMaterial","screenType","CATEGORY","MATERTIAL","STYLE","MobileLoading","selected","ProductDetails","handleCloseBtn","productDetailsRef","createRef","useEffect","current","contains","addEventListener","removeEventListener","getMorseCharsCount","aChainPriceAndDetails","aCountDashes","charType","summaryState","aSummaryState","payload","Main","path","MORSE","component","ROOT","getAppRoutes","initState","mobile_model_earring","model_earring","mobile_model_earring_4sim","model_earring_4sim","mobile_model_earring_4sim_4edit","model_earring_4sim_4edit","mobile_model_necklace","model_necklace","mobile_model_necklace_4sim","model_necklace_4sim","mobile_model_necklace_4sim_4edit","model_necklace_4sim_4edit","white_gold","yellow_gold","mobile_model_earrings_identical","model_earrings_identical","mobile_model_earrings_identical_4sim","model_earrings_identical_4sim","mobile_model_earrings_identical_4sim_4edit","model_earrings_identical_4sim_4edit","mobile_model_earrings_distinct","model_earrings_distinct","mobile_model_earrings_distinct_4sim","model_earrings_distinct_4sim","mobile_model_earrings_distinct_4sim_4edit","model_earrings_distinct_4sim_4edit","price","MainReducer","action","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","Boolean","hostname","TagManager","initialize","gtmId","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.acb68fc4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow-black.a51dcbe8.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-white.96831bea.svg\";","module.exports = __webpack_public_path__ + \"static/media/oval.f07768aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/rectangle.a40fabd1.svg\";","module.exports = __webpack_public_path__ + \"static/media/drop-down.d9213db9.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-grey.d3f5960e.svg\";","module.exports = __webpack_public_path__ + \"static/media/model-earring.b57c099a.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earring-4sim.4c76387b.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earring-4sim-4edit.f8075146.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earring.1f2a0683.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earring-4sim.341486ea.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earring-4sim-4edit.0471569d.png\";","module.exports = __webpack_public_path__ + \"static/media/yellow-gold.0c31d9af.png\";","module.exports = __webpack_public_path__ + \"static/media/white-gold.05eadf09.png\";","module.exports = __webpack_public_path__ + \"static/media/red-oval.ddaf0401.svg\";","module.exports = __webpack_public_path__ + \"static/media/red-rectangle.97344bb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/model-earrings-identical.161c5b0d.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earrings-distinct.d292ffa9.png\";","module.exports = __webpack_public_path__ + \"static/media/model-necklace.1c9cb5d4.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earrings-identical-4sim.6ea77ea5.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earrings-distinct-4sim.ff27327b.png\";","module.exports = __webpack_public_path__ + \"static/media/model-necklace-4sim.54334d38.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earrings-identical-4sim-4edit.1582b796.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earrings-distinct-4sim-4edit.0fb5f720.png\";","module.exports = __webpack_public_path__ + \"static/media/model-necklace-4sim-4edit.aa1382cb.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earrings-identical.fa0d345b.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earrings-distinct.ec042851.png\";","module.exports = __webpack_public_path__ + \"static/media/model-necklace.7c793ce3.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earrings-identical-4sim.15af8536.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earrings-distinct-4sim.a4a54641.png\";","module.exports = __webpack_public_path__ + \"static/media/model-necklace-4sim.0163d02d.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earrings-identical-4sim-4edit.01ce392a.png\";","module.exports = __webpack_public_path__ + \"static/media/model-earrings-distinct-4sim-4edit.3b522114.png\";","module.exports = __webpack_public_path__ + \"static/media/model-necklace-4sim-4edit.7dddde04.png\";","export enum AppRoutes {\n    HOME = '/home',\n    STYLE = '/style',\n    CATEGORY = '/category',\n    MORSE = '/morse',\n    ROOT = ''\n  }","export interface Card {\n    image:string;\n    simImage:string;\n    editImage:string;\n    type:TYPE,\n    stepsNumber :number;\n    rightNecklaceClass?: string;\n    leftNecklaceClass?: string;\n    duplicateMorse?: boolean;\n    // material:any;\n  }\n\n\nexport enum TYPE {\n    NECKLACE,\n    EARRING,\n    WHITE_GOLD,\n    YELLOW_GOLD,\n    SINGLE_EARRING,\n    IDENTICAL_PAIR,\n    DISTINCT_PAIR,\n    SINGLE_NECKLACE,\n    GOLD\n}\n\n\nexport enum Types {\n    STYLE,\n    MATERTIAL,\n    CATEGORY\n}\n\n// export enum Category {\n//     NECKLACE,\n//     EARRING\n// }\n\n// export enum Style {\n//     SINGLE_EARRING,\n//     IDENTICAL_PAIR,\n//     DISTINCT_PAIR,\n//     SINGLE_NECKLACE\n// }\n\nexport interface Slider {\n    cards:Card[],\n    title:string,\n    screenType:Types;\n    material:any;\n\n}\n\n\nexport interface ChainDetails {\n    length:number,\n    dashSum:number,\n    dotSum:number,\n    totalPrice:number\n}\n\nexport const  typeToString:any  = (key:TYPE)=> {\n\n   switch(key){\n\n       case TYPE.WHITE_GOLD :\n       return \"WHITE GOLD\"\n\n        case TYPE.YELLOW_GOLD :\n        return \"YELLOW GOLD\"\n\n        case TYPE.EARRING :\n       return \"EARRING\"\n\n        case TYPE.NECKLACE :\n       return \"NECKLACE\"\n\n        case TYPE.DISTINCT_PAIR :\n       return \"DISTINCT PAIR\"\n\n        case TYPE.IDENTICAL_PAIR :\n       return \"IDENTICAL PAIR\"\n\n        case TYPE.SINGLE_NECKLACE :\n       return \"SINGLE NECKLACE\";\n\n        case TYPE.SINGLE_EARRING :\n       return \"SINGLE EARRING\";\n\n       default:\n           return null\n   }\n\n}\n\nexport const  stringToType:any  = (stringType:string)=> {\n\n    switch(stringType){\n        case \"WHITE GOLD\" :\n        return TYPE.WHITE_GOLD\n\n        case \"YELLOW GOLD\" :\n         return TYPE.YELLOW_GOLD\n\n         case \"EARRING\" :\n         return TYPE.EARRING\n\n        case \"NECKLACE\" :\n         return TYPE.NECKLACE\n\n        case \"DISTINCT PAIR\" :\n         return TYPE.DISTINCT_PAIR\n\n        case \"IDENTICAL PAIR\" :\n         return TYPE.IDENTICAL_PAIR\n\n        case \"SINGLE NECKLACE\" :\n         return TYPE.SINGLE_NECKLACE\n\n        case \"SINGLE EARRING\" :\n         return TYPE.SINGLE_EARRING\n\n        default:\n            return TYPE.EARRING\n\n    }\n\n }\n\n\nexport const  remainingTypes:any = (key:TYPE)=> {\n    switch (key) {\n        case TYPE.WHITE_GOLD :\n            return [{key: TYPE.YELLOW_GOLD, displayName: \"YELLOW GOLD\"}];\n        case TYPE.YELLOW_GOLD :\n            return [{key: TYPE.WHITE_GOLD, displayName: \"WHITE GOLD\"}];\n        case TYPE.GOLD :\n            return [{key: TYPE.WHITE_GOLD, displayName: \"WHITE GOLD\"},\n                {key: TYPE.YELLOW_GOLD, displayName: \"YELLOW GOLD\"}];\n        case TYPE.EARRING :\n            return [\n                {key: TYPE.NECKLACE, displayName: \"NECKLACE\"},\n                {key: TYPE.DISTINCT_PAIR, displayName: \"EARRINGS - DISTINCT\"},\n                {key: TYPE.IDENTICAL_PAIR, displayName: \"EARRINGS - IDENTICAL\"},\n                {key: TYPE.SINGLE_EARRING, displayName: \"EARRINGS - SINGLE \"},\n            ];\n        case TYPE.NECKLACE :\n            return [\n                {key: TYPE.DISTINCT_PAIR, displayName: \"EARRINGS - DISTINCT\"},\n                {key: TYPE.IDENTICAL_PAIR, displayName: \"EARRINGS - IDENTICAL\"},\n                {key: TYPE.SINGLE_EARRING, displayName: \"EARRINGS - SINGLE\"},\n            ];\n        case TYPE.DISTINCT_PAIR :\n            return [\n                {key: TYPE.NECKLACE, displayName: \"NECKLACE\"},\n                {key: TYPE.IDENTICAL_PAIR, displayName: \"EARRINGS - IDENTICAL\"},\n                {key: TYPE.SINGLE_EARRING, displayName: \"EARRINGS - SINGLE\"},\n            ];\n        case TYPE.IDENTICAL_PAIR :\n            return [\n                {key: TYPE.NECKLACE, displayName: \"NECKLACE\"},\n                {key: TYPE.DISTINCT_PAIR, displayName: \"EARRINGS - DISTINCT\"},\n                {key: TYPE.SINGLE_EARRING, displayName: \"EARRINGS - SINGLE\"},\n            ];\n        case TYPE.SINGLE_EARRING :\n            return [\n                {key: TYPE.NECKLACE, displayName: \"NECKLACE\"},\n                {key: TYPE.DISTINCT_PAIR, displayName: \"EARRINGS - DISTINCT\"},\n                {key: TYPE.IDENTICAL_PAIR, displayName: \"EARRINGS - IDENTICAL\"},\n            ];\n        default:\n            return {};\n    }\n }\n","declare global {\n    interface Window {\n        chrome: any;\n    }\n}\n\n// declare\n\nexport const ALPHA_TO_MORSE: { [key: string]: string; } = {\n    \"A\": \".-\",\n    \"B\": \"-...\",\n    \"C\": \"-.-.\",\n    \"D\": \"-..\",\n    \"E\": \".\",\n    \"F\": \"..-.\",\n    \"G\": \"--.\",\n    \"H\": \"....\",\n    \"I\": \"..\",\n    \"J\": \".---\",\n    \"K\": \"-.-\",\n    \"L\": \".-..\",\n    \"M\": \"--\",\n    \"N\": \"-.\",\n    \"O\": \"---\",\n    \"P\": \".--.\",\n    \"Q\": \"--.-\",\n    \"R\": \".-.\",\n    \"S\": \"...\",\n    \"T\": \"-\",\n    \"U\": \"..-\",\n    \"V\": \"...-\",\n    \"W\": \".--\",\n    \"X\": \"-..-\",\n    \"Y\": \"-.--\",\n    \"Z\": \"--..\",\n    \" \": \" \"\n};\n\nexport const MORSE_TO_ALPHA = {\n    \".-\": \"A\",\n    \"-...\": \"B\",\n    \"-.-.\": \"C\",\n    \"-..\": \"D\",\n    \".\": \"E\",\n    \"..-.\": \"F\",\n    \"--.\": \"G\",\n    \"....\": \"H\",\n    \"..\": \"I\",\n    \".---\": \"J\",\n    \"-.-\": \"K\",\n    \".-..\": \"L\",\n    \"--\": \"M\",\n    \"-.\": \"N\",\n    \"---\": \"O\",\n    \".--.\": \"P\",\n    \"--.-\": \"Q\",\n    \".-.\": \"R\",\n    \"...\": \"S\",\n    \"-\": \"T\",\n    \"..-\": \"U\",\n    \"...-\": \"V\",\n    \".--\": \"W\",\n    \"-..-\": \"X\",\n    \"-.--\": \"Y\",\n    \"--..\": \"Z\",\n};\n\nexport const MORSE_TO_IMG: any = {\n    '-': `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"8\" viewBox=\"0 0 20 8\">\n    <path fill=\"#FFF\" fill-rule=\"evenodd\" d=\"M978 379H998V387H978z\" transform=\"translate(-978 -379)\"/>\n        </svg>`,\n    '.': `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\">\n            <circle cx=\"972\" cy=\"383\" r=\"4\" fill=\"#FFF\" fill-rule=\"evenodd\" transform=\"translate(-968 -379)\"/>\n        </svg>`\n};\n\nexport const isMobile = document.documentElement.clientWidth < 600;\n\n// const isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);\n\n// const isSafari = /constructor/i.test(window.HTMLElement.toString()) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));\n\n// window.chrome\n// export const  isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime)&&isMobile;\nexport const isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n\n// var isSafari = /constructor/i.test(window.HTMLElement.toString()) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));\n// export const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\n// export const isSafari = (navigator.userAgent.indexOf(\"Safari\") != -1)&&isMobile;\nexport const isSafari = /Safari/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent);\n\n// export const user = navigator.userAgent;\n\nexport const isAndroid = /Android/.test(navigator.userAgent);\n\n\nexport const isSamsungBrowser = navigator.userAgent.match(/SamsungBrowser/i) && isMobile;\n\n\nexport const createPopupWin = (pageURL: string, pageTitle: string,\n                               popupWinWidth: number, popupWinHeight: number, top: number, left: number) => {\n    // var left = (window.screen.width ) ;\n    // var top = (window.screen.height ) ;\n    window.open(pageURL, pageTitle,\n        'resizable=yes, width=' + popupWinWidth\n        + ', height=' + popupWinHeight + ', top='\n        + top + ', left=' + left);\n};\n\n// function lock (orientation) {\n//     // Go into full screen first\n//     if (document.documentElement.requestFullscreen) {\n//       document.documentElement.requestFullscreen();\n//     } else if (document.documentElement.mozRequestFullScreen) {\n//       document.documentElement.mozRequestFullScreen();\n//     } else if (document.documentElement.webkitRequestFullscreen) {\n//       document.documentElement.webkitRequestFullscreen();\n//     } else if (document.documentElement.msRequestFullscreen) {\n//       document.documentElement.msRequestFullscreen();\n//     }\n\n//     // Then lock orientation\n//     screen.orientation.lock(orientation);\n//   }\n","import React from 'react';\nimport './MorseTextInput.scss';\nimport {ALPHA_TO_MORSE, isMobile} from '../../../assets/Constants';\nimport circle from '../../../assets/oval.svg';\nimport dash from '../../../assets/rectangle.svg';\nimport red_circle from '../../../assets/red-oval.svg';\nimport red_dash from '../../../assets/red-rectangle.svg';\nimport {ChainDetails} from '../../../models/Interfaces';\n\nconst MAX_LENGTH = 100;\nexport const DOT_PRICE = 560;\nexport const DASH_PRICE = 980;\n\ninterface Props {\n    className: string;\n    hidePlaceholder?: boolean;\n    onChange: (chain: string, indexError: number, chainDetails: ChainDetails) => void;\n    inputRef: (inputRef: any) => void;\n}\n\ninterface State {\n    text: string;\n    dashLength: number;\n    dotLength: number;\n    chainLength: number;\n    indexError: number;\n    focus: boolean;\n\n}\n\nexport class MorseTextInput extends React.Component<Props, State> {\n\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {text: '', dashLength: 0, dotLength: 0, chainLength: 0, indexError: -1, focus: true};\n    }\n\n    handleChange = async (event: any) => {\n        if (/^(([a-zA-Z]{1,})\\s{0,1})*$/m.test(event.target.value.toString())) {\n            const value: string = event.target.value;\n\n            ///////////////////////\n            await this.setState({text: value, dashLength: 0, dotLength: 0, chainLength: 0, indexError: -1});\n            let morseSum = 0;\n            let dotSum = 0;\n            let dashSum = 0;\n            let charSum = 0;\n            value.split('').map(async (c: string, index) => {\n                const morseChar = ALPHA_TO_MORSE[c.toUpperCase()].split('');\n                if (this.state.indexError === -1)\n                    charSum++;\n\n                if (this.state.indexError === -1)\n                    morseChar.forEach((char) => {\n                        if (this.state.indexError === -1) {\n\n                            if (char === '.') {\n                                this.setState({\n                                    dotLength: this.state.dotLength + 3,\n                                    chainLength: this.state.chainLength + 3,\n                                });\n\n                                morseSum += 3;\n                                dotSum += 1;\n\n                            } else if (char === '-') {\n                                this.setState({\n                                    dashLength: this.state.dashLength + 7,\n                                    chainLength: this.state.chainLength + 7\n                                });\n                                morseSum += 7;\n                                dashSum += 1;\n                            } else if (char === ' ') {\n                                this.setState({chainLength: this.state.chainLength + 2.5});\n                                morseSum += 2.5;\n                            }\n                            if (morseSum > MAX_LENGTH && this.state.indexError === -1) {\n                                this.props.onChange(value.slice(0, charSum), index, {\n                                    length: morseSum,\n                                    dotSum: dotSum,\n                                    dashSum: dashSum,\n                                    totalPrice: (dotSum * DOT_PRICE + dashSum * DASH_PRICE)\n                                });\n                                this.setState({indexError: index});\n                            }\n\n                            this.props.onChange(value.slice(0, charSum), this.state.indexError, {\n                                length: morseSum,\n                                dotSum: dotSum,\n                                dashSum: dashSum,\n                                totalPrice: (dotSum * DOT_PRICE + dashSum * DASH_PRICE)\n                            });\n                        }\n\n                    });\n                return morseChar.join('');\n            }).join('');\n\n            if (value.length === 0) {\n                this.props.onChange(value, -1, {length: 0, dotSum: 0, dashSum: 0, totalPrice: 0});\n            }\n        }\n    };\n\n    render() {\n        return (<div className={\"input-wrapper-all \" + this.props.className}>\n                <div className={\"morse-text-input-div\"} style={{border: 5, borderColor: \"black\"}}>\n                    <input autoFocus={this.state.focus}\n                           ref={(input) => {\n                               this.props.inputRef(input);\n                           }}\n                           style={{textIndent: this.state.text.length < 1 ? '-35vw' : '0'}}\n                           className={\"morse-text-input\"}\n                           value={this.state.indexError === -1 ? this.state.text : this.state.text.slice(0, this.state.indexError)}\n                           onChange={this.handleChange}/>\n                    {this.state.text.length === 0 && !this.props.hidePlaceholder &&\n                    <div className=\"placeholder\">TYPE</div>}\n                    <Morse text={this.state.text} indexError={this.state.indexError}/>\n                </div>\n\n                <div className={\"error-position\" + (this.state.indexError === -1 ? \" invalid-validations\" : '')}>\n                    <div className=\"error-message\">\n                        {`The morse Secret is too long!`.toLocaleUpperCase()}\n                    </div>\n                    {!isMobile && <div className=\"suggestions\">\n                        &nbsp;{` Here are some other suggestions:`.toLocaleUpperCase()}<br/>\n                        {`“be mine” “Love” “Marry me” “Candy”`.toLocaleUpperCase()}\n                    </div>}\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\nexport const Morse = React.memo((props: { text: string, indexError: number, additionalClass?: string, withSpaces?: boolean }) => {\n    return (\n        <div className={`text-span-input ${props.additionalClass}`}\n             dangerouslySetInnerHTML={{\n                 __html: `${\n                     props.text.slice(0, props.indexError !== -1 ? (props.indexError + 1) : props.text.length).split('').map((c: string, index: number) => {\n                         return `<span class=\"span-char-input ${props.text.length < 8 ? '' : props.text.length < 14 ? 'long-text-width' : 'too-long-text-width'}\n                     ${index === props.indexError && props.indexError !== -1 ? \"red\" : ''}\">${c}<span class=\"char\" >${ALPHA_TO_MORSE[c.toUpperCase()].split('').map((cc: string) => {\n\n                             if (cc === '.') {\n                                 if (index === props.indexError && props.indexError !== -1)\n                                     return `<img src=${red_circle} class=\"icon dot-width-input\"  />`;\n                                 return `<img src=${circle} class=\"icon dot-width-input\"  />`;\n                             } else if (cc === '-') {\n                                 if (index === props.indexError && props.indexError !== -1)\n                                     return `<img src=${red_dash} class=\"icon dash-width-input\" />`;\n                                 return `<img src=${dash} class=\"icon dash-width-input\"  />`;\n                             } else if (cc === ' ') {\n                                 return props.withSpaces ? `&nbsp;` : '';\n                             }\n                             return false;\n                         }).join('')}</span></span>`;\n                     }).join('')}`\n             }}>\n        </div>\n    );\n});\n","export const ActionTypes = {\n    USER_CHOICE: 'USER_CHOICE',\n    USER_CHOICE_STYLE: 'USER_CHOICE_STYLE',\n    USER_CHOICE_CATEGORY: 'USER_CHOICE_CATEGORY',\n    USER_CHOICE_MATERIAL: 'USER_CHOICE_MATERIAL',\n    USER_CHOICE_TYPE: 'USER_CHOICE_TYPE',\n    SET_SUMMARY_STATE: 'SET_SUMMARY_STATE',\n    TOGGLE_SUMMARY: 'TOGGLE_SUMMARY',\n}\nexport {}\n","import {Dispatch} from \"redux\";\nimport {ActionTypes} from \"./types\";\nimport {ChainDetails} from \"../../models/Interfaces\";\n\n// import { Dispatch } from 'redux';\nexport {};\n// import { getDriverTrackingPoints, filterDriverTrackingPoints } from '../../Services/DriverTrackingPoint';\n// import { GET_ALL_TRACKING_POINTS } from './types';\n\n\n// export const fetchTrackingPointsAction = () => {\n//   return async (dispatch: Dispatch) => {\n//       try{\n\n\n//     const { data } = await getDriverTrackingPoints();\n//     // console.log(data)\n//     const trackingPoints:any = []\n\n//     data.data.forEach((point:any)=>{\n//         if(point.latitude){\n//             trackingPoints.push(point) ;\n//         }\n//         // return false;\n//     })\n//     dispatch({\n//       type: GET_ALL_TRACKING_POINTS,\n//       trackingPoints:trackingPoints\n//     });\n//     }catch(error){\n//         console.log(error)\n//     }\n\n//   };\n// };\n\n\nexport const userChoiceCategoryAction = (userChoice: string) => {\n    return async (dispatch: Dispatch) => {\n        dispatch({\n            type: ActionTypes.USER_CHOICE_CATEGORY,\n            choice: {userChoice: userChoice}\n        });\n    };\n};\n\nexport const userChoiceStyleAction = (userChoice: string) => {\n    return async (dispatch: Dispatch) => {\n        dispatch({\n            type: ActionTypes.USER_CHOICE_STYLE,\n            choice: {userChoice: userChoice}\n        });\n    };\n};\n\nexport const userChoiceMaterialAction = (userChoice: string) => {\n    return async (dispatch: Dispatch) => {\n        dispatch({\n            type: ActionTypes.USER_CHOICE_MATERIAL,\n            choice: {userChoice: userChoice}\n        });\n    };\n};\n\nexport const userChoiceTypeAction = (chainDetails: ChainDetails) => {\n    return async (dispatch: Dispatch) => {\n        dispatch({\n            type: ActionTypes.USER_CHOICE_TYPE,\n            choice: {userChoice: chainDetails}\n        });\n    };\n};\n\nexport const setSummaryStateAction = (aSummaryState: boolean) => {\n    return async (dispatch: Dispatch) => {\n        dispatch({\n            type: ActionTypes.SET_SUMMARY_STATE,\n            payload: aSummaryState,\n        });\n    };\n};\n\nexport const toggleSummaryAction = () => {\n    return async (dispatch: Dispatch) => {\n        dispatch({\n            type: ActionTypes.TOGGLE_SUMMARY,\n        });\n    };\n};\n","import React from 'react';\n\nimport {isMobile} from '../../../assets/Constants';\nimport {remainingTypes, stringToType, TYPE} from '../../../models/Interfaces';\n\nimport {DOT_PRICE, DASH_PRICE} from '../MorseTextInput/MorseTextInput';\n\nimport './BottomBar.scss';\n\nimport arrow from '../../../assets/images/arrow-black.svg';\nimport dropdown_icon from '../../../assets/images/drop-down.svg';\nimport {connect} from 'react-redux';\nimport {IReducers} from '../../../redux/store';\nimport {toggleSummaryAction} from '../../../redux/actions/MainAction';\n\n\ninterface Props {\n    className?: string;\n    userChoice: any;\n    secret: any;\n    selectedType: (value: any) => void;\n    cardClicked: Boolean;\n    getSelected: (selected: boolean, add?: any) => void;\n    buttonTextMobile: string;\n    toggleSummary: () => void;\n}\n\ninterface State {\n    notSelectedArrayHover: any[];\n    isMenuOpen: boolean;\n    isMaterialMobileOpen: boolean;\n    isCategoryMobileOpen: boolean;\n    isSecretMobileOpen: boolean;\n}\n\nclass BottomBar extends React.Component<Props, State> {\n\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            notSelectedArrayHover: [],\n            isMenuOpen: false,\n            isMaterialMobileOpen: false,\n            isCategoryMobileOpen: false,\n            isSecretMobileOpen: false\n        };\n    }\n\n    componentDidMount(): void {\n        this.setState({\n            notSelectedArrayHover: !this.props.userChoice ? remainingTypes(stringToType('EARRING'))\n                ?\n                this.props.userChoice.style === '' ? remainingTypes(stringToType(this.props.userChoice.category))\n                    : remainingTypes(stringToType(this.props.userChoice.style)) : [] : []\n        });\n    }\n\n    handleClickedItem(c: any, type: string) {\n        this.props.selectedType({value: c, keyinput: type});\n    }\n\n    handleEditSecret(aIsSecondChain = false) {\n        console.log('3333', aIsSecondChain);\n        this.props.getSelected(true, 'bbbb');\n    }\n\n    formatTotalPrice() {\n        const total = this.props.secret.firstChain.chainPriceAndWord.totalPrice +\n            this.props.secret.secondChain.chainPriceAndWord.totalPrice;\n        const formattedTotal = parseFloat(total).toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n        return formattedTotal;\n    }\n\n    handleToggleSummary() {\n        this.props.toggleSummary();\n    }\n\n    render() {\n\n        const enableCategory = this.props.userChoice.category.length !== 0;\n        const enableMaterial = this.props.userChoice.material.length !== 0;\n        const enablePrice = this.props.secret && (this.props.secret.firstChain.chainPriceAndWord.length !== 0);\n\n        return (\n            <div className={`bottom-container ${this.props.className ? this.props.className : ''}`}>\n                {/*<div className={`menu-item  ${!enableCategory ? 'not-active-bottom-item' : ''}`}>\n                    {this.props.userChoice ? this.props.userChoice.category === '' ? 'CATEGORY' : this.props.userChoice.category : 'CATEGORY'}\n                    <span> &nbsp;{this.props.userChoice ? this.props.userChoice.style === '' ? '' : `- ${this.props.userChoice.style}` : ''}</span>\n\n                    {enableCategory && <div className={`dropdown-content category-width `}>\n                        {this.props.userChoice.style ? remainingTypes(stringToType(this.props.userChoice.style)).map((c: any, index: number) => {\n                            return (<div key={index} className=\"sub-menu-item dropdown-content-category\"\n                                         onClick={() => this.handleClickedItem(c, \"style\")}>{c.displayName}</div>);\n                        }) : remainingTypes(stringToType(this.props.userChoice.category)).map((c: any, index: number) => {\n                            return (<div key={index} className=\"sub-menu-item dropdown-content-category\"\n                                         onClick={() => this.handleClickedItem(c, \"style\")}>{c.displayName}</div>);\n                        })}\n                    </div>}\n                </div>\n\n\n                {!this.props.secret && <div className=\"menu-item not-active-bottom-item\">SECRET</div>}\n                {this.props.secret &&\n                <>\n                    <SecretButton secretStruct={this.props.secret.firstChain}\n                                  handleClick={this.handleEditSecret.bind(this)}></SecretButton>\n                    <SecretButton secretStruct={this.props.secret.secondChain}\n                                  isSecondChain={true}\n                                  handleClick={this.handleEditSecret.bind(this)}></SecretButton>\n                </>\n                }\n\n                <div className={`menu-item ${!enableMaterial ? 'not-active-bottom-item' : ''}`}>\n                    {enableMaterial ? this.props.userChoice.material : 'MATERIAL'}\n\n                    {enableMaterial && <div className=\"dropdown-content\">\n                        {enableMaterial ? remainingTypes(stringToType(this.props.userChoice.material)).map((c: any, index: number) => {\n                            return (<div key={index} className=\"sub-menu-item\"\n                                         onClick={() => this.handleClickedItem(c, \"material\")}>{c.displayName}</div>);\n                        }) : remainingTypes(TYPE.GOLD).map((c: any, index: number) => {\n                            return (<div key={index} className=\"sub-menu-item\"\n                                         onClick={() => this.handleClickedItem(c, \"material\")}>{c.displayName}</div>);\n                        })}\n                    </div>}\n                </div>\n                */}\n\n                {!isMobile &&\n                <>\n                    <div className=\"view-summary\">\n                        VIEW SUMMARY\n                    </div>\n                    <div className=\"outsider-anchor\">\n                        <a target=\"blank\" href=\"https://www.google.com/\">TERMS & CONDITIONS</a>\n                    </div>\n                    <div className=\"outsider-anchor\">\n                        <a target=\"blank\" href=\"https://www.ynet.co.il/\">PRIVACY POLICY</a>\n                    </div>\n                </>\n                }\n\n                <div className={`menu-item end-item ${!enablePrice ? 'not-active-bottom-item' : ''}`}>\n                    PRICE: {this.props.secret ? `$${this.formatTotalPrice()}` : '$0'}\n\n                    {enablePrice && <div className=\"price-dropdown\">\n                        <div className=\"price-item\">DASH STONES:&nbsp; <span className=\"price-text\">{DASH_PRICE}</span>\n\n                            <span\n                                className={\"number-of-stones\"}>X{enablePrice ? (this.props.secret.firstChain.chainPriceAndWord.dashSum +\n                                this.props.secret.secondChain.chainPriceAndWord.dashSum\n                            ) : 0}</span></div>\n                        <div className=\"price-item\">\n\n                            DOT STONES:&nbsp;&nbsp;<span className=\"price-text\">{DOT_PRICE}</span>\n                            <span\n                                className={\"number-of-stones\"}>X{enablePrice ? (this.props.secret.firstChain.chainPriceAndWord.dotSum\n                                + this.props.secret.secondChain.chainPriceAndWord.dotSum\n                            ) : 0}</span>\n\n                        </div>\n\n                    </div>}\n                </div>\n\n\n                <div className={`morse-menu-item`}\n                     onClick={() => this.handleToggleSummary()}>\n                    <div className=\"menu-morse\">i</div>\n                </div>\n\n                <div\n                    className={`menu-item-mobile button-position-mobile ${!this.props.cardClicked ? 'select-disable' : ''}`}\n                    onClick={() => {\n                        if (this.props.cardClicked)\n                            this.props.getSelected(true);\n                    }}\n                >\n                    {this.props.buttonTextMobile} <img src={arrow} className=\"arrow\" alt=\"\"/>\n                </div>\n\n                {this.state.isMenuOpen && <div className={`mobile-menu`}>\n                    <div className=\"menu-item-sub\" onClick={enableCategory ? () => {\n                        this.setState({isCategoryMobileOpen: !this.state.isCategoryMobileOpen});\n                        this.setState({isSecretMobileOpen: false});\n                        this.setState({isMaterialMobileOpen: false});\n\n                    } : () => {\n                    }}>\n                        {this.props.userChoice ? this.props.userChoice.category === '' ? 'CATEGORY' : this.props.userChoice.category : 'CATEGORY'}\n                        <span>  {this.props.userChoice ? this.props.userChoice.style === '' ? '' : '-  ' + this.props.userChoice.style : ''}</span>\n                        <img src={dropdown_icon} className=\"dropdown-icon\" alt=\"\"/>\n                    </div>\n                    {this.state.isCategoryMobileOpen && (this.props.userChoice.style ? remainingTypes(stringToType(this.props.userChoice.style)).map((c: any) => {\n                        return (<div className=\"menu-item-sub menu-item-sub-black\" onClick={() => {\n                            this.handleClickedItem(c, \"style\");\n                            window.location.reload();\n                        }}>{c.displayName}</div>);\n                    }) : remainingTypes(stringToType(this.props.userChoice.category)).map((c: any) => {\n                        return (<div className=\"menu-item-sub menu-item-sub-black\" onClick={() => {\n                            this.handleClickedItem(c, \"style\");\n                            window.location.reload();\n                        }}>{c.displayName}</div>);\n                    }))}\n                    <div className=\"menu-item-sub\" onClick={enablePrice ? () => {\n                        this.setState({\n                            isSecretMobileOpen: !this.state.isSecretMobileOpen,\n                            isCategoryMobileOpen: false, isMaterialMobileOpen: false\n                        });\n                    } : () => {\n                    }}>\n                        {this.props.secret ? ((this.props.secret.firstChain.chainPriceAndWord.text).toUpperCase() + ' - ' +\n                            ((this.props.secret.firstChain.chainPriceAndWord.length * .1).toFixed(2) + '  ' +\n                                (this.props.secret.secondChain.chainPriceAndWord.length > 0 ? ((this.props.secret.secondChain.chainPriceAndWord.text).toUpperCase() + ' - ' +\n                                    (this.props.secret.secondChain.chainPriceAndWord.length * .1).toFixed(2) + 'cm') : ''))) : 'SECRET'}\n                        <img src={dropdown_icon} className=\"dropdown-icon\" alt=\"\"/>\n                    </div>\n                    {this.state.isSecretMobileOpen && (\n                        <div className=\"menu-item-sub menu-item-sub-black\" onClick={() => {\n                            console.log(\"edit\");\n                        }}>EDIT</div>\n                    )}\n                    <div className=\"menu-item-sub\" onClick={enableMaterial ? () => {\n                        this.setState({isMaterialMobileOpen: !this.state.isMaterialMobileOpen});\n                        this.setState({isCategoryMobileOpen: false});\n                        this.setState({isSecretMobileOpen: false});\n                    } : () => {\n                    }}>\n                        {this.props.userChoice ? this.props.userChoice.material === '' ? 'MATERIAL' : this.props.userChoice.material : 'MATERIAL'}\n                        <img src={dropdown_icon} className=\"dropdown-icon\" alt=\"\"/>\n                    </div>\n                    {this.state.isMaterialMobileOpen && (this.props.userChoice.material ? remainingTypes(stringToType(this.props.userChoice.material)).map((c: any) => {\n                        return (<div className=\"menu-item-sub menu-item-sub-black\"\n                                     onClick={() => this.handleClickedItem(c, \"material\")}>{c.displayName}</div>);\n                    }) : remainingTypes(TYPE.GOLD).map((c: any) => {\n                        return (<div className=\"menu-item-sub menu-item-sub-black\"\n                                     onClick={() => this.handleClickedItem(c, \"material\")}>{c.displayName}</div>);\n                    }))}\n                </div>}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: IReducers) => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\n    return {\n        toggleSummary: () => dispatch(toggleSummaryAction()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BottomBar);\n\nconst SecretButton = React.memo((props: any) => {\n    if (!props.secretStruct.chain || '' === props.secretStruct.chain.trim()) {\n        return <></>;\n    }\n    const chainCoreLength = (props.secretStruct.chainPriceAndWord.length * .1).toFixed(2);\n    const chainText4Button = `${props.secretStruct.chain.toUpperCase()} - ${chainCoreLength}cm`;\n\n    return (\n        <div className=\"menu-item\">\n            {chainText4Button}\n            <div className=\"dropdown-content\">\n                <div className=\"sub-menu-item\"\n                     onClick={() => props.handleClick(props.isSecondChain)}>\n                    EDIT SECRET\n                </div>\n            </div>\n        </div>\n    );\n});\n\n","import React from 'react';\nimport './CardComponent.scss';\nimport {TYPE} from '../../../models/Interfaces';\nimport {IReducers} from '../../../redux/store';\nimport {connect} from 'react-redux';\nimport {isMobile} from '../../../assets/Constants';\n\ninterface Props {\n    backgroundImage: string;\n    mouseText: string;\n    onMouseMove: Function;\n    onClick: Function;\n    selectedCard: boolean;\n    isCardSelected: boolean;\n    isBuyPage: boolean;\n    isAfterBuyPage: boolean;\n    isMaterialPage: boolean\n    isMorseEdit: boolean\n    onMouseEnter: Function;\n    onMouseLeave: Function;\n    cardType: TYPE;\n    buyPage: boolean;\n    displayState: { summary: boolean };\n}\n\ninterface State {\n    hover: boolean,\n}\n\nclass CardComponent extends React.Component<Props, State> {\n\n    getClassName = () => {\n        if (this.props.isAfterBuyPage)\n            return \"\";\n        if (this.props.isMaterialPage)\n            return \"full-light\";\n        return \"\";\n    };\n\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {hover: false};\n    }\n\n    componentDidUpdate(prevProps: Props) {\n    }\n\n\n    getSelectedCardClass = () => {\n        if (this.props.isCardSelected) {\n            return this.props.selectedCard ? 'full-width' : 'no-width';\n        }\n        return '';\n    };\n\n    render() {\n        const isCenterWoman = this.props.isAfterBuyPage || this.props.isMaterialPage;\n        const isNecklaceMove = this.props.isCardSelected && this.props.cardType === TYPE.NECKLACE;\n\n        return (\n            <div\n                className={`card-wrapper ${this.getSelectedCardClass()} ${this.state.hover ? \"cover\" : \"\"} ` +\n                `${this.props.isMaterialPage ? \"full-light\" : \"\"} ${this.getClassName()}`}\n                onClick={this.props.onClick.bind(this)}\n                onMouseMove={() => this.props.onMouseMove(this.props.mouseText)}>\n\n                <div className=\"layer\"/>\n\n                {!this.state.hover && !this.props.isBuyPage &&\n                <div className='off-line'>\n                    <div className=\"line hidden\"/>\n                    <div className=\"line hide-line-mobile\"/>\n                    <div className=\"line hide-line-mobile\"/>\n                    <div className=\"line\"/>\n                    <div className=\"line hide-line-mobile\"/>\n                    <div className=\"line hide-line-mobile\"/>\n                    <div className=\"line hidden\"/>\n                </div>}\n\n                <div\n                    className={`item-column ${isCenterWoman ? \"center-woman\" : \"\"} ` +\n                    `${isNecklaceMove ? 'necklace-move' : 'other-move'} ` +\n                    `${this.props.isBuyPage ? 'non-dark' : ''} ` +\n                    `${this.props.isMorseEdit ? 'morse-edit' : ''} ` +\n                    `${this.props.isCardSelected ? '' : 'card-selection'}`}\n                    style={{backgroundImage: `url(${this.props.backgroundImage})`,}}\n                    onMouseEnter={() => {\n                        this.setState({hover: true});\n                        this.props.onMouseEnter();\n                    }}\n                    onMouseLeave={() => {\n                        this.setState({hover: false});\n                        this.props.onMouseLeave();\n                    }}>\n                    {!isMobile &&<div className=\"gradiant\"/>}\n                </div>\n\n                { !this.props.displayState.summary &&\n                <div className={`type-mobile ${this.state.hover ? 'selected' : ''}`}>\n                    {this.props.mouseText}\n                </div>}\n            </div>\n\n        );\n    }\n}\nconst mapStateToProps = (state: IReducers) => {\n    const {displayState} = state.mainState;\n    return {\n        displayState\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardComponent);\n","import React from 'react';\nimport './MorseMenu.scss';\nimport {ALPHA_TO_MORSE} from '../../../assets/Constants';\nimport circle from '../../../assets/oval.svg';\nimport dash from '../../../assets/rectangle.svg';\n\ninterface Props {\n    onClose: () => void;\n    className?: string;\n    isMobile: boolean;\n}\n\ninterface State {\n}\n\nexport class MorseMenu extends React.Component<Props, State> {\n\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {hover: false};\n    }\n\n    componentDidUpdate(prevProps: Props) {\n    }\n\n\n    render() {\n        return (\n            <>\n                <div className={`morse-menu-wrapper ${this.props.className}`}>\n                    <div className=\"close-icon\" onClick={() => this.props.onClose()}/>\n                    { !this.props.isMobile && <div className=\"list-wrapper\">\n                        <table>\n                            <tbody>\n                            {Object.entries(ALPHA_TO_MORSE).map(([key, value]) => {\n                                return (<MorseMenuTr key={key} letter={key} morse={value}></MorseMenuTr>);\n                            })}\n                            </tbody>\n                        </table>\n                    </div> }\n\n\n                     { this.props.isMobile && <div className=\"list-wrapper-mobile\">\n                        <table className=\"column-chars\">\n                            <tbody>\n                            {Object.entries(ALPHA_TO_MORSE).slice(0, 13).map(([key, value]) => {\n                                return (<MorseMenuTr key={key} letter={key} morse={value}></MorseMenuTr>);\n                            })}\n                            </tbody>\n                        </table>\n                        <table className=\"column-chars\">\n                            <tbody>\n                            {Object.entries(ALPHA_TO_MORSE).slice(13, 26).map(([key, value]) => {\n                                return (<MorseMenuTr key={key} letter={key} morse={value}></MorseMenuTr>);\n                            })}\n                            </tbody>\n                        </table>\n                    </div> }\n\n                    <div className=\"bottom-bar-menu\">\n                        <div className=\"bottom-bar-menu-item\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"7\" height=\"7\" viewBox=\"0 0 8 8\">\n                                <circle cx=\"972\" cy=\"383\" r=\"4\" fill=\"#FFF\" fillRule=\"evenodd\"\n                                        transform=\"translate(-968 -379)\"/>\n                            </svg>\n\n                            &nbsp;$560\n                        </div>\n                        <div className=\"bottom-bar-menu-item\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"8\" viewBox=\"0 0 20 8\">\n                                <path fill=\"#FFF\" fillRule=\"evenodd\" d=\"M978 379H998V387H978z\"\n                                      transform=\"translate(-978 -379)\"/>\n                            </svg>\n                            &nbsp;$980\n                        </div>\n                    </div>\n                </div>\n                <div className={`full-screen-menu ${this.props.className}`} onClick={() => this.props.onClose()}></div>\n            </>\n        );\n\n    }\n}\n\nconst MorseMenuTr = React.memo((props: { letter: string, morse: string }) => {\n    if (props.morse) {\n        let val = props.morse.toString();\n\n        return (\n            <tr className=\"list-morse\">\n                <td align=\"left\">\n                    <span>{props.letter}</span>\n                </td>\n                <td align=\"left\">\n                    <span className=\"code\">\n                         {\n                             val.split('').map((c: any, index) => {\n                                 const tdKey = `${props.letter}:td:${index}`;\n                                 if (c === '.') {\n                                     return <img key={tdKey} src={`${circle}`} className=\"icon-menu\" alt=\"\"/>;\n                                 } else if (c === '-') {\n                                     return <img key={tdKey} src={`${dash}`} className=\"icon-menu dash-width\" alt=\"\"/>;\n                                 }\n                                 return null;\n                             })\n                         }\n                    </span>\n                </td>\n            </tr>);\n    }\n    return null;\n});\n","import React from \"react\";\n\nimport './MorsePage.scss';\nimport {IReducers} from \"../../../redux/store\";\nimport {connect} from \"react-redux\";\nimport {MorseMenu} from \"../../SharedComponents/MorseMenu/MorseMenu\";\nimport {Morse, MorseTextInput} from \"../../SharedComponents/MorseTextInput/MorseTextInput\";\nimport circle from '../../../assets/oval.svg';\nimport {ALPHA_TO_MORSE, isMobile, isSamsungBrowser} from \"../../../assets/Constants\";\nimport {userChoiceTypeAction} from \"../../../redux/actions/MainAction\";\n\nimport arrow from '../../../assets/images/arrow-white.svg';\nimport arrow_grey from '../../../assets/images/arrow-grey.svg';\nimport arrow_black from '../../../assets/images/arrow-black.svg';\nimport {Card, ChainDetails} from \"../../../models/Interfaces\";\n\ninterface Props {\n    userChoice: any;\n    // typeChoice:(type:string)=>void;\n    onMorseType: (chainPriceAndWord: any) => void;\n    card: Card;\n    step: number;\n    handleBack: () => void;\n    handleNext: () => void;\n    finishMobileButton: boolean;\n    buyAction: Function;\n    selectEventMobile: boolean;\n    isAfterBuyPage: boolean;\n    resetMorse: boolean;\n    isBuyPage: boolean;\n    showOnlyMorseChain?: boolean;\n    firstChain: any;\n    secondChain: any;\n    // inputRef:()\n}\n\ninterface State {\n    morseHover: boolean;\n    x: number;\n    y: number;\n    morseMenuOpen: boolean;\n    isAfterBuy: boolean;\n    firstChain: {\n        chain: string;\n        chainPriceAndWord: any;\n        indexError: number;\n    },\n    secondChain: {\n        chain: string;\n        chainPriceAndWord: any;\n        indexError: number;\n    }\n\n}\n\nexport class MorsePage extends React.Component<Props, State> {\n    public static defaultProps = {\n        showOnlyMorseChain: false\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            morseHover: false,\n            x: 0,\n            y: 0,\n            morseMenuOpen: false,\n            isAfterBuy: false,\n            firstChain: {\n                chain: '',\n                indexError: -1,\n                chainPriceAndWord: {text: '', length: 0, totalPrice: 0, dashSum: 0, dotSum: 0}\n            },\n            secondChain: {\n                chain: '',\n                indexError: -1,\n                chainPriceAndWord: {text: '', length: 0, totalPrice: 0, dashSum: 0, dotSum: 0}\n            },\n        };\n    }\n\n\n    handleMouseMove = (e: any) => {\n        this.setState({\n            x: e.clientX,\n            y: e.clientY\n        });\n    };\n\n    handleChange = async (chain: string, indexError: number, chainDetails: ChainDetails) => {\n\n        const chainPriceAndWord = {\n            text: chain,\n            length: chainDetails.length,\n            totalPrice: chainDetails.totalPrice,\n            dashSum: chainDetails.dashSum,\n            dotSum: chainDetails.dotSum\n        };\n\n        if (this.props.card.duplicateMorse) {\n            await this.setState({\n                secondChain: {chain, indexError, chainPriceAndWord},\n                firstChain: {chain, indexError, chainPriceAndWord}\n            });\n\n        } else {\n            if (this.props.step === 1) {\n                await this.setState({firstChain: {chain, indexError, chainPriceAndWord}});\n            } else {\n                await this.setState({secondChain: {chain, indexError, chainPriceAndWord}});\n            }\n\n        }\n        this.props.onMorseType(this.state);\n\n    };\n\n    handleBuy = () => {\n        this.props.buyAction();\n        this.setState({isAfterBuy: true});\n    };\n\n\n    componentDidUpdate(prevProps: Props) {\n        if (prevProps.selectEventMobile !== this.props.selectEventMobile && isMobile) {\n            if (this.props.finishMobileButton) {\n                this.props.handleNext();\n            }\n        }\n\n\n        if (this.props.resetMorse) {\n            this.setState({\n                morseHover: false,\n                x: 0,\n                y: 0,\n                morseMenuOpen: false,\n                isAfterBuy: false,\n                firstChain: {\n                    chain: '',\n                    indexError: -1,\n                    chainPriceAndWord: {text: '', length: 0, totalPrice: 0, dashSum: 0, dotSum: 0}\n                },\n                secondChain: {\n                    chain: '',\n                    indexError: -1,\n                    chainPriceAndWord: {text: '', length: 0, totalPrice: 0, dashSum: 0, dotSum: 0}\n                },\n            });\n        }\n    }\n\n    buttons = () => {\n\n        const enable: boolean = this.state.firstChain.chain.length > 0 && (this.state.firstChain.indexError === -1 && this.state.secondChain.indexError === -1);\n        const enable2: boolean = this.props.card.stepsNumber === 2 ? this.state.secondChain.chain.length > 0 && (this.state.secondChain.indexError === -1 && this.state.secondChain.indexError === -1) : true;\n        if (this.props.step > this.props.card.stepsNumber)\n            return <div className=\"buy-morse\" onClick={this.handleBuy}>\n                BUY <img src={arrow_black} className=\"arrow\" alt=\"\"/>\n            </div>;\n        return <React.Fragment>\n            {this.props.step === this.props.card.stepsNumber ?\n                <div className={`${enable && enable2 ? 'next' : 'next-disable'}`}\n                     onClick={enable && enable2 ? this.props.handleNext : () => {\n                     }}>\n                    DONE\n                    <img src={enable && enable2 ? arrow : arrow_grey} className=\"arrow\" alt=\"\"/>\n                </div> :\n                <div onClick={enable ? this.props.handleNext : () => {\n                }}\n                     className={`${enable ? 'next' : 'next-disable'}`}>\n                    NEXT EAR\n                    <img src={enable ? arrow : arrow_grey} className=\"arrow\" alt=\"\"/>\n                </div>}\n            {<div\n                className=\"back\"\n                onClick={this.props.handleBack}>\n                <img src={arrow}\n                     className=\"arrow left-arrow\" alt=\"\"/> BACK </div>}\n        </React.Fragment>;\n    };\n\n    inputFoucs(inputRef: any) {\n        if (inputRef && !this.state.morseMenuOpen)\n            inputRef.focus();\n    }\n\n    getTextMargin = () => {\n        return 0;\n    };\n\n\n    shiftMargin = () => {\n        return 0;   // this.props.isBuyPage && !isMobile ? '25vw' : 0;\n    };\n\n\n    render() {\n        const isMorseEdit = (this.props.step === 1) || (this.props.step === 2 && this.props.card?.stepsNumber === 2);\n\n        return (\n            <div\n                className={`container-morse${this.props.card?.stepsNumber === 2 ? \" container-morse-mini-text\" : \"\"}` +\n                `${isMorseEdit ? \" morse-edit\" : \"\"} ${isMobile ? \" mobile\" : \"\"}`}\n                style={{\n                    height: (!isSamsungBrowser) && isMobile ? '87vh' : '100vh'\n                }}>\n                {/*<div>{`2222-${String(this.props.step)}-${String(this.props.card.stepsNumber)}-${String(this.props.isAfterBuyPage)}`}</div>*/}\n                {this.state.isAfterBuy || this.props.isAfterBuyPage ? <BackToShop/> :\n                    <React.Fragment>\n                        {!this.props.isBuyPage && !this.props.showOnlyMorseChain &&\n                        <div className=\"question\"\n                             style={{opacity: this.state.firstChain.chain.length < 1 ? 1 : .4}}>\n                            WHAT'S YOUR SECRET?\n                        </div>}\n                        {!this.props.showOnlyMorseChain && <div className=\"morse-texts\">\n                            {this.props.step === 2 && this.props.card?.stepsNumber !== 1 &&\n                            <div className='first-morse'>\n                                <Morse text={this.state.firstChain.chain} indexError={30}/>\n                            </div>}\n                            {<MorseTextInput hidePlaceholder={false} inputRef={this.inputFoucs.bind(this)}\n                                             className={`morse-input ${this.props.step === 1 ? '' : 'display-none'}`}\n                                             onChange={this.handleChange}/>}\n                            {this.props.card?.stepsNumber !== 1 &&\n                            <MorseTextInput inputRef={this.inputFoucs.bind(this)} hidePlaceholder={true}\n                                            className={`morse-input ${this.props.step === 2 ? '' : ' display-none'}`}\n                                            onChange={this.handleChange}/>}\n                        </div>}\n\n                        <MorseChain\n                            card={this.props.card}\n                            className={this.props.card.rightNecklaceClass}\n                            getTextMargin={this.getTextMargin}\n                            shiftMargin={this.shiftMargin}\n                            chain={this.props.firstChain ? this.props.firstChain.chain : \"\"}\n                            indexError={this.props.firstChain.indexError}\n                            step={this.props.step}\n                        />\n\n                        <MorseChain\n                            card={this.props.card}\n                            className={this.props.card.leftNecklaceClass}\n                            getTextMargin={this.getTextMargin}\n                            shiftMargin={this.shiftMargin}\n                            chain={this.props.secondChain ? this.props.secondChain.chain : \"\"}\n                            indexError={this.props.secondChain.indexError}\n                            step={this.props.step}\n                        />\n\n                        {!this.props.showOnlyMorseChain && <div className='morse-btns'>{this.buttons()}</div>}\n                        {!this.props.showOnlyMorseChain && !this.props.isBuyPage &&\n                        <div className={\"morse-menu-icon\"}\n                             onMouseEnter={() => this.setState({morseHover: true})}\n                             onMouseLeave={() => this.setState({morseHover: false})}\n                             onMouseMove={this.handleMouseMove} onClick={() => {\n                            this.setState({morseMenuOpen: true});\n                        }}/>}\n\n\n                        {!this.props.showOnlyMorseChain &&\n                        <MorseMenu className={this.state.morseMenuOpen ? '' : 'hide-menu'}\n                                   isMobile={isMobile}\n                                   onClose={() => {\n                                       this.setState({morseMenuOpen: false});\n                                   }}/>}\n                    </React.Fragment>}\n\n\n                {this.state.morseHover && <div className=\"mouse-movement\"\n                                               style={{top: this.state.y - 6, left: this.state.x - 190}}>\n                    MORSE GUIDE\n                </div>}\n            </div>\n        );\n    }\n}\n\nconst DotIcon = React.memo((props: any) => {\n    return (\n        <svg className='morse-char dot-icon' xmlns=\"http://www.w3.org/2000/svg\" width=\"4\" height=\"4\" viewBox=\"0 0 4 4\">\n            <circle cx=\"4\" cy=\"4\" r=\"2\" fillRule=\"evenodd\"\n                    transform=\"translate(-2 -2)\"/>\n        </svg>\n\n    );\n});\nconst DashIcon = React.memo((props: any) => {\n    return (\n        <svg className='morse-char dash-svg' width=\"4\" height=\"12\">\n            <rect width=\"4\" height=\"12\"/>\n        </svg>\n\n    );\n});\n\nconst mapStateToProps = (state: IReducers) => {\n    const {slides, userChoice} = state.mainState;\n    // console.log(\"userChoice\",userChoice)\n    return {\n        slides, userChoice\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\n    return {\n        typeChoice: (type: ChainDetails) => dispatch(userChoiceTypeAction(type)),\n\n    };\n};\n\n\nconst BackToShop = React.memo((props) => {\n\n    return (\n        <div className=\"back-to-shop-card\">\n            {!isMobile && <Morse text={\"THANK YOU\"} indexError={30} additionalClass={\"thank-you\"} withSpaces={true}/>}\n            {isMobile &&\n            <>\n                <Morse text={\"THANK\"} indexError={30} additionalClass={\"thank-you\"}/>\n                <Morse text={\"YOU\"} indexError={30} additionalClass={\"thank-you\"}/>\n            </>}\n            <div className=\"description\">YOU WERE REDIRECTED TO THE PAYMENT PAGE TO COMPLETE YOUR ORDER</div>\n            <div onClick={() => window.location.reload()} className=\"back-to-shop\">\n                CONTINUE SHOPPING\n                <img src={arrow} className=\"arrow\" alt=\"\"/>\n            </div>\n        </div>\n    );\n});\n\nconst MorseChain = React.memo((props: any) => {\n    const isMorseEdit = (props.step === 1) || (props.step === 2 && props.card.stepsNumber === 2);\n\n    let calcTop = 0;\n    let calcRight = 0;\n    let proportionalTop = 0;\n    let proportionalRight = 0;\n    switch (props.className) {\n        case 'single-paint-morse':\n            if (isMobile) {\n                if (isMorseEdit) {\n                    calcTop = 25.5;\n                    proportionalRight = -27;\n                } else {\n                    calcTop = 21;\n                    proportionalRight = -4 ;\n                }\n            } else {\n                if (isMorseEdit) {\n                    calcRight = 17;\n                    proportionalTop = -6;\n                } else {\n                    calcTop = 37;\n                    proportionalRight = -0.5;\n                }\n            }\n            break;\n        case 'second-paint-morse-right':\n            if (isMobile) {\n                if (isMorseEdit) {\n                    calcTop = 18.8;\n                    proportionalRight = -5.3;\n                } else {\n                    calcTop = 33;\n                    proportionalRight = -16.8;\n                }\n            } else {\n                if (isMorseEdit) {\n                    calcRight = 9.3;\n                    proportionalTop = -6;\n                } else {\n                    calcTop = isMobile ? 42 : 41;\n                    proportionalRight = isMobile ? 5.4 : 6;\n                }\n            }\n            break;\n        case 'second-paint-morse-left':\n            if (isMobile) {\n                if (isMorseEdit) {\n                    calcTop = 18.8;\n                    proportionalRight = -32.6;\n                } else {\n                    calcTop = 33;\n                    proportionalRight = 18.4;\n                }\n            } else {\n                if (isMorseEdit) {\n                    calcRight = 23.3;\n                    proportionalTop = -6;\n                } else {\n                    calcTop = isMobile ? 42 : 41;\n                    proportionalRight = isMobile ? -6.2 : -6.7;\n                }\n            }\n            break;\n        case 'third-paint-morse-right':\n            if (isMobile) {\n                if (isMorseEdit) {\n                    calcTop = 25.8;\n                    proportionalRight = -27.2;\n                } else {\n                    calcTop = 15;\n                    proportionalRight = 7;\n                }\n            } else {\n                if (isMorseEdit) {\n                    calcRight = 17;\n                    proportionalTop = -6;\n                } else {\n                    calcTop = 38;\n                    proportionalRight = 1.1;\n                }\n            }\n            break;\n        case 'third-paint-morse-left':\n            if (isMobile) {\n                if (isMorseEdit) {\n                    calcTop = 24.7;\n                    proportionalRight = -25.4;\n                } else {\n                    calcTop = 13.9;\n                    proportionalRight = 9.2;\n                }\n            } else {\n                if (isMorseEdit) {\n                    calcRight = 17.7;\n                    proportionalTop = -7;\n                } else {\n                    calcTop = 37;\n                    proportionalRight = 1.6;\n                }\n            }\n            break;\n        case 'paint-morse-necklace':\n            if (isMobile) {\n                if (isMorseEdit) {\n                    calcTop = 32;\n                    proportionalRight = -26.2;\n                } else {\n                    calcTop = 34;\n                    proportionalRight = 0;\n                }\n            } else {\n                if (isMorseEdit) {\n                    calcRight = 16.7;\n                    proportionalTop = 8.4;\n                } else {\n                    calcTop = 62;\n                    proportionalRight = 0;\n                }\n            }\n            break;\n        default :\n            break;\n    }\n\n    const desktopRatios = {edit: (1690 / 2670), sim: (1570 / 3070)};\n    const mobileRatios = {edit: (2604 / 1500), sim: (2601 / 1500)};\n    const ratio = (isMobile ? mobileRatios : desktopRatios)[isMorseEdit ? 'edit' : 'sim'];\n    calcTop = !calcTop ? 50 + window.innerWidth * ratio * (proportionalTop) / window.innerHeight : calcTop;\n    calcRight = !calcRight ? 50 + window.innerHeight / ratio * (proportionalRight) / window.innerWidth : calcRight;\n\n    return (\n        <div className=\"background-morse-wrapper\">\n            <div className={`paint-morse ${props.className} ${isMorseEdit ? '' : 'no-morse-edit'} `}\n                 style={\n                     {\n                         marginTop: `${props.getTextMargin()}px`,\n                         marginRight: props.shiftMargin(),\n                         top: `${calcTop}%`,\n                         right: `${calcRight}%`\n                     }\n                 }>\n                <div className='morse-border'>\n                    {props.chain.split('').map((c: string, index: any) => {\n                        const divKey = `${c}:${index}`;\n                        return <div key={divKey}\n                                    className={`tasti ${props.indexError === index ? 'red-morse-fill' :\n                                        ''} `}>\n                            {ALPHA_TO_MORSE[c.toUpperCase()].split('').map((p, iconIndex) => {\n                                const iconKey = `${divKey}:${iconIndex}`;\n                                if (p === '.')\n                                    return <DotIcon key={iconKey} fill={index === props.chain.split('').length - 1}/>;\n                                else if (p === '-')\n                                    return <DashIcon key={iconKey} fill={index === props.chain.split('').length - 1}/>;\n                                else\n                                    return '';\n                            })}\n                        </div>;\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MorsePage);\n","import React from 'react';\nimport './MaterialComponent.scss';\nimport {isMobile, isSamsungBrowser} from '../../../assets/Constants';\nimport {Slider, TYPE} from '../../../models/Interfaces';\nimport {IReducers} from '../../../redux/store';\nimport {connect} from 'react-redux';\n\ninterface Props {\n    slider: Slider;\n    onClick: Function;\n    displayState: { summary: boolean };\n}\n\ninterface State {\n    x: number;\n    y: number;\n    mouseDirection: string;\n    text: string;\n    hoverWhite: boolean;\n    hoverYellow: boolean;\n}\n\nclass MaterialComponent extends React.Component<Props, State> {\n\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {x: 0, y: 0, mouseDirection: \"left\", text: \"\", hoverWhite: false, hoverYellow: false};\n    }\n\n    handleMouseMove = (e: any, text: string) => {\n\n        this.setState({\n            x: e.clientX,\n            y: e.clientY,\n            text: text\n        });\n    };\n\n    render() {\n        const isNecklace = TYPE.NECKLACE === this.props.slider.material.type;\n\n        return (\n            <div className=\"material-page\">\n                <div className=\"grid-container first-card-background bb\">\n                    {!this.state.hoverWhite && !this.state.hoverYellow &&\n                    <div className=\"main-material-title\"> {'What’s your Material?'.toUpperCase()} </div>}\n\n                    <div className={`mini-item ${this.state.hoverWhite ? \"cover\" : \"mini-item-material\"}`}\n                         onMouseMove={(e) => this.handleMouseMove(e, \"YELLOW GOLD\")}\n                         style={{\n                             height: (!isSamsungBrowser && isMobile) ? '78.9vh' : '100%',\n                             animation: `${!isSamsungBrowser && isMobile ? 'mymove-chrome' : 'mymove'} 1s`,\n                         }}\n                         onClick={() => this.props.onClick(\"YELLOW GOLD\")}\n                         onMouseEnter={() => this.setState({hoverWhite: true})}\n                         onMouseLeave={() => this.setState({hoverWhite: false})}>\n                        <img src={this.props.slider.material.yellow}\n                             className={`material-image ${isNecklace ? 'necklace' : ''} ${this.state.hoverWhite ? 'selected' : ''}`}\n                             alt=\"\"/>\n                        {isMobile && !this.props.displayState.summary &&\n                        <div className={`type-mobile-material ${this.state.hoverWhite ? 'selected' : ''}`}>\n                            YELLOW GOLD\n                        </div>}\n                    </div>\n\n                    <div className={`mini-item ${this.state.hoverYellow ? \"cover\" : \"mini-item-material\"}`}\n                         onMouseMove={(e) => this.handleMouseMove(e, \"WHITE GOLD\")}\n                         style={{\n                             height: (!isSamsungBrowser && isMobile) ? '78.9vh' : '100%',\n                             animation: `${!isSamsungBrowser && isMobile ? 'mymove-chrome' : 'mymove'} 1s`,\n                         }}\n                         onClick={() => this.props.onClick(\"WHITE GOLD\")}\n                         onMouseEnter={() => this.setState({hoverYellow: true})}\n                         onMouseLeave={() => this.setState({hoverYellow: false})}>\n                        <img src={this.props.slider.material.white}\n                             className={`material-image ${isNecklace ? 'necklace' : ''} ${this.state.hoverYellow ? 'selected' : ''}`}\n                             alt=\"\"/>\n\n                        {isMobile && !this.props.displayState.summary &&\n                        <div className={`type-mobile-material ${this.state.hoverYellow ? 'selected' : ''}`}>\n                            WHITE GOLD\n                        </div>}\n                    </div>\n\n\n                    {(this.state.hoverWhite || this.state.hoverYellow) &&\n                    <div className=\"mouse-movement\"\n                         style={{\n                             top: this.state.y - 6,\n                             left: this.state.mouseDirection === \"right\" ? this.state.x + 25 : this.state.text.length < 13 ? this.state.x - 200 : this.state.x - 295\n                         }}>\n                        {this.state.text}\n                    </div>}\n                </div>\n            </div>\n        );\n\n    }\n}\n\nconst mapStateToProps = (state: IReducers) => {\n    const {displayState} = state.mainState;\n    return {\n        displayState\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MaterialComponent);\n","import React from 'react';\nimport CardComponent from '../Card/CardComponent';\nimport {Card, TYPE, typeToString} from '../../../models/Interfaces';\nimport MorsePage from '../../screens/MorsePage/MorsePage';\nimport {RouteComponentProps} from \"react-router\";\nimport {isMobile, isSamsungBrowser} from '../../../assets/Constants';\nimport MaterialComponent from '../Material/MaterialComponent';\nimport arrow_black from '../../../assets/images/arrow-black.svg';\nimport './ColumnGrid.scss';\nimport {IReducers} from '../../../redux/store';\nimport {connect} from 'react-redux';\n\ninterface Props {\n    slides: any;\n    onClick: Function;\n    slideIndex: number;\n    onMorseType: (chainPriceAndWord: any) => void;\n    onBack: Function;\n    selectMobileButton: boolean;\n    finishMobile: boolean;\n    buyAction: Function;\n    isAfterBuyPage: boolean;\n    selectedBottom: any,\n    onEdit: boolean;\n    onMaterialClicked: Function;\n    firstChain: any;\n    secondChain: any;\n    isMaterialPage: boolean;\n    displayState: { summary: boolean };\n}\n\ninterface State {\n    x: number;\n    y: number;\n    mouseText: string;\n    mouseDirection: string;\n    oldX: number;\n    isCardSelected: boolean;\n    selectedCard: number;\n    step: number\n    currentType: any;\n    currentIndex: number;\n    finishMobileButton: boolean;\n    resetMorse: boolean;\n    isMaterialPage: boolean;\n    buybtn: boolean;\n    hover: boolean;\n}\n\nclass FirstColumnGrid extends React.Component<Props & RouteComponentProps, State> {\n    unlisten: any;\n\n    constructor(props: Props & RouteComponentProps) {\n        super(props);\n        this.state = {\n            step: 1,\n            isCardSelected: false,\n            selectedCard: -1,\n            x: 0, y: 0, mouseText: '',\n            mouseDirection: 'left',\n            oldX: 0,\n            currentType: null,\n            currentIndex: -1,\n            finishMobileButton: false,\n            resetMorse: false,\n            isMaterialPage: false, buybtn: false,\n            hover: false\n        };\n    }\n\n    handleMouseMove = (e: any) => {\n        this.setState({\n            x: e.clientX,\n            y: e.clientY\n        });\n        this.getMouseDirection(e);\n    };\n\n    componentDidMount(): void {\n        if (this.props.selectedBottom !== null) {\n            const slide = this.props.slides[0];\n            const index = slide.cards.findIndex((c: Card) => c.type === this.props.selectedBottom);\n            if (slide.cards[index]) {\n                this.handleSelect(slide.cards[index], index, true).then();\n            }\n        }\n\n\n        this.unlisten = this.props.history.listen((e, b) => {\n            if (b === 'POP') {\n                this.backLogic();\n            }\n        });\n    }\n\n    componentWillUnmount(): void {\n        this.unlisten();\n    }\n\n    componentDidUpdate(prevProps: Props) {\n\n        if (prevProps.onEdit !== this.props.onEdit) {\n            this.handleBack();\n        }\n\n\n        if (this.props.selectedBottom !== null && prevProps.selectedBottom !== this.props.selectedBottom) {\n            const slide = this.props.slides[this.props.selectedBottom === TYPE.NECKLACE ? 0 : 1];\n            const index = slide.cards.findIndex((c: Card) => c.type === this.props.selectedBottom);\n            if (slide.cards[index]) {\n                this.handleSelect(slide.cards[index], index, true).then();\n            }\n            this.setState({resetMorse: true});\n            this.setState({resetMorse: false});\n        }\n\n\n        if (prevProps.isMaterialPage !== this.props.isMaterialPage && isMobile) {\n\n            if (this.props.isMaterialPage) {\n                this.handleFinish();\n                this.setState({buybtn: true, isMaterialPage: false});\n            }\n\n        }\n\n        if (prevProps.selectMobileButton !== this.props.selectMobileButton && isMobile) {\n            this.setState({finishMobileButton: this.props.finishMobile});\n            if (this.state.currentType === TYPE.NECKLACE && !this.props.finishMobile) {\n                this.setState({isCardSelected: true, selectedCard: this.state.currentIndex});\n                this.props.history.push('/');\n            }\n        }\n    }\n\n\n    backLogic = () => {\n        if (this.state.isCardSelected) {\n            this.setState({isCardSelected: false, step: 1, selectedCard: -1, isMaterialPage: false, buybtn: false});\n            this.props.onBack(true);\n            this.props.history.replace('/');\n        } else {\n            this.props.onBack();\n        }\n    };\n\n\n    handleSelect = async (c: Card, index: number, forceOpen = false) => {\n        await this.setState({currentType: c.type, currentIndex: index});\n        if (!isMobile) {\n            if (c.type === TYPE.NECKLACE || forceOpen) {\n                await this.setState({isCardSelected: true, selectedCard: index});\n            }\n            this.props.history.push('/');\n        }\n        this.props.onClick(typeToString(c.type));\n    };\n\n    getNe = (index: number) => {\n        if (this.state.isCardSelected)\n            return this.state.selectedCard === index ? 'full-width' : 'no-width';\n        return '';\n    };\n\n    handleNext = () => {\n        this.setState(prevState => ({...prevState, step: prevState.step + 1}));\n\n        if (!this.state.isMaterialPage)\n            this.setState({isMaterialPage: true});\n\n        // console.log(\"here\")\n    };\n\n    handleFinish = () => {\n        this.setState(prevState => ({...prevState, step: prevState.step + 1}));\n    };\n\n    handleBack = () => {\n        this.backLogic();\n    };\n\n\n    handleMaterial = (material: string) => {\n        this.props.onMaterialClicked(material);\n        if (!isMobile) {\n            this.handleFinish();\n            this.setState({buybtn: true, isMaterialPage: false});\n        }\n    };\n\n\n    render() {\n        const slide = this.props.slides[this.props.slideIndex];\n        const currentCard = slide.cards[this.state.selectedCard];\n        const isMorseEdit = !!this.state.isCardSelected &&\n            ((this.state.step === 1) || (this.state.step === 2 && currentCard?.stepsNumber === 2));\n        const isBuy = (this.state.buybtn && !this.props.isAfterBuyPage);\n        return (\n            <div className={`grid-container first-card-background ${isBuy ? 'buy-page' : ''}`}\n                 onMouseMove={this.handleMouseMove}>\n                {!this.state.isCardSelected && !this.state.isMaterialPage && !this.state.buybtn && !this.state.hover &&\n                <div className=\"main-grid-title\"\n                     onClick={() => this.handleSelect(this.state.currentType ? this.state.currentType : TYPE.EARRING, 0)}\n                >{this.props.slides[this.props.slideIndex].title}</div>}\n\n                {this.props.slides[this.props.slideIndex].cards.map((c: Card, index: number) => {\n                    let image = c.image;\n                    if (this.state.isCardSelected) {\n                        image = (this.state.step === 1) ? c.editImage : c.simImage;\n                    }\n                    return (\n                        <div key={index} className={`mini-item ${this.getNe(index)}`} style={{\n                            height: (!isSamsungBrowser && isMobile) ? '79vh' : '100%',\n                            animation: `mymove ${2 - index + 2}s`,\n                        }}>\n                            <CardComponent\n                                mouseText={typeToString(c.type)}\n                                selectedCard={true}\n                                isCardSelected={this.state.isCardSelected}\n                                backgroundImage={image}\n                                onMouseMove={(mouseText: string) => {\n                                    this.setState({mouseText: mouseText});\n                                    this.setState({currentType: c.type, currentIndex: index});\n                                }}\n                                cardType={c.type}\n                                onMouseEnter={() => {\n                                    if (!isMobile) this.setState({hover: true});\n                                }}\n                                onMouseLeave={() => {\n                                    if (!isMobile) this.setState({hover: false});\n                                }}\n                                isBuyPage={isBuy}\n                                isAfterBuyPage={this.props.isAfterBuyPage}\n                                onClick={() => this.handleSelect(c, index)}\n                                isMaterialPage={this.state.isMaterialPage || this.state.buybtn}\n                                buyPage={this.state.buybtn && !this.props.isAfterBuyPage}\n                                isMorseEdit={isMorseEdit}\n                            />\n                        </div>\n                    );\n                })}\n\n                {isMobile && this.props.displayState.summary &&\n                <div className=\"mobile-terms-conditions\">\n                    <div className=\"outsider-anchor\">\n                        <a target=\"blank\" href=\"https://www.google.com/\">TERMS & CONDITIONS</a>\n                    </div>\n                    <div className=\"outsider-anchor\">\n                        <a target=\"blank\" href=\"https://www.ynet.co.il/\">PRIVACY POLICY</a>\n                    </div>\n                </div>\n                }\n\n\n                {this.state.buybtn && !this.props.isAfterBuyPage && <div className='morse-btns'>\n                    <div className=\"buy-morse\" onClick={this.props.buyAction.bind(this)}>\n                        BUY <img src={arrow_black} className=\"arrow\" alt=\"\"/></div>\n                </div>}\n\n                {this.state.isMaterialPage &&\n                <MaterialComponent\n                    slider={this.props.slides[this.props.slideIndex]}\n                    onClick={this.handleMaterial}\n                />}\n                {/*<div>{`1111-${String(this.state.isCardSelected)}-${String(this.state.isMaterialPage)}-${String(this.state.resetMorse)}`}</div>*/}\n                {this.state.isCardSelected &&\n                <MorsePage selectEventMobile={this.props.selectMobileButton}\n                           resetMorse={this.state.resetMorse}\n                           buyAction={this.props.buyAction.bind(this)}\n                           finishMobileButton={this.state.finishMobileButton}\n                           handleBack={this.handleBack} handleNext={this.handleNext}\n                           step={this.state.step}\n                           card={currentCard}\n                           isAfterBuyPage={this.props.isAfterBuyPage}\n                           onMorseType={this.props.onMorseType.bind(this)}\n                           isBuyPage={this.state.buybtn}\n                           firstChain={this.props.firstChain}\n                           secondChain={this.props.secondChain}\n                           showOnlyMorseChain={this.state.isMaterialPage}\n                />}\n\n\n                {!this.state.isCardSelected && this.state.hover &&\n                <div className=\"mouse-movement\"\n                     style={{\n                         top: this.state.y - 6,\n                         left: this.state.mouseDirection === \"right\" ? this.state.x + 25 : this.state.mouseText.length < 13 ? this.state.x - 235 : this.state.x - 195\n                     }}>\n                    SELECT {this.state.mouseText}\n                </div>}\n\n            </div>\n        );\n    }\n\n\n    getMouseDirection(e: any) {\n        //deal with the horizontal case\n        // console.log('1111' , e.pageX,e.target.getBoundingClientRect().left,e.target.clientWidth,e);\n        if (this.state.oldX < e.pageX) {\n            this.setState({mouseDirection: \"left\"});\n        } else if (this.state.oldX > e.pageX) {\n            this.setState({mouseDirection: \"left\"});\n        }\n        this.setState({oldX: e.pageX});\n    }\n}\n\nconst mapStateToProps = (state: IReducers) => {\n    const {displayState} = state.mainState;\n    return {\n        displayState\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FirstColumnGrid);\n","import './ColumnGrid.scss';\nimport React from 'react';\nimport CardComponent from '../Card/CardComponent';\nimport {Card, typeToString, TYPE} from '../../../models/Interfaces';\nimport MorsePage from '../../screens/MorsePage/MorsePage';\nimport {RouteComponentProps} from \"react-router\";\nimport {isMobile, isSamsungBrowser} from '../../../assets/Constants';\nimport MaterialComponent from '../Material/MaterialComponent';\nimport arrow_black from '../../../assets/images/arrow-black.svg';\n\ninterface Props {\n    slides: any;\n    onClick: Function;\n    slideIndex: number;\n    onMorseType: (chainPriceAndWord: any) => void;\n    onBack: Function;\n    selectMobileButton: boolean;\n    finishMobile: boolean;\n    buyAction: Function;\n    isAfterBuyPage: boolean;\n    selectedBottom: any;\n    onEdit: boolean;\n    onMaterialClicked: Function;\n    firstChain: any;\n    secondChain: any;\n    isMaterialPage: boolean;\n\n}\n\ninterface State {\n    x: number;\n    y: number;\n    mouseText: string;\n    mouseDirection: string;\n    oldX: number;\n    isCardSelected: boolean;\n    selectedCard: number;\n    step: number;\n    currentType: any;\n    currentIndex: number;\n    finishMobileButton: boolean;\n    resetMorse: boolean;\n    isMaterialPage: boolean;\n    buybtn: boolean;\n    hover: boolean;\n\n}\n\nexport class SecondColumnGrid extends React.Component<Props & RouteComponentProps, State> {\n\n    unlisten: any;\n\n    constructor(props: Props & RouteComponentProps) {\n        super(props);\n        this.state = {\n            step: 1,\n            isCardSelected: false,\n            selectedCard: -1,\n            x: 0, y: 0, mouseText: '',\n            mouseDirection: 'left',\n            oldX: 0,\n            currentType: TYPE.SINGLE_EARRING,\n            currentIndex: -1,\n            finishMobileButton: false,\n            resetMorse: false,\n            isMaterialPage: false, buybtn: false,\n            hover: false\n        };\n    }\n\n    handleMouseMove = (e: any) => {\n        this.setState({\n            x: e.clientX,\n            y: e.clientY\n        });\n        this.getMouseDirection(e);\n    };\n\n    componentDidMount(): void {\n        if (this.props.selectedBottom !== null) {\n            const slide = this.props.slides[1];\n            const index = slide.cards.findIndex((c: Card) => c.type === this.props.selectedBottom);\n            if (slide.cards[index])\n                this.handleSelect(slide.cards[index], index).then();\n        }\n\n        this.unlisten = this.props.history.listen((e, b) => {\n            if (b === 'POP') {\n                this.backLogic();\n            }\n        });\n    }\n\n    componentWillUnmount(): void {\n        this.unlisten();\n    }\n\n    backLogic = () => {\n        this.props.onBack(this.state.isCardSelected);\n        this.props.history.replace('/');\n        this.setState({isCardSelected: false, selectedCard: -1, isMaterialPage: false, buybtn: false});\n    };\n\n    componentDidUpdate(prevProps: Props) {\n        if (prevProps.onEdit !== this.props.onEdit) {\n            this.handleBack();\n        }\n        if (this.props.selectedBottom !== null && prevProps.selectedBottom !== this.props.selectedBottom) {\n            const slide = this.props.slides[this.props.selectedBottom === TYPE.NECKLACE ? 0 : 1];\n            const index = slide.cards.findIndex((c: Card) => c.type === this.props.selectedBottom);\n            if (slide.cards[index])\n                this.handleSelect(slide.cards[index], index).then();\n            this.setState({resetMorse: true});\n            this.setState({resetMorse: false});\n        }\n\n        if (prevProps.isMaterialPage !== this.props.isMaterialPage && isMobile) {\n\n            if (this.props.isMaterialPage) {\n                this.setState({buybtn: true, isMaterialPage: false});\n            }\n\n        }\n\n        if (prevProps.selectMobileButton !== this.props.selectMobileButton && isMobile) {\n            this.setState({finishMobileButton: this.props.finishMobile});\n            if (this.props.slideIndex === 1 && this.state.currentIndex > -1 && !this.props.finishMobile) {\n                this.setState({isCardSelected: true, step: 1, selectedCard: this.state.currentIndex});\n            }\n        }\n    }\n\n    handleSelect = async (c: Card, index: number) => {\n        await this.setState({currentIndex: index, currentType: c.type});\n        this.props.onClick(typeToString(c.type));\n        if (!isMobile) {\n            if (this.props.slideIndex === 1) {\n                this.setState({isCardSelected: true, step: 1, selectedCard: index});\n            }\n        }\n    };\n\n    getNe = (index: number) => {\n        if (this.state.isCardSelected)\n            return this.state.selectedCard === index ? 'full-width' : 'no-width';\n        return '';\n    };\n\n    handleNext = () => {\n\n\n        if (this.state.step < 3)\n            this.setState(prevState => ({...prevState, step: prevState.step + 1}));\n        // if(!this.state.isMaterialPage)\n        // console.log(\"this.state.currentType\",typeToString(this.state.currentType))\n        // console.log(\"this.state.step\",this.state.step)\n\n        if ((this.state.currentType !== TYPE.DISTINCT_PAIR) || (this.state.currentType === TYPE.DISTINCT_PAIR\n            && this.state.step === 2)) {\n            this.setState({isMaterialPage: true});\n        }\n\n\n    };\n\n    handleBack = () => {\n        this.backLogic();\n    };\n\n    handleMaterial = (material: string) => {\n        this.props.onMaterialClicked(material);\n        if (!isMobile) {\n            this.setState({buybtn: true, isMaterialPage: false});\n        }\n    };\n\n    render() {\n        const slide = this.props.slides[this.props.slideIndex];\n        const currentCard = slide.cards[this.state.selectedCard];\n        const isMorseEdit = !!this.state.isCardSelected &&\n            ((this.state.step === 1) || (this.state.step === 2 && currentCard?.stepsNumber === 2));\n        const isBuy = (this.state.buybtn && !this.props.isAfterBuyPage);\n\n        return (\n            <div style={{backgroundColor: '#4c4c4c'}}\n                 className={`grid-container second-card-background second-grid ${isBuy ? 'buy-page' : ''} ` +\n                 `${this.state.isCardSelected ? 'second-grid-selected' : ''}`}\n                 onMouseMove={this.handleMouseMove}>\n                {!this.state.isCardSelected && !this.state.isMaterialPage && !this.state.buybtn && !this.state.hover &&\n                <div className=\"main-grid-title\"\n                     onClick={() => this.handleSelect(this.state.currentType ? this.state.currentType : TYPE.EARRING, 0)}>\n                    {this.props.slides[this.props.slideIndex].title}</div>}\n                {this.props.slides[this.props.slideIndex].cards.map((c: Card, index: number) => {\n                    let image = c.image;\n                    if (this.state.isCardSelected) {\n                        image = (this.state.step === 1 ||\n                            (this.state.step === 2 && slide.cards[this.state.selectedCard].stepsNumber === 2)) ?\n                            c.editImage : c.simImage;\n                    }\n                    return (\n                        <div key={index} className={`mini-item ${this.getNe(index)}`} style={{\n                            height: (!isSamsungBrowser) && isMobile ? '26.3vh' : isMobile ? '30.65vh' : '100%',\n                            animation: `${!isSamsungBrowser && isMobile ? 'mymovesecond-chrome' : 'mymovesecond'} ${index + 0.5}s`\n                        }}>\n                            <CardComponent\n                                mouseText={typeToString(c.type)}\n                                selectedCard={true}\n                                isCardSelected={this.state.isCardSelected}\n                                backgroundImage={image}\n                                onMouseMove={(mouseText: string) => {\n                                    this.setState({mouseText: mouseText});\n                                }}\n                                onMouseEnter={() => {\n                                    if (!isMobile) this.setState({hover: true});\n                                }}\n                                onMouseLeave={() => {\n                                    if (!isMobile) this.setState({hover: false});\n                                }}\n                                isBuyPage={isBuy}\n                                isAfterBuyPage={this.props.isAfterBuyPage}\n                                onClick={() => this.handleSelect(c, index)}\n                                isMaterialPage={this.state.isMaterialPage || this.state.buybtn}\n                                cardType={c.type}\n                                buyPage={this.state.buybtn}\n                                isMorseEdit={isMorseEdit}\n                            />\n                        </div>\n                    );\n                })}\n\n                {this.state.isMaterialPage &&\n                <MaterialComponent slider={this.props.slides[this.props.slideIndex]} onClick={this.handleMaterial}\n                />}\n\n                {isBuy && <div className='morse-btns'>\n                    <div className=\"buy-morse\" onClick={this.props.buyAction.bind(this)}>\n                        BUY <img src={arrow_black} className=\"arrow\" alt=\"\"/>\n                    </div>\n                </div>}\n\n\n                {this.state.isCardSelected &&\n                <MorsePage selectEventMobile={this.props.selectMobileButton}\n                           buyAction={this.props.buyAction.bind(this)}\n                           finishMobileButton={this.state.finishMobileButton}\n                           handleBack={this.handleBack}\n                           handleNext={this.handleNext}\n                           step={this.state.step}\n                           card={currentCard}\n                           isAfterBuyPage={this.props.isAfterBuyPage}\n                           resetMorse={this.state.resetMorse}\n                           onMorseType={this.props.onMorseType.bind(this)}\n                           isBuyPage={this.state.buybtn}\n                           firstChain={this.props.firstChain}\n                           secondChain={this.props.secondChain}\n                           showOnlyMorseChain={this.state.isMaterialPage}\n                />}\n                {!this.state.isCardSelected && this.state.hover &&\n                <div className=\"mouse-movement\"\n                     style={{\n                         top: this.state.y - 6,\n                         left: this.state.mouseDirection === \"right\" ? this.state.x + 20 : this.state.mouseText.length < 13 ? this.state.x - 115 : this.state.x - 215\n                     }}>\n                    {this.state.mouseText}\n                </div>}\n            </div>\n        );\n    }\n\n    getMouseDirection(e: any) {\n        if (this.state.oldX < e.pageX) {\n            this.setState({mouseDirection: \"left\"});\n        } else {\n            this.setState({mouseDirection: \"left\"});\n        }\n        this.setState({oldX: e.pageX});\n    }\n}\n","import Client, { Cart } from 'shopify-buy';\n\nconst client = Client.buildClient({\n    domain: 'ame-dev.myshopify.com',\n    storefrontAccessToken: '275b72ed93cbb3624b17f3f290330364'\n});\n\n// 1. Get products and create lineItems from them \n// https://shopify.github.io/js-buy-sdk/\n// Returns all products\nexport const fetchProducts = (): Promise<Client.Product[]> => {\n    return client.product.fetchAll();\n}\n\n// 2. Create checkout\nexport const createCheckout=(): Promise<Cart> => {\n    return client.checkout.create();\n}\n\nexport const fetchCheckout=(checkoutId: string) => {\n    return client.checkout.fetch(checkoutId);\n}\n\n\nexport const updateLineItems=(checkoutId: string) => {\n\n}\n\n// 3. Add line items to checkout\nexport const addLineItems=(checkoutId: string, lineItems: any): Promise<Client.Cart> => {\n    // const lineItemsToAdd = [{\n    //     variantId: '',\n    //     quantity: 1,\n    //     customAttributes: [{key: \"MyKey\", value: \"MyValue\"}]\n    // }];\n\n    return client.checkout.addLineItems(checkoutId, lineItems);\n}\n\n// 4. Redirect to checkout url after items were added\n\nexport const fetchProductByHandle=(handle: string) => {\n    return client.product.fetchByHandle(handle);\n    // .then((product) => {\n    //     // Do something with the product\n    //     console.log(product);\n    // });\n}\n","import React, {createRef, useEffect, useRef} from \"react\";\n\nimport './HomePage.scss';\nimport {IReducers} from \"../../../redux/store\";\nimport {connect} from \"react-redux\";\nimport BottomBar from \"../../SharedComponents/BottomBar/BottomBar\";\nimport {Types, typeToString, TYPE} from \"../../../models/Interfaces\";\nimport {\n    userChoiceCategoryAction,\n    userChoiceStyleAction,\n    userChoiceMaterialAction, toggleSummaryAction, setSummaryStateAction\n} from \"../../../redux/actions/MainAction\";\nimport {RouteComponentProps} from \"react-router\";\nimport FirstColumnGrid from \"../../SharedComponents/GridComponent/FirstColumnGrid\";\nimport {SecondColumnGrid} from \"../../SharedComponents/GridComponent/SecondColumnGrid\";\nimport {isMobile, isSamsungBrowser, createPopupWin} from \"../../../assets/Constants\";\nimport arrow from '../../../assets/images/arrow-white.svg';\nimport * as shop from '../../../Services/shopify';\n\ninterface Props {\n    slides: any[];\n    categoryChoice: (category: string) => void;\n    styleChoice: (style: string) => void;\n    materialChoice: (material: string) => void;\n    userChoice: any;\n    displayState: any;\n    toggleSummary: () => void;\n    setSummaryState: (summaryState: boolean) => void;\n}\n\ninterface State {\n    slideIndex: number;\n    userChoice: any;\n    chainPriceAndDetails: any | null;\n    cardClicked: boolean;\n    selectClicked: boolean;\n    currentType: string;\n    buttonText: string;\n    hideBottomBar: boolean;\n    showProductDetails: boolean;\n    isAfterBuyPage: boolean;\n    selectedBottom: any;\n    onEdit: boolean;\n    clickedMaterial: boolean;\n    currentMaterial: string;\n    isMaterial: boolean;\n}\n\nclass HomePage extends React.Component<Props & RouteComponentProps, State> {\n\n    unlisten: any;\n\n    constructor(props: Props & RouteComponentProps) {\n        super(props);\n        this.state = {\n            slideIndex: 0,\n            userChoice: undefined,\n            chainPriceAndDetails: null,\n            cardClicked: false,\n            currentType: '',\n            selectClicked: false,\n            buttonText: 'SELECT',\n            hideBottomBar: false,\n            showProductDetails: false,\n            isAfterBuyPage: false,\n            selectedBottom: null,\n            onEdit: false,\n            clickedMaterial: false,\n            currentMaterial: '',\n            isMaterial: false\n        };\n\n    }\n\n\n    resetChain() {\n        this.setState({chainPriceAndDetails: null});\n    }\n\n    componentDidMount() {\n        this.setState({userChoice: this.props.userChoice});\n        this.unlisten = this.props.history.listen((e, b) => {\n            if (b === 'POP') {\n                this.resetChain();\n            }\n        });\n    }\n\n    componentWillUnmount(): void {\n        this.unlisten();\n    }\n\n    handleEditBtn = () => {\n        this.setState(prevState => ({\n            ...prevState,\n            showProductDetails: false,\n            hideBottomBar: false,\n            onEdit: !prevState.onEdit\n        }));\n    };\n\n    onBack = (aOnlyResetChain = false) => {\n        if (!aOnlyResetChain) {\n            this.setState(prevState => ({...prevState, slideIndex: prevState.slideIndex - 1}));\n        }\n        this.resetChain();\n    };\n\n    onClick(type: string) {\n        this.setState({cardClicked: true, currentType: type});\n        if (!isMobile || (this.state.selectClicked)) {\n            if (this.props.slides[this.state.slideIndex].screenType === Types.CATEGORY) {\n                this.props.categoryChoice(type);\n            }\n            if (this.props.slides[this.state.slideIndex].screenType === Types.MATERTIAL) {\n                this.props.materialChoice(type);\n            }\n            if (this.props.slides[this.state.slideIndex].screenType === Types.STYLE) {\n                this.props.styleChoice(type);\n            }\n            if (this.state.slideIndex < 1 && type !== typeToString(TYPE.NECKLACE)) {\n                this.setState({slideIndex: (this.state.slideIndex + 1)});\n            }\n        }\n    }\n\n    handleBottomBarClicked = (value: any) => {\n        switch (value.keyinput) {\n            case \"style\":\n                if (value.value.key === TYPE.NECKLACE) {\n                    this.props.categoryChoice(typeToString(value.value.key));\n                    this.props.styleChoice(\"\");\n                    this.setState({slideIndex: 0});\n                } else {\n                    this.props.categoryChoice(typeToString(TYPE.EARRING));\n                    this.props.styleChoice(typeToString(value.value.key));\n                }\n                this.resetChain();\n                this.setState({selectedBottom: value.value.key});\n                break;\n            case \"material\":\n                this.props.materialChoice(typeToString(value.value.key));\n                break;\n        }\n    };\n\n    isTyping = () => {\n\n        if (this.state.chainPriceAndDetails) {\n            if (this.state.currentType === typeToString(TYPE.IDENTICAL_PAIR) || this.state.currentType === typeToString(TYPE.DISTINCT_PAIR)) {\n                if (this.state.chainPriceAndDetails?.firstChain.chain.length > 0) {\n\n                    if (this.state.chainPriceAndDetails?.secondChain.chain.length > 0) {\n                        if (this.state.buttonText !== 'DONE')\n                            this.setState({buttonText: 'DONE'});\n                        return true;\n                    }\n                    if (this.state.buttonText !== 'NEXT')\n                        this.setState({buttonText: 'NEXT'});\n                    return true;\n                }\n            } else {\n\n                if (this.state.chainPriceAndDetails?.firstChain.chain.length > 0) {\n                    if (this.state.buttonText !== 'DONE')\n                        this.setState({buttonText: 'DONE'});\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    buyAction = async () => {\n        this.setState({isAfterBuyPage: true, buttonText: 'CONTINUE SHOPPING'});\n        let dotHandle, dashHandle;\n        switch (this.props.userChoice.material) {\n            case 'WHITE GOLD':\n                dotHandle = 'white-gold-morse-diamond-dot';\n                dashHandle = 'white-gold-morse-diamond-dash';\n                break;\n            default:\n                dotHandle = 'diamond-dot';\n                dashHandle = 'morse-diamond-dash';\n                break;\n        }\n\n        Promise.all([// shop.fetchProducts(),\n            shop.createCheckout(),\n            shop.fetchProductByHandle('morse-custom-jewelry'),\n            shop.fetchProductByHandle(dotHandle),\n            shop.fetchProductByHandle(dashHandle)\n        ])\n            .then(data => {\n                const checkout: any = data[0];\n                const morseCustomJewelry = data[1];\n                const yellowDot = data[2];\n                const yellowDash = data[3];\n                const variantId = morseCustomJewelry.variants[0].id;\n                const yellowDotVariantId = yellowDot.variants[0].id;\n                const yellowDashVariantId = yellowDash.variants[0].id;\n\n                // Dummy item with all descriptions\n                const morsecjLineItem: any = {\n                    variantId,\n                    quantity: 1,\n                    customAttributes: []\n                };\n\n                // If user forgot to select material it will be yellow gold\n                let material = '';\n                if (this.props.userChoice.material) {\n                    material = this.props.userChoice.material;\n                } else {\n                    material = 'WHITE GOLD';\n                }\n\n                // Lets count dots and dashes\n                let dotsQty = 0, dashesQty = 0;\n                dotsQty = +this.state.chainPriceAndDetails.firstChain.chainPriceAndWord.dotSum;\n                dashesQty = +this.state.chainPriceAndDetails.firstChain.chainPriceAndWord.dashSum;\n\n                // Add description for necklace\n                if (this.props.userChoice.category === 'NECKLACE') {\n                    morsecjLineItem.customAttributes.push(\n                        {\n                            key: 'Necklace',\n                            value: `${material}. “${this.state.chainPriceAndDetails?.firstChain.chain.toUpperCase()}”`\n                        });\n                }\n\n                // Description for earring\n                if (this.props.userChoice.category === 'EARRING') {\n                    morsecjLineItem.customAttributes.push(\n                        {\n                            key: 'Earring 1',\n                            value: `${material}. “${this.state.chainPriceAndDetails?.firstChain.chain.toUpperCase()}”`\n                        });\n\n                    // If there are 2 earrings\n                    if (this.props.userChoice.style === 'IDENTICAL PAIR' || this.props.userChoice.style === 'DISTINCT PAIR') {\n                        morsecjLineItem.customAttributes.push(\n                            {\n                                key: 'Earring 2',\n                                value: `${material}. “${this.state.chainPriceAndDetails?.secondChain.chain.toUpperCase()}”`\n                            });\n\n                        // Add some dots\n                        dotsQty += +this.state.chainPriceAndDetails?.secondChain.chainPriceAndWord.dotSum;\n                        dashesQty += +this.state.chainPriceAndDetails?.secondChain.chainPriceAndWord.dashSum;\n                    }\n                }\n\n                // Sum it up\n                const lineItems = [morsecjLineItem, {\n                    variantId: yellowDotVariantId,\n                    quantity: dotsQty,\n                }, {\n                    variantId: yellowDashVariantId,\n                    quantity: dashesQty,\n                }];\n                shop.addLineItems(checkout.id.toString(), lineItems)\n                    .then(cart => {\n                        createPopupWin(checkout.webUrl, \"shopify\", window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / 4, window.innerWidth / 4);\n                    });\n            });\n\n        return true;\n\n    };\n\n    donePhase = () => {\n        this.setState({hideBottomBar: true, showProductDetails: true});\n    };\n\n    onMaterialClicked = (material: string) => {\n\n        if (!isMobile) {\n            this.props.materialChoice(material);\n            this.setState({clickedMaterial: true});\n        }\n        this.setState({cardClicked: true});\n        this.setState({currentMaterial: material});\n    };\n\n    closeProductDetails = () => {\n        this.props.setSummaryState(false);\n    };\n\n    render() {\n        return (\n            <div className=\"container\" style={{height: (!isSamsungBrowser) && isMobile ? '87vh' : '100vh'}}>\n\n                <div className=\"version\">v25.1.0</div>\n                <div className=\"logo\"></div>\n                <MobileLoading/>\n                {this.state.slideIndex === 0 ?\n                    <FirstColumnGrid buyAction={this.buyAction.bind(this)} {...this.props} onBack={this.onBack}\n                                     slideIndex={this.state.slideIndex} slides={this.props.slides}\n                                     onMorseType={(chainPriceAndDetails: any) => {\n                                         //  console.log(\"ABC\",chainPriceAndDetails)\n                                         this.setState({chainPriceAndDetails: chainPriceAndDetails});\n                                     }}\n                                     onEdit={this.state.onEdit}\n                                     isAfterBuyPage={this.state.isAfterBuyPage}\n                                     selectMobileButton={this.state.selectClicked}\n                                     onClick={(type: string) => {\n                                         this.onClick(type);\n                                     }}\n                                     selectedBottom={this.state.selectedBottom}\n                                     finishMobile={this.state.buttonText === 'NEXT' || this.state.buttonText === 'DONE'}\n                                     onMaterialClicked={this.onMaterialClicked}\n                                     firstChain={this.state.chainPriceAndDetails ? this.state.chainPriceAndDetails.firstChain : {chain: \"\"}}\n                                     secondChain={this.state.chainPriceAndDetails ? this.state.chainPriceAndDetails.secondChain : {chain: \"\"}}\n                                     isMaterialPage={this.state.isMaterial}\n                    /> :\n                    <SecondColumnGrid buyAction={this.buyAction.bind(this)} {...this.props} onBack={this.onBack}\n                                      slideIndex={this.state.slideIndex} slides={this.props.slides}\n                                      onMorseType={(chainPriceAndDetails: any) => {\n                                          this.setState({chainPriceAndDetails: chainPriceAndDetails});\n                                      }}\n                                      onEdit={this.state.onEdit}\n                                      selectedBottom={this.state.selectedBottom}\n                                      isAfterBuyPage={this.state.isAfterBuyPage}\n                                      selectMobileButton={this.state.selectClicked}\n                                      onClick={(type: string) => {\n                                          this.onClick(type);\n                                      }}\n                                      finishMobile={this.state.buttonText === 'NEXT' || this.state.buttonText === 'DONE'}\n                                      onMaterialClicked={this.onMaterialClicked}\n                                      firstChain={this.state.chainPriceAndDetails ? this.state.chainPriceAndDetails.firstChain : {chain: \"\"}}\n                                      secondChain={this.state.chainPriceAndDetails ? this.state.chainPriceAndDetails.secondChain : {chain: \"\"}}\n                                      isMaterialPage={this.state.isMaterial}\n\n                    />\n                }\n                {(!this.state.hideBottomBar || !isMobile || this.state.isAfterBuyPage || !this.state.isMaterial) &&\n                <BottomBar\n                    className=\"bottom-bar\"\n                    userChoice={this.props.userChoice}\n                    selectedType={(value: any) => {\n                        this.handleBottomBarClicked(value);\n                    }}\n                    secret={this.state.chainPriceAndDetails}\n                    getSelected={async (selected: boolean, add: any = null) => {\n                        if (add) {\n                            console.log('4444', this.isTyping(), this.state.currentType);\n                            this.setState({isAfterBuyPage: false});\n                            return;\n                        }\n                        await this.setState({selectClicked: selected});\n                        if (this.state.buttonText === 'CONTINUE SHOPPING') {\n                            window.location.reload();\n                            return;\n                        }\n\n                        if (!this.isTyping()) {\n                            await this.onClick(this.state.currentType);\n                            this.setState({selectClicked: false, cardClicked: false});\n                        } else {\n                            await this.setState({selectClicked: false});\n                            if (this.state.currentMaterial !== '') {\n                                this.props.materialChoice(this.state.currentMaterial);\n                                await this.setState(\n                                    {\n                                        clickedMaterial: true,\n                                        isMaterial: true,\n                                    });\n                                return;\n                            }\n                            if (this.state.buttonText === 'DONE') {\n                                this.donePhase();\n                            }\n                        }\n                    }}\n\n                    buttonTextMobile={this.state.buttonText}\n                    cardClicked={this.state.cardClicked || this.isTyping()}\n                />}\n\n                {(this.props.displayState.summary || (isMobile && this.state.clickedMaterial)) &&\n                <ProductDetails category={this.props.userChoice.category}\n                                style={this.props.userChoice.style}\n                                material={this.props.userChoice.material}\n                                chainPriceAndDetails={this.state.chainPriceAndDetails}\n                                handleCloseBtn={this.closeProductDetails}\n                                buyAction={this.state.clickedMaterial && isMobile ? this.buyAction : null}/>}\n            </div>\n        );\n    }\n}\n\nconst MobileLoading = React.memo((props) => {\n    return (\n        <div className=\"mobile-loading\">\n            {isMobile && <div className='off-line'>\n                <div className=\"line hidden\"/>\n                <div className=\"line hide-line-mobile\"/>\n                <div className=\"line hide-line-mobile\"/>\n                <div className=\"line\"/>\n                <div className=\"line hide-line-mobile\"/>\n                <div className=\"line hide-line-mobile\"/>\n                <div className=\"line hidden\"/>\n            </div>}\n        </div>\n    );\n});\n\n\nconst ProductDetails = React.memo((props: any) => {\n    const productDetailsRef = createRef<HTMLDivElement>();\n    useEffect(() => {\n        const handleClick = (e: any) => {\n            if (productDetailsRef.current && !productDetailsRef.current.contains(e.target)) {\n                !props.buyAction && props.handleCloseBtn();\n            }\n        };\n        document.addEventListener(\"click\", handleClick);\n        return (() => {\n            document.removeEventListener(\"click\", handleClick);\n        });\n    }, []);\n    return (\n        <div className={`product-details ${props.buyAction ? 'buy' : ''}`} ref={productDetailsRef}>\n            {props.category && (props.category === 'NECKLACE' || props.style) &&\n            <div className=\"product-item\">{props.category === 'NECKLACE' ? props.category : props.style}</div>}\n\n            {!props.category &&\n            <div className=\"product-item\">Please Select a Category</div>}\n\n            {props.category && (props.category !== 'NECKLACE') && !props.style &&\n            <div className=\"product-item\">Please Select a Style</div>}\n\n            <div className=\"product-item\">{props.material !== '' ? props.material : 'MATERIAL - not selected yet'}</div>\n\n            {props.chainPriceAndDetails?.firstChain.chain && props.chainPriceAndDetails?.secondChain.chain !== '' &&\n            <div className=\"product-item\">\n                <span className=\"product-item-secret\">\n                    {props.chainPriceAndDetails?.firstChain.chain.toUpperCase()}{' - '}\n                    {(props.chainPriceAndDetails?.firstChain.chainPriceAndWord.length * .1).toFixed(2)}cm\n                </span>\n                {(props.chainPriceAndDetails?.secondChain.chain &&\n                    props.chainPriceAndDetails?.secondChain.chain !== '') &&\n                <span className=\"product-item-secret\">\n                    a{props.chainPriceAndDetails?.secondChain.chain.toUpperCase()}b{' - '}\n                    {(props.chainPriceAndDetails?.secondChain.chainPriceAndWord.length * .1).toFixed(2)}cm2\n                </span>}\n            </div>}\n\n            <div className=\"product-item\">\n                <span className=\"symbols-cost\">DASH: $980 <span className=\"letters-multiplications\">X{\n                    getMorseCharsCount( props.chainPriceAndDetails)}</span>\n                </span>\n                <span className=\"symbols-cost\">DOT: $560 <span className=\"letters-multiplications\">X{\n                    getMorseCharsCount( props.chainPriceAndDetails , false)}</span>\n                </span>\n            </div>\n\n            <div className=\"product-item\">PRICE: ${formatTotalPrice(props.chainPriceAndDetails)}</div>\n\n            {!props.buyAction &&\n            <div className=\"product-item edit-botton\" onClick={props.handleCloseBtn}>\n                X Close\n            </div>\n            }\n\n            {props.buyAction &&\n            <div className=\"buy-morse\" onClick={props.buyAction}> BUY <img src={arrow} className=\"arrow\" alt=\"\"/>\n            </div>\n            }\n        </div>\n    );\n});\n\nconst formatTotalPrice = (aChainPriceAndDetails: any) => {\n    const total = (aChainPriceAndDetails?.firstChain.chainPriceAndWord.totalPrice || 0) +\n        (aChainPriceAndDetails?.secondChain.chainPriceAndWord.totalPrice || 0);\n    const formattedTotal = parseFloat(total).toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n    return formattedTotal;\n};\n\nconst getMorseCharsCount = (aChainPriceAndDetails: any, aCountDashes = true) => {\n    const charType = aCountDashes ? 'dashSum' : 'dotSum'\n    const total = (aChainPriceAndDetails?.firstChain.chainPriceAndWord[charType] || 0) +\n        (aChainPriceAndDetails?.secondChain.chainPriceAndWord[charType] || 0);\n    return total;\n};\n\n\nconst mapStateToProps = (state: IReducers) => {\n    const {slides, userChoice, displayState} = state.mainState;\n    return {\n        slides, userChoice, displayState\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\n    return {\n        categoryChoice: (category: string) => dispatch(userChoiceCategoryAction(category)),\n        styleChoice: (style: string) => dispatch(userChoiceStyleAction(style)),\n        materialChoice: (material: string) => dispatch(userChoiceMaterialAction(material)),\n        setSummaryState: (summaryState: boolean) => dispatch(setSummaryStateAction(summaryState)),\n        toggleSummary: () => dispatch(toggleSummaryAction()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch\n} from 'react-router-dom';\nimport {AppRoutes} from \"./ScreensName\";\nimport HomePage from \"./screens/HomePage/HomePage\";\n\n\nexport class Main extends React.Component<{}> {\n\n    // constructor(props:any){\n    //     super(props)\n    //     window.screen.orientation.lock(\"natural\");\n    // }\n\n    getAppRoutes() {\n        return (\n            <Switch>\n                <Route path={AppRoutes.MORSE} component={HomePage}/>\n                <Route path={AppRoutes.ROOT} component={HomePage}/>\n                <Route path={AppRoutes.CATEGORY} component={HomePage}/>\n                <Route path={AppRoutes.STYLE} component={HomePage}/>\n            </Switch>\n        );\n    }\n\n    render() {\n        return (\n            <Router>{this.getAppRoutes()}</Router>\n        );\n    }\n}\n\n","import {Slider, TYPE, Types} from \"../../models/Interfaces\";\nimport {isMobile} from '../../assets/Constants';\nimport {ActionTypes} from '../actions/types';\n\nimport model_earring from '../../assets/images/model-earring.png';\nimport model_earrings_identical from '../../assets/images/model-earrings-identical.png';\nimport model_earrings_distinct from '../../assets/images/model-earrings-distinct.png';\nimport model_necklace from '../../assets/images/model-necklace.png';\n\nimport model_earring_4sim from '../../assets/images/model-earring-4sim.png';\nimport model_earrings_identical_4sim from '../../assets/images/model-earrings-identical-4sim.png';\nimport model_earrings_distinct_4sim from '../../assets/images/model-earrings-distinct-4sim.png';\nimport model_necklace_4sim from '../../assets/images/model-necklace-4sim.png';\n\nimport model_earring_4sim_4edit from '../../assets/images/model-earring-4sim-4edit.png';\nimport model_earrings_identical_4sim_4edit from '../../assets/images/model-earrings-identical-4sim-4edit.png';\nimport model_earrings_distinct_4sim_4edit from '../../assets/images/model-earrings-distinct-4sim-4edit.png';\nimport model_necklace_4sim_4edit from '../../assets/images/model-necklace-4sim-4edit.png';\n\nimport mobile_model_earring from '../../assets/images/mobile/model-earring.png';\nimport mobile_model_earrings_identical from '../../assets/images/mobile/model-earrings-identical.png';\nimport mobile_model_earrings_distinct from '../../assets/images/mobile/model-earrings-distinct.png';\nimport mobile_model_necklace from '../../assets/images/mobile/model-necklace.png';\n\nimport mobile_model_earring_4sim from '../../assets/images/mobile/model-earring-4sim.png';\nimport mobile_model_earrings_identical_4sim from '../../assets/images/mobile/model-earrings-identical-4sim.png';\nimport mobile_model_earrings_distinct_4sim from '../../assets/images/mobile/model-earrings-distinct-4sim.png';\nimport mobile_model_necklace_4sim from '../../assets/images/mobile/model-necklace-4sim.png';\n\nimport mobile_model_earring_4sim_4edit from '../../assets/images/mobile/model-earring-4sim-4edit.png';\nimport mobile_model_earrings_identical_4sim_4edit\n    from '../../assets/images/mobile/model-earrings-identical-4sim-4edit.png';\nimport mobile_model_earrings_distinct_4sim_4edit\n    from '../../assets/images/mobile/model-earrings-distinct-4sim-4edit.png';\nimport mobile_model_necklace_4sim_4edit from '../../assets/images/mobile/model-necklace-4sim-4edit.png';\n\nimport yellow_gold from '../../assets/images/yellow-gold.png';\nimport white_gold from '../../assets/images/white-gold.png';\n\n\nexport interface MainState {\n    slides: Slider[];\n    userChoice: any;\n    displayState: any;\n    price: number;\n\n}\n\nconst initState: MainState = {\n    slides: [{\n        cards: [\n            {\n                image: isMobile ? mobile_model_earring : model_earring,\n                simImage: isMobile ? mobile_model_earring_4sim : model_earring_4sim,\n                editImage: isMobile ? mobile_model_earring_4sim_4edit : model_earring_4sim_4edit,\n                type: TYPE.EARRING,\n                stepsNumber: 999,\n            },\n            {\n                image: isMobile ? mobile_model_necklace : model_necklace,\n                simImage: isMobile ? mobile_model_necklace_4sim : model_necklace_4sim,\n                editImage: isMobile ? mobile_model_necklace_4sim_4edit : model_necklace_4sim_4edit,\n                type: TYPE.NECKLACE,\n                stepsNumber: 1,\n                rightNecklaceClass: \"paint-morse-necklace\",\n                leftNecklaceClass: \"\",\n            }\n        ],\n        title: 'WHAT\\'S YOUR CATEGORY?', screenType: Types.CATEGORY,\n        material: {type: TYPE.NECKLACE, white: white_gold, yellow: yellow_gold}\n    },\n        {\n            cards: [\n                {\n                    image: isMobile ? mobile_model_earring : model_earring,\n                    simImage: isMobile ? mobile_model_earring_4sim : model_earring_4sim,\n                    editImage: isMobile ? mobile_model_earring_4sim_4edit : model_earring_4sim_4edit,\n                    type: TYPE.SINGLE_EARRING,\n                    stepsNumber: 1,\n                    rightNecklaceClass: \"single-paint-morse\",\n                    leftNecklaceClass: \"\"\n                },\n                {\n                    image: isMobile ? mobile_model_earrings_identical : model_earrings_identical,\n                    simImage: isMobile ? mobile_model_earrings_identical_4sim : model_earrings_identical_4sim,\n                    editImage: isMobile ? mobile_model_earrings_identical_4sim_4edit : model_earrings_identical_4sim_4edit,\n                    type: TYPE.IDENTICAL_PAIR,\n                    stepsNumber: 1,\n                    rightNecklaceClass: \"second-paint-morse-right\",\n                    leftNecklaceClass: \"second-paint-morse-left\",\n                    duplicateMorse: true\n                },\n                {\n                    image: isMobile ? mobile_model_earrings_distinct : model_earrings_distinct,\n                    simImage: isMobile ? mobile_model_earrings_distinct_4sim : model_earrings_distinct_4sim,\n                    editImage: isMobile ? mobile_model_earrings_distinct_4sim_4edit : model_earrings_distinct_4sim_4edit,\n                    type: TYPE.DISTINCT_PAIR,\n                    stepsNumber: 2,\n                    rightNecklaceClass: \"third-paint-morse-right\",\n                    leftNecklaceClass: \"third-paint-morse-left\"\n                }],\n            title: 'WHAT\\'S YOUR STYLE?', screenType: Types.STYLE,\n            material: {type: TYPE.EARRING, white: white_gold, yellow: yellow_gold}\n        }\n        // {cards:[{image:model_necklace,type:TYPE.WHITE_GOLD}\n        //     ,{image:model6,type:TYPE.YELLOW_GOLD}],title:'WHAT\\'S YOUR MATERIAL?',screenType:Types.MATERTIAL}\n    ],\n    userChoice: {\n        category: '',\n        style: '',\n        material: '',\n        chainDetails: {}\n    },\n    displayState: {\n        summary: false,\n    },\n    price: 0\n};\n\nconst MainReducer = (state: MainState = initState, action: any) => {\n    switch (action.type) {\n        case ActionTypes.USER_CHOICE_CATEGORY:\n            return {...state, userChoice: {...state.userChoice, category: action.choice.userChoice}};\n        case ActionTypes.USER_CHOICE_STYLE:\n            return {...state, userChoice: {...state.userChoice, style: action.choice.userChoice}};\n        case ActionTypes.USER_CHOICE_MATERIAL:\n            return {...state, userChoice: {...state.userChoice, material: action.choice.userChoice}};\n        case ActionTypes.USER_CHOICE_TYPE:\n            return {...state, userChoice: {...state.userChoice, chainDetails: action.choice.userChoice}};\n        case ActionTypes.SET_SUMMARY_STATE:\n            state.displayState.summary = action.payload ;\n            state.displayState = {...state.displayState} ;\n            return {...state};\n        case ActionTypes.TOGGLE_SUMMARY:\n            state.displayState.summary = !state.displayState.summary ;\n            state.displayState = {...state.displayState} ;\n            return {...state};\n        default:\n            return state;\n    }\n\n};\nexport default MainReducer;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport MainReducer, {MainState} from './reducers/MainReducer';\n\nconst initialState = {};\n\nexport interface IReducers {\n    mainState: MainState\n}\n\nconst reducers = combineReducers<IReducers>({\n    mainState: MainReducer\n});\n\nconst store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport './App.scss';\nimport {Main} from './components/Main';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nfunction App() {\n\n    return (\n        <Provider store={store}>\n            <Main/>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import 'fontsource-roboto';\n\nimport TagManager from 'react-gtm-module';\n\nconst tagManagerArgs = {\n    gtmId: 'GTM-TRS674H'\n};\n\nTagManager.initialize(tagManagerArgs);\n// import './assets/fonts/NEXTMonoPan-Thin.otf';\n// import './assets/fonts'\n// import './assets/fonts'\n// import './assets/fonts'\n// import './assets/fonts'\n// import './assets/fonts'\n// import './assets/fonts'\n// import './assets/fonts'\n\n\n// globalizeLocalizer()\n// import moment from  'moment';\n// import momentLocalizer from 'react-widgets-moment'\n// momentLocalizer()\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}